{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\address\\outaddress\\OutAddressMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\address\\outaddress\\OutAddressMain.vue","mtime":1580980182319},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["OutAddressMain.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA","file":"OutAddressMain.vue","sourceRoot":"src/components/address/outaddress","sourcesContent":["<template>                                                                  <!--외부주소록 메인-->\r\n    <div class=\"list row\">\r\n        <AddressSubMenu></AddressSubMenu>\r\n        <div >\r\n            <h4>외부 주소록</h4>\r\n            <hr>\r\n            <div class=\"form-inline my-2 my-lg-0\" style=\"margin-bottom: 2px; float: right\">\r\n                <!--성명,회사명으로 검색-->\r\n                <fieldset>\r\n                    <input type=\"text\" class=\"form-control mr-sm-2\" v-on:keypress=\"searchOutAddress\"\r\n                           placeholder=\"성명, 회사명 입력\" id=\"nameAndCompany\"\r\n                           required v-model=\"nameAndCompany\" name=\"nameAndCompany\"/>\r\n\r\n                    <button class=\"btn btn-secondary my-2 my-sm-0\" v-on:click=\"searchOutAddress\">검색</button>\r\n                    <button class=\"btn btn-secondary my-2 my-sm-0\" v-on:click=\"refreshList\">취소</button>\r\n                </fieldset>\r\n            </div>\r\n\r\n\r\n            <table boder=\"2\" class=\"table table-hover\" style=\"margin-top: 70px\">\r\n                <!--출력-->\r\n                <thead class=\"table-primary\">\r\n                <td>이름</td>\r\n                <td>휴대폰</td>\r\n                <td>이메일</td>\r\n                <td>회사</td>\r\n                <td>부서 전화번호</td>\r\n\r\n                </thead>\r\n                <tr v-for=\"(outAddress,index) in currentPosts\" :key=\"index\">\r\n                    <td>\r\n\r\n                        {{outAddress.outName}}\r\n\r\n                    </td>\r\n                    <td>{{outAddress.out_mobile}}</td>\r\n                    <td>{{outAddress.out_email}}</td>\r\n                    <td>{{outAddress.outCompany}}</td>\r\n                    <td>{{outAddress.out_dep_phone}}</td>\r\n                </tr>\r\n            </table>\r\n\r\n            <div>\r\n                <ul class=\"pagination\">\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoStart()\">&laquo;</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"prev()\"><</button>\r\n                    </li>\r\n                    <li v-for=\"(pageNum, index) in currentPages\" :key=\"index\" class=\"page-item\"\r\n                        :class=\"{'active':isSelected(index)}\">\r\n                        <button class=\"page-link\" @click=\"changePage(pageNum)\">{{pageNum}}</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"next()\">></button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoEnd()\">&raquo;</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import http from \"../../../http-common\";\r\n    import AddressSubMenu from \"../AddressSubMenu\";\r\n\r\n    export default {\r\n        name: \"outAddressMain\",\r\n        data() {\r\n            return {\r\n                nameAndCompany: \"\",\r\n                outaddress: [],\r\n                currentPosts: [],\r\n                count: 0,   //총 길이\r\n                countList: 5, // 한 페이지에 나올 게시글 개수\r\n                totalPage: 1, // 페이지 번호 묶음 (5 개씩 묶음)\r\n                page: 1,\r\n                countPage: 5,\r\n                startPage: 1,\r\n                endPage: 0,\r\n                totalPages: [],\r\n                currentPages: [], // 현재 페이지 번호들 배열 5개 짜리\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            setPagination() {\r\n                this.count = this.outaddress.length;\r\n                console.log(this.outaddress.length + \"길이 찍어보기\")\r\n                this.totalPage = this.count / this.countList; // 총 페이지 개수\r\n                if (this.count % this.countList > 0) {\r\n                    this.totalPage = Math.ceil(this.totalPage);\r\n                }\r\n                if (this.totalPage < this.page) {\r\n                    this.page = this.totalPage;\r\n                }\r\n\r\n                for (let i = 0; i < this.totalPage; i++) {\r\n                    this.totalPages[i] = i + 1;\r\n                }\r\n\r\n                this.startPage = ((this.page - 1) / this.countPage) * this.countPage + 1; // 시작 페이지\r\n\r\n                if (this.totalPage < 5) {\r\n                    this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                } else {\r\n                    this.endPage = this.startPage + this.countPage - 1; // 마지막 페이지\r\n                }\r\n\r\n                this.currentPages = [];\r\n                let j = this.startPage - 1;\r\n                for (let i = 0; i <= (this.endPage - this.startPage) && j <\r\n                this.totalPage; i++) {\r\n                    this.currentPages[i] = this.totalPages[j];\r\n                    j++;\r\n                    console.log(\"curr \" + i + \"번째 \" + this.currentPages[i]);\r\n                    console.log(\"startPage : \" + this.startPage)\r\n                    console.log(\"endPage : \" + this.endPage)\r\n                    console.log(\"totalPage : \" + this.totalPage)\r\n                    console.log(\"totalPages : \" + this.totalPages)\r\n\r\n                }\r\n\r\n\r\n            },\r\n            retrieveOutAddress() {\r\n                http\r\n                    .get(\"/outaddress/outaddress\")\r\n                    .then(response => {\r\n                        this.outaddress = response.data; // JSON are parsed automatically.\r\n                        console.log(response.data);\r\n                        this.setPagination();\r\n                        this.setCurrentPosts();\r\n\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            setCurrentPosts() {\r\n                this.currentPosts = [];\r\n                let j = (this.page - 1) * this.countList;\r\n                for (let i = 0; i < this.countList && j < this.outaddress.length; i++) {\r\n                    this.currentPosts[i] = this.outaddress[j];\r\n                    j++;\r\n                }\r\n\r\n            },\r\n\r\n            refreshList() {\r\n                this.retrieveOutAddress();\r\n                this.nameAndCompany = \"\";\r\n            },\r\n\r\n            searchOutAddress() {                                                         /*회사명, 성명으로 출력*/\r\n                if (this.nameAndCompany == \"\") return;\r\n                http\r\n                    .get(\"/outaddress/outaddress/nameAndCompany/\" + this.nameAndCompany)\r\n                    .then(response => {\r\n                        this.currentPosts = response.data, // JSON are parsed automatically.\r\n                            console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            changePage(pageNum) {\r\n                this.page = pageNum;\r\n                this.setCurrentPosts();\r\n                console.log(this.page)\r\n            },\r\n            isSelected(index) { //<< >>버튼 메서드, 눌렀을때 색깔 바뀌는거\r\n                /* 선택된 class 바인딩 위해 return 반환하는 메서드*/\r\n                if (index == (this.page - 1) % this.countPage) {\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            },\r\n            prev() {\r\n                if (this.startPage != 1) {\r\n                    this.startPage = this.startPage - 5;\r\n                    this.page = this.startPage;\r\n                    if (this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage - 1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage - 1;\r\n                    for (let i = 0; i <= (this.endPage - this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                        console.log(\"curr \" + i + \"번째 \" + this.currentPages[i]);\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n            },\r\n            next() {\r\n                if (this.endPage < this.totalPage) {\r\n                    this.startPage = this.endPage + 1;\r\n                    this.page = this.startPage;\r\n                    if (this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage - 1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage - 1;\r\n                    for (let i = 0; i <= (this.endPage - this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                        console.log(\"curr \" + i + \"번째 \" + this.currentPages[i]);\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n            },\r\n            gotoStart() {\r\n                // location.reload();\r\n                this.changePage(1);\r\n                this.setPagination()\r\n            },\r\n            gotoEnd() {\r\n                let pack = Math.ceil(this.totalPage / this.countPage)//몇덩이인지(페이지묶음수)\r\n                for (let i = 0; i < pack; i++)\r\n                    this.next()\r\n                this.changePage(this.totalPage);\r\n            }\r\n\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.retrieveOutAddress();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n\r\n        },\r\n        components: {\r\n            AddressSubMenu\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .list {\r\n        text-align: center;\r\n        max-width: 90%;\r\n        /*  margin: auto;*/\r\n        margin-left: 15%;\r\n    }\r\n\r\n\r\n    .table {\r\n        width: 80%;\r\n        margin: auto;\r\n        text-align: center;\r\n    }\r\n\r\n</style>"]}]}