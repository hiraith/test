{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\posts\\DepBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\posts\\DepBoard.vue","mtime":1581408201659},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0U3VibWVudSBmcm9tICIuL1Bvc3RTdWJtZW51IjsKaW1wb3J0IGh0dHAgZnJvbSAiLi4vLi4vaHR0cC1jb21tb24iOwppbXBvcnQgcm91dGVyIGZyb20gIi4uLy4uL3JvdXRlciI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiYm9hcmQiLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwb3N0OiB7CiAgICAgICAgICAgICAgICBwb3N0X2lkOiAiIiwKICAgICAgICAgICAgICAgIGJvYXJkX25hbWU6ICIiLAogICAgICAgICAgICAgICAgcG9zdF93cml0ZXI6ICIiLAogICAgICAgICAgICAgICAgcG9zdF9zdWJqZWN0OiAiIiwKICAgICAgICAgICAgICAgIHBvc3RfY29udGVudDogIiIsCiAgICAgICAgICAgICAgICBwb3N0X2NyZWF0ZWQ6ICIiLAogICAgICAgICAgICAgICAgcG9zdF92aWV3OiAiIgogICAgICAgICAgICB9LAogICAgICAgICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICAgICAgICBlbXBJRDogIiIsCiAgICAgICAgICAgIGRlcF9pZDogIiIsCiAgICAgICAgICAgIGJvYXJkX25hbWU6IiIKCgoKICAgICAgICB9OwogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBzdWJNZW51OiBQb3N0U3VibWVudQogICAgfSwKICAgIG1ldGhvZHM6IHsKCiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwogICAgICAgIC8v7J6F66Cl7ZWcIOuNsOydtO2EsCDsoIDsnqXtlZjripQg66mU7ISc65OcCiAgICAgICAgdGVzdGJ1dHRvbigpIHsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5kZXBfaWQpCiAgICAgICAgfSwKICAgICAgICAvL+yDiOuhnOyatCDqsozsi5ztjJDsnYQg66eM65Ok7Ja0IOyggOyepe2VmOuKlCDrqZTshJzrk5wKICAgICAgICBzYXZlQm9hcmQoKXsKICAgICAgICAgICAgdmFyIEJvYXJkID17CiAgICAgICAgICAgICAgICBib2FyZF9uYW1lOnRoaXMuYm9hcmRfbmFtZSwKICAgICAgICAgICAgICAgIGRlcF9pZDp0aGlzLmRlcF9pZAogICAgICAgICAgICB9OwogICAgICAgICAgICBodHRwCiAgICAgICAgICAgICAgICAucG9zdCgiL2JvYXJkL3NhdmVCb2FyZCIsQm9hcmQpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PnsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIGFsZXJ0KCLsg4gg6rKM7Iuc7YyQ7J20IOuTseuhneuQmOyXiOyKteuLiOuLpCEhIik7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvZGVwX3BzdCIpOwogICAgICAgIH0sCiAgICAgICAgLy/snbTsoIQg7Y6Y7J207KeA66GcIOuPjOyVhOqwgOuKlCDrqZTshJzrk5wKICAgICAgICBiYWNrbGlzdCgpewogICAgICAgICAgICBoaXN0b3J5LmdvKC0xKTsKICAgICAgICB9LAogICAgICAgIGdldE5hbWUobG9naW5faWQpIHsKICAgICAgICAgICAgLyog7IKs7JuQ67KI7Zi47JeQIO2VtOuLue2VmOuKlCDsgqzsm5DrqoUg6rCA7KC47Jik64qUIOuplOyGjOuTnCAqLwogICAgICAgICAgICBodHRwCiAgICAgICAgICAgICAgICAucG9zdCgiL2xvZ2luL25hbWUvIiArIGxvZ2luX2lkKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMucG9zdC5wb3N0X3dyaXRlciA9IHJlc3BvbnNlLmRhdGE7IC8vIHN1cnZleV93cml0ZXIg7JeQIO2YhOyerCDroZzqt7jsnbjtlZwg7IKs7JuQ66qF7J20IOuTpOyWtOqwkC4KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgfSwgLy8gRW5kIC0gZ2V0TmFtZSgpCiAgICAgICAgZ2V0RW1wSW5mbyhpZCkgeyAgICAvLyDrp6TqsJzrs4DsiJggaWTripQgdGhpcy5lbXBsb3llZS5lbXBfaWQg7J2064ukLiA6IG1vdW50ZWQoKeuVjCDtmLjstpzrkJjripQg66mU7IaM65OcLgogICAgICAgICAgICBodHRwCiAgICAgICAgICAgICAgICAucG9zdCgiL215cGFnZS8iICsgaWQpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgLy8g7J2R64u1IOuNsOydtO2EsOulvCBlbXBsb3llZSDrjbDsnbTthLDsl5Ag64yA7J6F7ZWY6riwLgogICAgICAgICAgICAgICAgICAgIHRoaXMuZGVwX2lkID0gcmVzcG9uc2UuZGF0YS5kZXBfaWQ7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5kZXBfaWQrIiDrsJvslYQg7JioIGRlcElEPyIpCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4gewogICAgICAgICAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgd3JpdGVDaGVjaygpIHsKICAgICAgICAgICAgbGV0IHdyaXRlX2NoayA9IGxvY2F0aW9uLmhyZWYuaW5kZXhPZigiZGVwX3BzdCIpOyAgLy8gZGVwX3BzdCDqsIAg7Y+s7ZWo65CY7Ja0IOyeiOycvOuptCAwKOu2gOyEnOqyjOyLnO2MkCkg7J207IOB7J2YIOyIq+yekCwg7JeG7Jy866m0IC0xKOyghOyCrOqyjOyLnO2MkCkKICAgICAgICAgICAgY29uc29sZS5sb2cod3JpdGVfY2hrKTsKICAgICAgICAgICAgaWYod3JpdGVfY2hrPT0tMSkgewogICAgICAgICAgICAgICAgLy8g7ZiE7J6sIOyghOyCrCDqsozsi5ztjJAg7ISg7YOdIOyDge2DnAogICAgICAgICAgICAgICAgdGhpcy5wb3N0X2RlcF9pZCA9IDA7ICAgLy8gIHBvc3RfZGVwX2lkIOyXkCAw64Sj6riwCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmdldEVtcEluZm8odGhpcy5lbXBJRCk7ICAgIC8vIGVtcElE66GcIOyCrOybkOygleuztCDqsIDsoLjsmKTquLAgOiBkZXBfaWTrp4wg7IKs7Jqp7ZWoCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICAvLyBtb3VudGVkIOuQoCDrlYwg66Gc6re47J247J20IOuQmOyWtOyeiOuKlCDsg4Htg5zrnbzrqbQKICAgICAgICBpZiAoc2Vzc2lvblN0b3JhZ2UubGVuZ3RoID4gMCkgeyAvLyDtmITsnqwgc2Vzc2lvblN0b3JhZ2Xsl5Ag7JqU7IaM6rCAIOyhtOyerO2VmOuKlCDsg4Htg5zsnbwg65WMKOuhnOq3uOyduOydtCDrkJjslrTshJwgc2Vzc2lvblN0b3JhZ2Xsl5Ag7KCA7J6l65CcIOyDge2DnOydvCDrlYwpCiAgICAgICAgICAgIHRoaXMuZW1wSUQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJsb2dpbl9pZCIpOyAvLyDsnbQg7Lu07Y+s64SM7Yq47JeQIOyEoOyWuOuQnCBlbXBJRCDrs4DsiJjsl5Ag7ZiE7J6sIOuhnOq3uOyduO2VnCDsgqzrsogg64Sj6riwCiAgICAgICAgICAgIHRoaXMuZ2V0TmFtZSh0aGlzLmVtcElEKTsgICAvLyBlbXBJROuhnCDsgqzsm5DrqoUg6rCA7KC47Jik64qUIOuplOyGjOuTnCDtmLjstpwKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiLyIpOwogICAgICAgIH0KICAgIH0sCiAgICB1cGRhdGVkKCkgewogICAgICAgIHRoaXMud3JpdGVDaGVjaygpOwogICAgfQp9Owo="},{"version":3,"sources":["DepBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DepBoard.vue","sourceRoot":"src/components/posts","sourcesContent":["<template>\r\n    <div class=\"newBoard\"><h4 style=\"font-weight: bold\">새 게시판 만들기</h4><br>\r\n        <div>\r\n            <div>\r\n                <subMenu></subMenu>\r\n            </div>\r\n\r\n            <div v-if=\"!submitted\">\r\n                <!--        사용자 정보 입력란-->\r\n                <div class=\"newcontent\">\r\n                    <div class=\"form-group \" >\r\n                        <label style=\"font-weight: bold; margin-left: 30%;\">작성자</label>\r\n                        <input type=\"text\" class=\"form-control \" style=\"width: 150%;\" id=\"writer\" required v-model=\"post.post_writer\" name=\"writer\" placeholder=\"작성자\" readonly>\r\n\r\n\r\n                    </div>  <br>\r\n                    <div class=\"form-group \">\r\n                        <label style=\"font-weight: bold; margin-left: 30%;\">게시판 명</label>\r\n                        <input type=\"text\" class=\"form-control\" style=\"width: 150%;\" id=\"subject\" required v-model=\"board_name\" name=\"subject\" placeholder=\"게시판 명\">\r\n                    </div>\r\n\r\n                    <br>\r\n                </div>\r\n                <div class=\"boardbutton\">\r\n                <button v-on:click=\"saveBoard\" class=\"btn btn-success\">등록하기</button>\r\n                <button class=\"btn btn-danger\" @click=\"backlist\">취소하기</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-else>\r\n                <h4>게시물이 등록 되었습니다 !!</h4>\r\n                <button class=\"btn btn-success\" @click=\"backlist\">돌아가기</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import PostSubmenu from \"./PostSubmenu\";\r\n    import http from \"../../http-common\";\r\n    import router from \"../../router\";\r\n\r\n    export default {\r\n        name: \"board\",\r\n        data() {\r\n            return {\r\n                post: {\r\n                    post_id: \"\",\r\n                    board_name: \"\",\r\n                    post_writer: \"\",\r\n                    post_subject: \"\",\r\n                    post_content: \"\",\r\n                    post_created: \"\",\r\n                    post_view: \"\"\r\n                },\r\n                submitted: false,\r\n                empID: \"\",\r\n                dep_id: \"\",\r\n                board_name:\"\"\r\n\r\n\r\n\r\n            };\r\n        },\r\n        components: {\r\n            subMenu: PostSubmenu\r\n        },\r\n        methods: {\r\n\r\n            /* eslint-disable no-console */\r\n            //입력한 데이터 저장하는 메서드\r\n            testbutton() {\r\n                console.log(this.dep_id)\r\n            },\r\n            //새로운 게시판을 만들어 저장하는 메서드\r\n            saveBoard(){\r\n                var Board ={\r\n                    board_name:this.board_name,\r\n                    dep_id:this.dep_id\r\n                };\r\n                http\r\n                    .post(\"/board/saveBoard\",Board)\r\n                    .then(response =>{\r\n                    })\r\n                alert(\"새 게시판이 등록되었습니다!!\");\r\n                this.$router.push(\"/dep_pst\");\r\n            },\r\n            //이전 페이지로 돌아가는 메서드\r\n            backlist(){\r\n                history.go(-1);\r\n            },\r\n            getName(login_id) {\r\n                /* 사원번호에 해당하는 사원명 가져오는 메소드 */\r\n                http\r\n                    .post(\"/login/name/\" + login_id)\r\n                    .then(response => {\r\n                        this.post.post_writer = response.data; // survey_writer 에 현재 로그인한 사원명이 들어감.\r\n                    })\r\n            }, // End - getName()\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.dep_id = response.data.dep_id;\r\n                        console.log(this.dep_id+\" 받아 온 depID?\")\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            writeCheck() {\r\n                let write_chk = location.href.indexOf(\"dep_pst\");  // dep_pst 가 포함되어 있으면 0(부서게시판) 이상의 숫자, 없으면 -1(전사게시판)\r\n                console.log(write_chk);\r\n                if(write_chk==-1) {\r\n                    // 현재 전사 게시판 선택 상태\r\n                    this.post_dep_id = 0;   //  post_dep_id 에 0넣기\r\n                } else {\r\n                    this.getEmpInfo(this.empID);    // empID로 사원정보 가져오기 : dep_id만 사용함\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empID = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                this.getName(this.empID);   // empID로 사원명 가져오는 메소드 호출\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        },\r\n        updated() {\r\n            this.writeCheck();\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .newBoard_cont{\r\n        border: 1px solid #dddddd;\r\n        border-radius: 10px;\r\n        width: 40%;\r\n        margin: 10px auto;\r\n    }\r\n    .newBoard_cont_form {\r\n        width: 100%;\r\n\r\n    }\r\n\r\n\r\n    .btn btn-success{\r\n        display: none;\r\n    }\r\n    .newBoard{\r\n\r\n    }\r\n    .newcontent{\r\n        position: absolute;\r\n        left: 42%;\r\n    }\r\n    .boardbutton{\r\n        position: absolute;\r\n        left: 45%;\r\n        top: 50%;\r\n    }\r\n</style>"]}]}