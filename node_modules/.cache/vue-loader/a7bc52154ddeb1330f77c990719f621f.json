{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\DepPostsList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\DepPostsList.vue","mtime":1581408201670},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGlzdCB7CgogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIG1heC13aWR0aDogODAwcHg7CiAgICBtYXJnaW46IGF1dG87Cn0KLnNpZGVsaXN0ewogICAgcG9zaXRpb246IGZpeGVkOwogICAgbGVmdDogMDsKfQoubWFsanVsewogICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IG92ZXJmbG93OiBoaWRkZW47CiAgICB3aWR0aDogNTAwcHg7CiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwoKfQoucGFnZWJveHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIG1hcmdpbi10b3A6IDUlOwogICAgbWFyZ2luLWxlZnQ6IDQwJTsKfQouc2VhcmNoYmFyewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IDEzJTsKICAgIHRvcDogMTUlOwp9CnRhYmxlewogICAgdGFibGUtbGF5b3V0OiBmaXhlZDsKCn0KLkFsbFBvc3R7CiAgICB3aWR0aDogMTIwJTsKfQo="},{"version":3,"sources":["DepPostsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"DepPostsList.vue","sourceRoot":"src/components/posts","sourcesContent":["<template>\r\n    <div class=\"list row\">\r\n\r\n        <div>\r\n            <subMenu></subMenu>\r\n        </div>\r\n        <div class=\"col-md-20\">\r\n           <br>\r\n            <h4>부서 게시판</h4>\r\n            <hr>\r\n            <div>\r\n                <form class=\"form-inline my-2 my-lg-0 searchbar\">\r\n                    <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\r\n                    <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n            <table class=\"table table-hover AllPost\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td width=\"10%\">번호</td>\r\n                    <td width=\"15%\">작성자</td>\r\n                    <td>제목</td>\r\n                    <td width=\"20%\">작성일</td>\r\n                    <td width=\"10%\">조회수</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr id=\"text-over\" v-for=\"(post, index) in currentPosts\" :key=\"index\">\r\n                    <td>{{post.post_id}}</td>\r\n                    <td>{{post.post_writer}}</td>\r\n                    <td class=\"maljul\"><router-link :to=\"{\r\n                            name: 'dep_post-details',\r\n                            params: { post: post, post_id: post.post_id }\r\n                        }\">\r\n\r\n                        <span v-on:click=\"updateView(post.post_id)\">{{post.post_subject}}</span>\r\n                    </router-link></td>\r\n                    <td>{{post.created}}</td>\r\n                    <td>{{post.post_views }}</td>\r\n\r\n                </tr>\r\n\r\n                </tbody>\r\n                <br>\r\n                <button class=\"btn btn-primary\" type=\"button\" style=\"position: absolute; left: 80%;\" @click=\"write\">글쓰기</button>\r\n            </table>\r\n            <div class=\"pagebox\">\r\n                <ul class=\"pagination\">\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoStart()\">&laquo;</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"prev()\"><</button>\r\n                    </li>\r\n                    <li v-for=\"(pageNum, index) in currentPages\" :key=\"index\" class=\"page-item\" :class=\"{'active':isSelected(index)}\" >\r\n                        <button class=\"page-link\"  @click=\"changePage(pageNum)\">{{pageNum}}</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"next()\">></button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoEnd()\">&raquo;</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <router-view @refreshData=\"refreshList\"></router-view>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    import PostSubmenu from \"./PostSubmenu\";\r\n\r\n\r\n    export default {\r\n        name: \"post-list\",\r\n        data() {\r\n            return {\r\n                posts: [],\r\n                empID: \"\",\r\n                dep_id: \"\",\r\n                currentPosts: [],\r\n                count: 0,\r\n                countList:10,\r\n                totalPage:1,\r\n                page:1,\r\n                countPage:5,\r\n                startPage:1,\r\n                endPage:0,\r\n                totalPages: [],\r\n                currentPages: [],\r\n\r\n            };\r\n\r\n        },\r\n        components: {\r\n            subMenu: PostSubmenu\r\n        },\r\n        methods: {\r\n            /* eslint-disable no-console */\r\n            //dep_id(부서) 에 해당하는 모든 정보들을 가져오는 메서드\r\n            retrieveBoards() {\r\n                http\r\n                    .get(\"/pst/posts/\"+this.dep_id)\r\n                    .then(response => {\r\n                        this.posts = response.data; // JSON are parsed automatically.\r\n                        this.setCurrentPosts();\r\n                        this.setPagination();\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            setCurrentPosts() {\r\n                this.currentPosts = [];\r\n                let j = (this.page-1) * this.countList;\r\n                for(let i=0; i<this.countList && j < this.posts.length; i++) {\r\n                    this.currentPosts[i] = this.posts[j];\r\n                    j++;\r\n                }\r\n\r\n            },\r\n            setPagination() {\r\n                this.count = this.posts.length;\r\n                this.totalPage = this.count / this.countList; // 총 페이지 개수\r\n                if(this.count % this.countList > 0){\r\n                    this.totalPage = Math.ceil(this.totalPage); // 나머지가 있으면 totalPage 하나 더 추가 (올림)\r\n                }\r\n\r\n                if(this.totalPage < this.page){\r\n                    this.page=this.totalPage;\r\n                }\r\n                for(let i=0; i<this.totalPage; i++) {\r\n                    this.totalPages[i] = i+1;\r\n                }\r\n                this.startPage = ((this.page -1)/this.countPage) * this.countPage +1; // 시작 페이지\r\n                if(this.totalPage < 5) {\r\n                    this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                } else {\r\n                    this.endPage = this.startPage + this.countPage -1; // 마지막 페이지\r\n                }\r\n                //현재 페이지 번호를 구하는 작업\r\n                this.currentPages = [];\r\n                let j = this.startPage-1;\r\n                for(let i=0; i<=(this.endPage-this.startPage) && j <\r\n                this.totalPage; i++) {\r\n                    this.currentPages[i] = this.totalPages[j];\r\n                    j++;\r\n                }\r\n            },\r\n\r\n            refreshList() {\r\n                this.retrieveBoards(this.dep_id);\r\n            },\r\n            /* eslint-enable no-console */\r\n\r\n            //게시판 글쓰기로 이동하는 메서드\r\n            write(){\r\n                this.$router.push({\r\n                    path:'/dep_pst/add'\r\n                })\r\n            },\r\n\r\n            //게시글을 수정하는 메서드\r\n            updateView(p_id){\r\n\r\n                http\r\n                    .put(\"/pst/view/\"+p_id)\r\n                    .then(response =>{\r\n                        // eslint-disable-next-line no-console\r\n                        this.$emit(\"refreshData\");\r\n                        this.$router.push('/dep_pst/PostsList/'+p_id);\r\n                    })\r\n                    .catch(e =>{\r\n                        // eslint-disable-next-line no-console\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.dep_id = response.data.dep_id;\r\n                        this.retrieveBoards();\r\n                        //console.log(this.dep_id);\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            changePage(pageNum) {\r\n                this.page = pageNum;\r\n                this.setCurrentPosts();\r\n            },\r\n            prev() {\r\n                if(this.startPage != 1) {\r\n                    this.startPage = this.startPage -5;\r\n                    this.page = this.startPage;\r\n                    if(this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage -1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage-1;\r\n                    for(let i=0; i<=(this.endPage-this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n            },\r\n            next() {\r\n                if(this.endPage < this.totalPage) {\r\n                    this.startPage = this.endPage +1;\r\n                    this.page = this.startPage;\r\n                    if(this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage -1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage-1;\r\n                    for(let i=0; i<=(this.endPage-this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n            },\r\n            gotoStart() {\r\n                this.changePage(1);\r\n                this.setPagination()\r\n            },\r\n            gotoEnd() {\r\n                let pack = Math.ceil(this.totalPage/this.countPage) // 몇덩이인지(페이지묶음수)\r\n                for(let i=0; i<pack && pack>0; i++){\r\n                    this.next()\r\n                    this.changePage(this.totalPage);\r\n                }\r\n            },\r\n            isSelected(index) {\r\n                /* 선택된 class 바인딩 위해 return 반환하는 메서드*/\r\n                if (index == (this.page-1)%this.countPage) {\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empID = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                this.getEmpInfo(this.empID);\r\n\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        },\r\n\r\n\r\n\r\n    };\r\n\r\n</script>\r\n\r\n<style>\r\n    .list {\r\n\r\n        text-align: left;\r\n        max-width: 800px;\r\n        margin: auto;\r\n    }\r\n    .sidelist{\r\n        position: fixed;\r\n        left: 0;\r\n    }\r\n    .maljul{\r\n        text-overflow: ellipsis; overflow: hidden;\r\n        width: 500px;\r\n        white-space: nowrap;\r\n\r\n    }\r\n    .pagebox{\r\n        position: relative;\r\n        margin-top: 5%;\r\n        margin-left: 40%;\r\n    }\r\n    .searchbar{\r\n        position: absolute;\r\n        right: 13%;\r\n        top: 15%;\r\n    }\r\n    table{\r\n        table-layout: fixed;\r\n\r\n    }\r\n    .AllPost{\r\n        width: 120%;\r\n    }\r\n</style>"]}]}