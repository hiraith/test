{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\Addposts.vue?vue&type=style&index=0&id=a59cca68&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\Addposts.vue","mtime":1580967093414},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBwb3sKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIG1heC13aWR0aDogNjUwcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIG1hcmdpbjogMCBhdXRvOwoKfQouZm9ybS1ncm91cHsKICAgIHdpZHRoOiA3MDBweCAhaW1wb3J0YW50Owp9Ci5yb290ewogICAgd2lkdGg6IDgwMHB4OwogICAgYm9yZGVyOiBzaWx2ZXIgc29saWQgMXB4OwogICAgbWFyZ2luOiAxMHB4OwogICAgcGFkZGluZzogMjBweCAwIDUwcHggMDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGxlZnQ6IDI0JTsKCn0KLmJ0biBidG4tc3VjY2Vzc3sKICAgIGRpc3BsYXk6IG5vbmU7Cn0KLnNlbGVjdGJveHsKICAgIHBhZGRpbmc6IDEwcHggMCAwcHggMDsKCn0KLmxhYmVsZm9udHsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cg=="},{"version":3,"sources":["Addposts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Addposts.vue","sourceRoot":"src/components/posts","sourcesContent":["<template>\r\n    <div>\r\n        <h3 style=\"margin: 20px; font-weight: bold\">게시판 등록</h3>\r\n    <div class=\"root\">\r\n    <div>\r\n        <div>\r\n            <subMenu></subMenu>\r\n        </div>\r\n\r\n        <div v-if=\"!submitted\"  class=\"ppo\">\r\n<!--        사용자 정보 입력란-->\r\n            <div class=\"selectbox\" style=\"margin-bottom:10px;\">\r\n            <label class=\"labelfont\">게시판 선택 &nbsp;&nbsp;&nbsp;&nbsp; </label>\r\n            <select v-model=\"post.board_name\">\r\n                <option disabled value=\"\">게시판명을 선택하세요</option>\r\n                <option v-for=\"(board, index) in boards\" :key=\"index\">{{board.board_name}}</option>\r\n            </select>\r\n            </div>\r\n            <hr>\r\n            <br>\r\n            <div class=\"form-group form-inline\" >\r\n                <label for=\"writer\" class=\"labelfont\">작성자</label>\r\n                <input type=\"email\" class=\"form-control col-sm-9\" id=\"writer\"required v-model=\"post.post_writer\" name=\"writer\" readonly>\r\n            </div>\r\n            <div class=\"form-group form-inline\">\r\n                <label for=\"writer\" class=\"labelfont\">제 &nbsp;&nbsp;&nbsp;&nbsp;목</label>\r\n                <input type=\"email\" class=\"form-control col-sm-9\" id=\"subject\"required v-model=\"post.post_subject\" name=\"subject\" aria-describedby=\"emailHelp\" placeholder=\"게시글 제목\">\r\n            </div>\r\n            <div class=\"form-group form-inline\">\r\n                <label for=\"writer\" class=\"labelfont\">작 성 란</label>\r\n                <textarea class=\"form-control col-sm-9\" id=\"exampleTextarea\" rows=\"10\" required v-model=\"post.post_content\" name=\"content\" placeholder=\"1000자 내로 입력하세요\"></textarea>\r\n            </div>\r\n            <br>\r\n            <div class=\"form-group form-inline\">\r\n                <label for=\"exampleInputFile\" class=\"labelfont\">사진 업로드</label>\r\n                <input class=\"form-control-file\" id=\"exampleInputFile\" aria-describedby=\"fileHelp\" type=\"file\">\r\n                <small class=\"form-text text-muted\" id=\"fileHelp\">안녕하세요 저는 정준희에요 멋쟁이 정준희입니다 ㅎㅎ 짱짱맨 정준희</small>\r\n            </div>\r\n\r\n        <button v-on:click=\"savePost\" class=\"btn btn-success\">게시물 등록</button> &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button v-on:click=\"cnlth\" class=\"btn btn-success\">취소하기</button>\r\n    </div>\r\n\r\n    </div>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    import PostSubmenu from \"./PostSubmenu\";\r\n    export default {\r\n        name: \"add-post\",\r\n        data() {\r\n            return {\r\n                post: {\r\n                    post_id: \"\",\r\n                    board_name: \"\",\r\n                    post_writer: \"\",\r\n                    post_subject: \"\",\r\n                    post_content: \"\",\r\n                    post_created: \"\",\r\n                    post_view: \"\"\r\n                },\r\n                submitted: false,\r\n                empID: \"\",\r\n                post_dep_id: \"\",\r\n                boards:[]\r\n            };\r\n        },\r\n        components: {\r\n            subMenu: PostSubmenu\r\n        },\r\n        methods: {\r\n\r\n            /* eslint-disable no-console */\r\n            //입력한 데이터 저장하는 메서드\r\n            savePost() {\r\n                var data = {\r\n                    post_id: this.post.post_id,\r\n                    board_name: this.post.board_name,\r\n                    post_dep_id: this.post_dep_id,\r\n                    post_writer: this.post.post_writer,\r\n                    post_subject: this.post.post_subject,\r\n                    post_content: this.post.post_content,\r\n                    post_created: this.post.post_created,\r\n                    post_view: this.post.post_view,\r\n                    emp_id:this.emp_id\r\n                };\r\n                //입력한 데이터들을 컨트롤러에 보내주는 메서드\r\n                http\r\n                    .post(\"/pst/post\", data)\r\n                    .then(response => {\r\n                        this.post.post_id = response.data.post_id;\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n                this.submitted = true;\r\n                alert(\"게시글을 성공적으로 등록하였습니다 !\");\r\n                this.$router.push({\r\n                    path:'/dep_pst'\r\n                })\r\n            },\r\n            //페이지 되돌리기\r\n            backlist(){\r\n                history.go(-1);\r\n            },\r\n            getName(login_id) {\r\n                /* 사원번호에 해당하는 사원명 가져오는 메소드 */\r\n                http\r\n                    .post(\"/login/name/\" + login_id)\r\n                    .then(response => {\r\n                        this.post.post_writer = response.data; // survey_writer 에 현재 로그인한 사원명이 들어감.\r\n                    })\r\n            }, // End - getName()\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.post_dep_id = response.data.dep_id;\r\n                        this.getBoard();\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            writeCheck() {\r\n                let write_chk = location.href.indexOf(\"dep_pst\");  // dep_pst 가 포함되어 있으면 0(부서게시판) 이상의 숫자, 없으면 -1(전사게시판)\r\n                console.log(write_chk);\r\n                if(write_chk==-1) {\r\n                    // 현재 전사 게시판 선택 상태\r\n                    this.post_dep_id = 0;   //  post_dep_id 에 0넣기\r\n                } else {\r\n                    this.getEmpInfo(this.empID);    // empID로 사원정보 가져오기 : dep_id만 사용함\r\n                }\r\n            },\r\n            //저장된 부서 board_name 을 불러오는 메서드\r\n            getBoard(){\r\n                http\r\n                    .get(\"/board/getBoard/\" + this.post_dep_id)\r\n                    .then(response =>{\r\n                        this.boards=response.data;\r\n                    })\r\n\r\n            },\r\n            //입력을 취소하고 리스트로 돌아가는 메서드\r\n            cnlth(){\r\n                this.$router.push({\r\n                    path:'/dep_pst/'\r\n                })\r\n            },\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empID = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                this.getName(this.empID);   // empID로 사원명 가져오는 메소드 호출\r\n                this.writeCheck();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        },\r\n        // updated() {\r\n        //     this.writeCheck();\r\n        // }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .ppo{\r\n        text-align: center;\r\n        max-width: 650px;\r\n        width: 100%;\r\n        margin: 0 auto;\r\n\r\n    }\r\n    .form-group{\r\n        width: 700px !important;\r\n    }\r\n    .root{\r\n        width: 800px;\r\n        border: silver solid 1px;\r\n        margin: 10px;\r\n        padding: 20px 0 50px 0;\r\n        position: absolute;\r\n        left: 24%;\r\n\r\n    }\r\n    .btn btn-success{\r\n        display: none;\r\n    }\r\n    .selectbox{\r\n        padding: 10px 0 0px 0;\r\n\r\n    }\r\n    .labelfont{\r\n        font-weight: bold;\r\n    }\r\n</style>"]}]}