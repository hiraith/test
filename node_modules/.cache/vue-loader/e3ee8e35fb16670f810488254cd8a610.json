{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\schedule\\Calendar.vue?vue&type=style&index=0&id=83e1e614&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\schedule\\Calendar.vue","mtime":1581499144802},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYWxlbmRhciB7CiAgICB3aWR0aDogNzUlOwogICAgbWFyZ2luLWxlZnQ6IDI2NXB4Owp9Ci5jYWxlbmRhclNlbGVjdCB7CiAgICBmbG9hdDogbGVmdDsKfQouY2FsX25hdiB7CiAgICBmb250LXNpemU6IDMwcHg7CiAgICBtYXJnaW46IGF1dG87Cn0KLmNoYW5nZUJ0biB7CiAgICBmb250LXNpemU6IDI1cHg7Cn0KLnJvdW5kZWQgewogICAgLW1vei1ib3JkZXItcmFkaXVzOjIwcHggMjBweCAyMHB4IDIwcHg7CiAgICBib3JkZXItcmFkaXVzOjIwcHggMjBweCAyMHB4IDIwcHg7CiAgICBib3JkZXI6c29saWQgMXB4ICNmZmZmZmY7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMyYjZiZDE7CiAgICBwYWRkaW5nOjEwcHg7CiAgICBjb2xvcjojZmZmZmZmOwp9Ci5zZWFyY2ggewogICAgZmxvYXQ6IHJpZ2h0Owp9Ci5zZWFyY2hJbnB1dCB7CiAgICB3aWR0aDogMjAwcHg7Cn0KLmNhbGVuZGFyQ2VsbCB7CiAgICB3aWR0aDogMTAwcHg7CiAgICBoZWlnaHQ6IDE1MHB4Owp9Ci5zY3JvbGxEaXYgewogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIG92ZXJmbG93OiBhdXRvOyAvKuunkCDspITsnoTtkZwg7JyE7ZWcIOyEpOyglSA6IOyKpO2BrOuhpCDslYgg67O07J206rKMIO2VmOugpOuptCBoaWRkZW4qLwogICAgd2lkdGg6IDEwMHB4OwogICAgaGVpZ2h0OiAxMDJweDsKICAgIG1hcmdpbjogMTVweCBhdXRvOyAgLyp0b3AgMTBweCovCiAgICBmb250LXNpemU6IDExcHg7CiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgLyrrp5Ag7KSE7J6E7ZGcIOychO2VnCDshKTsoJUqLwogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgLyrrp5Ag7KSE7J6E7ZGcIOychO2VnCDshKTsoJUqLwogICAgb3ZlcmZsb3cteDogaGlkZGVuOyAvKuqwgOuhnCDsiqTtgazroaTrsJQg7JeG7JWg6riwKi8KICAgIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgLypJReyXkOyEnCDsiqTtgazroaTrsJQg7Yis66qF7ZWY6rKMIO2VmOq4sCovCn0KLnNjcm9sbERpdjo6LXdlYmtpdC1zY3JvbGxiYXIgeyAvKklFIOygnOyZuO2VnCDruIzrnbzsmrDsoIDsl5DshJwg7Iqk7YGs66Gk67CUIO2IrOuqhe2VmOqyjCDtlZjquLAqLwogICAgd2lkdGg6IDFweDsKICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50Owp9Ci5zY2hlTmFtZVNwYW46aG92ZXJ7CiAgICBjdXJzb3I6IHBvaW50ZXI7ICAgIC8qIO2BtOumrSDtlZjripQg66eI7Jqw7IqkIOy7pOyEnCDrqqjslpEgKi8KICAgIGJhY2tncm91bmQ6IHVybCgiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmOCwlM0NzdmcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHg9JzBweCcgeT0nMHB4JyB3aWR0aD0nMXB4JyBoZWlnaHQ9JzFweCcgdmlld0JveD0nMCAwIDEgMScgcHJlc2VydmVBc3BlY3RSYXRpbz0nbm9uZSclM0UlM0NyZWN0IHg9JzAnIHk9JzAnIHdpZHRoPScxJyBoZWlnaHQ9JzEnIGZpbGw9J2FxdWEnIC8lM0UlM0Mvc3ZnJTNFIikgbm8tcmVwZWF0IDEwMCUgMTAwJTsKICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSA1MCU7Cn0K"},{"version":3,"sources":["Calendar.vue"],"names":[],"mappingsfile":"Calendar.vue","sourceRoot":"src/components/schedule","sourcesContent":["<template>\r\n    <div class=\"schedule\">\r\n        <subMenu></subMenu>\r\n            <div class=\"calendar\">\r\n                <div>\r\n                    <div class=\"form-inline calendarSelect\">\r\n                        <select class=\"form-control\" v-model=\"calendar_id\" @change=\"getAllSchedules\">\r\n                            <option value=0>전체 일정</option>  <!-- 해당하는 calendar_id 를 0으로 하고 이 때 전체 일정 가져옴 -->\r\n                            <option v-for=\"(calendar, index) in calendarList\" :key=\"index\" :value=\"calendar.calendar_id\">\r\n                                {{calendar.calendar_name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <span class=\"cal_nav\">\r\n                        <button class=\"btn btn-link btn-lg changeBtn\" v-on:click=\"onClickPrev(currentMonth)\">◀</button>\r\n                        {{currentYear}}년 {{currentMonth}}월\r\n                        <button class=\"btn btn-link btn-lg changeBtn\" v-on:click=\"onClickNext(currentMonth)\">▶</button>\r\n                    </span>\r\n                    <div class=\"form-inline search\">\r\n                        <input class=\"form-control mr-sm-2 searchInput\" type=\"text\" placeholder=\"일정 검색\" v-on:keyup.enter=\"search\" v-model=\"searchKeyword\">\r\n                        <button class=\"btn btn-secondary my-2 my-sm-0 searchBtn\" type=\"submit\" @click=\"search\">검색</button>\r\n                    </div>\r\n                </div>\r\n                <!-- table 시작 부분 -->\r\n                <table class=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <td v-for=\"(weekName, index) in weekNames\" v-bind:key=\"index\">\r\n                            {{weekName}}\r\n                        </td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr v-for=\"(row, index) in currentCalendarMatrix\" :key=\"index\">\r\n                        <td class=\"calendarCell\" v-for=\"(day, index2) in row\" :key=\"index2\">\r\n                         <div v-if=\"day!==''\">\r\n                            <span v-if=\"isToday(currentYear, currentMonth, day)\" class=\"rounded\">\r\n                              {{day}}\r\n                            </span>\r\n\r\n                            <span v-else>\r\n                              {{day}}\r\n                            </span>\r\n                         </div>\r\n                        <!--테이블 셀에 스크롤 달기 위한 div 태그 넣기 : 날짜가 있는 칸이면 내용 출력-->\r\n                        <div v-if=\"day!==''&& hasScheduleToday(currentYear,currentMonth,day)\" class=\"scrollDiv\">\r\n                            <span v-if=\"sche[0] == getCurrDate(currentYear,currentMonth,day)\" v-for=\"(sche, index) in schedule\" :key=\"index\" @click=\"showDetail(sche[1])\">\r\n                                <!-- 일정의 캘린더 별 색과 이름 넣기-->\r\n                                <span style=\"font-size: 15px\" :style=\"{color: getCalColor(sche[1].calendar_id)}\">●</span>&nbsp;\r\n                                <span class=\"scheNameSpan\">\r\n                                    {{sche[1].sche_name}}<br>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                    <!--modal 컴포넌트 포함 시키기 위한 div-->\r\n                    <modals-container/>\r\n            </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import ScheduleSubMenu from \"./ScheduleSubMenu\";\r\n    import http from \"../../http-common\";\r\n    import ScheduleDetailModal from \"./ScheduleDetailModal\";\r\n    import SearchResultModal from \"./SearchResultModal\"\r\n\r\n    export default {\r\n        name: 'Calendar',\r\n        components: {\r\n            subMenu: ScheduleSubMenu\r\n        },\r\n        data () {\r\n            return {\r\n                weekNames: [\"월요일\", \"화요일\", \"수요일\",\"목요일\", \"금요일\", \"토요일\", \"일요일\"],\r\n                rootYear: 1904,\r\n                rootDayOfWeekIndex: 4, // 2000년 1월 1일은 토요일\r\n                currentYear: new Date().getFullYear(),\r\n                currentMonth: new Date().getMonth()+1,\r\n                currentDay: new Date().getDate(),\r\n                currentMonthStartWeekIndex: null,\r\n                currentCalendarMatrix: [],\r\n                endOfDay: null,\r\n                memoData: [],\r\n                emp_id: \"\",\r\n                scheduleList: [],    // 모든 schedule 리스트를 담을 배열\r\n                sche_name: \"\",       // 가져온 일정의 이름\r\n                sche_date: [],       // 일정 날짜? -- 안 쓰는 변수 정리하기\r\n                schedule: [],        // 가져온 일정 담을 배열\r\n                selected_cal : [],   // ScheduleSubMenu 에서 선택한 캘린더 체크박스 목록\r\n                calendarList: [],    // 캘린더 목록\r\n                calendar_id : 0,     // 캘린더 id\r\n                searchKeyword: \"\"    // 검색어\r\n            }\r\n        },\r\n        methods: {\r\n            init(){\r\n                this.currentMonthStartWeekIndex = this.getStartWeek(this.currentYear, this.currentMonth);\r\n                this.endOfDay = this.getEndOfDay(this.currentYear, this.currentMonth);\r\n                this.initCalendar();\r\n            },\r\n            getCalColor(calendar_id) {\r\n                for(let i=0; i<this.calendarList.length; i++) {\r\n                    if(this.calendarList[i].calendar_id == calendar_id) {\r\n                        return this.calendarList[i].calendar_color;\r\n                    }\r\n                }\r\n            },\r\n            getCurrDate(year, month, day) {\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                if(day < 10) day = \"0\" + day;           // 형식을 맞추기 위하여 일자가 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                let sche_date = year + \"-\" + month + \"-\" + day;\r\n\r\n                return sche_date;\r\n            },\r\n            hasScheduleToday(year,month,day) {\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                if(day < 10) day = \"0\" + day;           // 형식을 맞추기 위하여 일자가 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                let sche_date = year + \"-\" + month + \"-\" + day;\r\n\r\n                for(let k=0; k<this.schedule.length; k++) {\r\n                    let a = [];\r\n                    a[k] = this.schedule[k].toString().split(\",\");\r\n                    if(a[k][0] == sche_date) return true;\r\n                }\r\n            },\r\n            getAllSchedules() {\r\n                this.sche_date = [];\r\n                this.sche_name = [];\r\n                this.schedule = [];\r\n\r\n                let year = this.currentYear;\r\n                let month = this.currentMonth;\r\n\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n\r\n                for(let i=1; i<=this.endOfDay; i++) {\r\n                    let date = i;\r\n                    if(date < 10) date = \"0\" + date;\r\n                    let sche_date = year + \"-\" + month + \"-\" + date;\r\n\r\n                    if(this.calendar_id == 0) {\r\n                        http\r\n                            .get(\"/schedule/all/\" + this.emp_id + \"?sche_date=\" + sche_date)\r\n                            .then(response=> {\r\n                                /* eslint-disable no-console */\r\n                                this.scheduleList = response.data;\r\n                                for(let j=0; j<this.scheduleList.length; j++) {\r\n                                    this.schedule.push([ sche_date, this.scheduleList[j] ]);    //  배열에 해당 날짜와 일정 이름 넣기\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                /* eslint-disable no-console */\r\n                                console.log(e);\r\n                            });\r\n                    } else {\r\n                        http\r\n                            .get(\"/schedule/list/\" + this.emp_id + \"?calendar_id=\" + this.calendar_id  + \"&sche_date=\" + sche_date)\r\n                            .then(response=> {\r\n                                /* eslint-disable no-console */\r\n                                this.scheduleList = response.data;\r\n                                for(let j=0; j<this.scheduleList.length; j++) {\r\n                                    this.schedule.push([sche_date, this.scheduleList[j]]);    //  배열에 해당 날짜와 일정 이름 넣기\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                /* eslint-disable no-console */\r\n                                console.log(e);\r\n                            });\r\n                    }\r\n\r\n                }\r\n            },\r\n            initCalendar(){\r\n                this.currentCalendarMatrix = [];\r\n                let day=1;\r\n                for(let i=0; i<6; i++){\r\n                    let calendarRow = [];\r\n                    for(let j=0; j<7; j++){\r\n                        if(i==0 && j<this.currentMonthStartWeekIndex){\r\n                            calendarRow.push(\"\");\r\n                        }\r\n                        else if(day<=this.endOfDay){\r\n                            calendarRow.push(day);\r\n                            day++;\r\n                        }\r\n                        else{\r\n                            calendarRow.push(\"\");\r\n                        }\r\n                    }\r\n                    this.currentCalendarMatrix.push(calendarRow);\r\n                }\r\n                // currentCalendarMatrix 생성된 후\r\n                this.getAllSchedules();\r\n            },\r\n            getEndOfDay(year, month){\r\n                switch(month){\r\n                    case 1:\r\n                    case 3:\r\n                    case 5:\r\n                    case 7:\r\n                    case 8:\r\n                    case 10:\r\n                    case 12:\r\n                        return 31;\r\n                        break;\r\n                    case 4:\r\n                    case 6:\r\n                    case 9:\r\n                    case 11:\r\n                        return 30;\r\n                        break;\r\n                    case 2:\r\n                        if( (year%4 == 0) && (year%100 != 0) || (year%400 == 0) ){\r\n                            return 29;\r\n                        }\r\n                        else{\r\n                            return 28;\r\n                        } // 윤달 체크 조건\r\n                        break;\r\n                    default:\r\n                        console.log(\"unknown month \" + month);\r\n                        return 0;\r\n                        break;\r\n                }\r\n            },\r\n            getStartWeek(targetYear, targetMonth){\r\n                let year = this.rootYear;\r\n                let month = 1;\r\n                let sumOfDay = this.rootDayOfWeekIndex;\r\n                while(true){\r\n                    if(targetYear > year){\r\n                        for(let i=0; i<12; i++){\r\n                            sumOfDay += this.getEndOfDay(year, month+i);\r\n                        }\r\n                        year++;\r\n                    }\r\n                    else if(targetYear == year){\r\n                        if(targetMonth > month){\r\n                            sumOfDay += this.getEndOfDay(year, month);\r\n                            month++;\r\n                        }\r\n                        else if(targetMonth == month){\r\n                            return (sumOfDay)%7;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            onClickPrev(month){\r\n                month--;\r\n                if(month<=0){\r\n                    this.currentMonth = 12;\r\n                    this.currentYear -= 1;\r\n                }\r\n                else{\r\n                    this.currentMonth -= 1;\r\n                }\r\n                this.init();\r\n            },\r\n            onClickNext(month){\r\n                month++;\r\n                if(month>12){\r\n                    this.currentMonth = 1;\r\n                    this.currentYear += 1;\r\n                }\r\n                else{\r\n                    this.currentMonth += 1;\r\n                }\r\n                this.init();\r\n            },\r\n            isToday(year, month, day){\r\n                let date = new Date();\r\n                return year == date.getFullYear() && month == date.getMonth()+1 && day == date.getDate();\r\n            },\r\n            getCalendarList() {\r\n                http\r\n                    .get(\"/calendar/list/\" + this.emp_id)\r\n                    .then(response=> {\r\n                        /* eslint-disable no-console */\r\n                        this.calendarList = response.data;\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            showDetail(schedule) { // 일정 수정, 삭제할 디테일 modal 띄우는 메소드\r\n\r\n                this.$modal.show(ScheduleDetailModal, {\r\n                        name: 'ScheduleDetailModal',\r\n                        schedule: schedule,\r\n                        modal: this.$modal,\r\n                    },\r\n                    {\r\n                        width: '400px',\r\n                        height: '600px',\r\n                        draggable: true,\r\n                    });\r\n                this.getAllSchedules(); // 모달 창 닫히면 일정 다시 불러옴\r\n            },\r\n            search() {\r\n                if(this.searchKeyword != \"\") {\r\n                    let searchResult = [];\r\n\r\n                    http\r\n                        .get(\"/schedule/search/\" + this.emp_id + \"?keyword=\" + this.searchKeyword)\r\n                        .then(response=> {\r\n                            /* eslint-disable no-console */\r\n                            searchResult = response.data;\r\n\r\n                            if(searchResult == \"\") {\r\n                                alert(\"검색 결과가 존재하지 않습니다.\");\r\n                            } else {\r\n                                this.$modal.show(SearchResultModal, {\r\n                                        searchResult: searchResult,\r\n                                        modal: this.$modal,\r\n                                    },\r\n                                    {\r\n                                        width: '500px',\r\n                                        height: '400px',\r\n                                        draggable: false,\r\n                                    });\r\n                            }\r\n                            this.searchKeyword = \"\";\r\n                        })\r\n                        .catch(e => {\r\n                            /* eslint-disable no-console */\r\n                            console.log(e);\r\n                        });\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            if (sessionStorage.length > 0) {\r\n                this.emp_id = sessionStorage.getItem(\"login_id\");\r\n                this.init();\r\n                this.getCalendarList();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .calendar {\r\n        width: 75%;\r\n        margin-left: 265px;\r\n    }\r\n    .calendarSelect {\r\n        float: left;\r\n    }\r\n    .cal_nav {\r\n        font-size: 30px;\r\n        margin: auto;\r\n    }\r\n    .changeBtn {\r\n        font-size: 25px;\r\n    }\r\n    .rounded {\r\n        -moz-border-radius:20px 20px 20px 20px;\r\n        border-radius:20px 20px 20px 20px;\r\n        border:solid 1px #ffffff;\r\n        background-color:#2b6bd1;\r\n        padding:10px;\r\n        color:#ffffff;\r\n    }\r\n    .search {\r\n        float: right;\r\n    }\r\n    .searchInput {\r\n        width: 200px;\r\n    }\r\n    .calendarCell {\r\n        width: 100px;\r\n        height: 150px;\r\n    }\r\n    .scrollDiv {\r\n        text-align: left;\r\n        overflow: auto; /*말 줄임표 위한 설정 : 스크롤 안 보이게 하려면 hidden*/\r\n        width: 100px;\r\n        height: 102px;\r\n        margin: 15px auto;  /*top 10px*/\r\n        font-size: 11px;\r\n        text-overflow: ellipsis; /*말 줄임표 위한 설정*/\r\n        white-space: nowrap; /*말 줄임표 위한 설정*/\r\n        overflow-x: hidden; /*가로 스크롤바 없애기*/\r\n        -ms-overflow-style: none; /*IE에서 스크롤바 투명하게 하기*/\r\n    }\r\n    .scrollDiv::-webkit-scrollbar { /*IE 제외한 브라우저에서 스크롤바 투명하게 하기*/\r\n        width: 1px;\r\n        background: transparent;\r\n    }\r\n    .scheNameSpan:hover{\r\n        cursor: pointer;    /* 클릭 하는 마우스 커서 모양 */\r\n        background: url(\"data:image/svg+xml;charset=utf8,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' width='1px' height='1px' viewBox='0 0 1 1' preserveAspectRatio='none'%3E%3Crect x='0' y='0' width='1' height='1' fill='aqua' /%3E%3C/svg%3E\") no-repeat 100% 100%;\r\n        background-size: 100% 50%;\r\n    }\r\n</style>"]}]}