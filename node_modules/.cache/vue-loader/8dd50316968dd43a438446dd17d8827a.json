{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\board\\BoardList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\board\\BoardList.vue","mtime":1580969798139},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBodHRwIGZyb20gIi4uLy4uL2h0dHAtY29tbW9uIjsKaW1wb3J0IEJvYXJkU3ViTWVudSBmcm9tICIuL0JvYXJkU3ViTWVudSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiYm9hcmRzLWxpc3QiLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBib2FyZHM6IFtdCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgc3ViTWVudTogQm9hcmRTdWJNZW51CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KICAgICAgICByZXRyaWV2ZUJvYXJkcygpIHsKICAgICAgICAgICAgaHR0cAogICAgICAgICAgICAgICAgLmdldCgiL2Jicy9ib2FyZHMiKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuYm9hcmRzID0gcmVzcG9uc2UuZGF0YTsgLy8gSlNPTiBhcmUgcGFyc2VkIGF1dG9tYXRpY2FsbHkuCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICByZWZyZXNoTGlzdCgpIHsKICAgICAgICAgICAgdGhpcy5yZXRyaWV2ZUJvYXJkcygpOwogICAgICAgIH0KICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi8KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMucmV0cmlldmVCb2FyZHMoKTsKICAgIH0KfTsK"},{"version":3,"sources":["BoardList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BoardList.vue","sourceRoot":"src/components/board","sourcesContent":["<template>\r\n    <div class=\"list row\">\r\n        <subMenu></subMenu>\r\n        <div class=\"col-md-6\">\r\n            <h4>Board List</h4>\r\n            <table class=\"table table-hover\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td>작성자</td>\r\n                    <td>글 제목</td>\r\n                </tr>\r\n                </thead>\r\n                <tr v-for=\"(board, index) in boards\" :key=\"index\">\r\n                    <td>{{board.user_name}}</td>\r\n                    <td>\r\n                        <router-link :to=\"{\r\n                            name: 'board-details',\r\n                            params: { board: board, b_id: board.b_id }\r\n                        }\">\r\n                            {{board.subject}}\r\n                        </router-link>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <router-view @refreshData=\"refreshList\"></router-view>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    import BoardSubMenu from \"./BoardSubMenu\";\r\n\r\n    export default {\r\n        name: \"boards-list\",\r\n        data() {\r\n            return {\r\n                boards: []\r\n            };\r\n        },\r\n        components: {\r\n            subMenu: BoardSubMenu\r\n        },\r\n        methods: {\r\n            /* eslint-disable no-console */\r\n            retrieveBoards() {\r\n                http\r\n                    .get(\"/bbs/boards\")\r\n                    .then(response => {\r\n                        this.boards = response.data; // JSON are parsed automatically.\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            refreshList() {\r\n                this.retrieveBoards();\r\n            }\r\n            /* eslint-enable no-console */\r\n        },\r\n        mounted() {\r\n            this.retrieveBoards();\r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n    .list {\r\n        text-align: left;\r\n        max-width: 450px;\r\n        margin: auto;\r\n    }\r\n</style>\r\n"]}]}