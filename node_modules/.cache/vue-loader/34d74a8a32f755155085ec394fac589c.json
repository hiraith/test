{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\Post.vue?vue&type=style&index=0&id=3fb27d8c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\Post.vue","mtime":1581058995888},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zaWRlbGlzdCB7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICBsZWZ0OiAwOwp9Ci5jYXJkIHsKICAgIHBvc2l0aW9uOiBjZW50ZXI7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgbGVmdDogNDAwcHg7CiAgICBoZWlnaHQ6IDQwMHB4Owp9Ci5mb3JtLWNvbnRyb2wgewogICAgd2lkdGg6IDYwJTsKICAgIG1hcmdpbiA6IGF1dG87Cn0KLnJvb3QyewogICAgd2lkdGg6IDgwMHB4OwogICAgYm9yZGVyOiBzaWx2ZXIgc29saWQgMHB4OwogICAgbWFyZ2luLWxlZnQ6IDI1JTsKICAgIHBhZGRpbmc6IDIwcHggMCA1MHB4IDA7CiAgICBwb3NpdGlvbjogc3RhdGljOwogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzksMjM5LDIzOSwwLjIpOwogICAgbGVmdDogMjQlOwogICAgZmxvYXQ6IGxlZnQ7Cn0KLmNhcmR7CiAgICBtYXJnaW46IDQwcHggYXV0bzsKICAgIGxlZnQ6IDA7CiAgICB3aWR0aDogODAlOwp9Ci5zdWJqZWN0Ym94ewogICAgbWFyZ2luOiAxMHB4IGF1dG87CiAgICBsZWZ0OiAwOwogICAgd2lkdGg6IDgwJTsKICAgIGJvcmRlcjogc2lsdmVyIHNvbGlkIDBweDsKICAgIHRleHQtYWxpZ246IGxlZnQ7Cn0KCg=="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components/posts","sourcesContent":["<template>\r\n    <div class=\"root2\">\r\n    <div v-if=\"this.post\">\r\n        <div>\r\n            <subMenu></subMenu>\r\n        </div>\r\n            <h4 style=\"margin: 20px; font-weight: bold\">-{{this.post.board_name}} 게시판-</h4>\r\n        <hr style=\"margin: 60px\">\r\n        <!--여기부터-->\r\n        <div v-if=\"flex\">\r\n            <div class=\"subjectbox\" style=\"font-weight: bold\">\r\n                <label >작성일 : </label> &nbsp;&nbsp;&nbsp;&nbsp;{{this.post.created}}\r\n            </div>\r\n            <div class=\"subjectbox\" style=\"font-weight: bold\">\r\n                <label >작성자 : </label> &nbsp;&nbsp;&nbsp;&nbsp;{{this.post.post_writer}}\r\n            </div>\r\n\r\n            <div class=\"subjectbox\" style=\"font-weight: bold\">\r\n                <label >제&nbsp;&nbsp;&nbsp;&nbsp;목 :</label> &nbsp;&nbsp;&nbsp;&nbsp;{{this.post.post_subject}}\r\n            </div>\r\n\r\n            <div class=\"card border-dark mb-5\" style=\"max-width: 40rem;\">\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\"></h4>\r\n                    <p class=\"card-text\" >{{this.post.post_content}}</p>\r\n                </div>\r\n             </div>\r\n              <div v-if=\"chkWriter()\">\r\n            <button class=\"btn btn-success\" type=\"button\" @click=\"deletePost\">게시물 삭제</button>\r\n            <button class=\"btn btn-success\" type=\"button\" @click=\"modify\">게시물 수정</button>\r\n             </div>\r\n        </div>\r\n        <!--여기까지 div로 묶고 검사-->\r\n\r\n        <div v-else class>\r\n         <label>제목</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"subject\"\r\n                   required v-model=\"post.post_subject\" name=\"subject\">\r\n            <label>내용</label>\r\n            <textarea class=\"form-control textArea\" rows=\"15\" required v-model=\"post.post_content\">{{post.post_content}}</textarea><br>\r\n\r\n            <button class=\"btn btn-success\" type=\"button\" @click=\"updatePost\">수정하기</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div v-else>\r\n        <br/>\r\n        <p>Please click on a Board...</p>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import http from \"../../http-common\";\r\n    import PostSubmenu from \"./PostSubmenu\";\r\n\r\n    export default {\r\n        name: \"post\",\r\n        data() {\r\n            return{\r\n                 flex: true, // 나중에 조건 검사하면 글 작성자==나 일때 false로 바꾸기\r\n                 emp_id: \"\",\r\n                 emp_name:\"\"\r\n            }\r\n        },\r\n        components: {\r\n            subMenu: PostSubmenu\r\n        },\r\n        props: [\"post\"],\r\n        methods: {\r\n\r\n            //게시된 게시글을 삭제하는 메서드\r\n            deletePost() {\r\n                http\r\n                    .delete(\"/pst/delete/\" + this.post.post_id)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        this.$router.push('/pst');\r\n                    })\r\n                    alert(\"삭제되었습니다.\")\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            chkWriter(){\r\n                if(this.emp_name == this.post.post_writer){\r\n                    return true;\r\n                }else{\r\n                    return false;\r\n                }\r\n\r\n            },\r\n\r\n\r\n            modify() {\r\n                this.flex=false\r\n            },\r\n            //게시글을 수정하는 메서드\r\n            updatePost() {\r\n                let postData = {\r\n                    post_subject : this.post.post_subject,\r\n                    post_content : this.post.post_content,\r\n                };\r\n                http\r\n                    .put(\"/pst/update/\"+this.post.post_id, postData)\r\n                    .then(response => {\r\n                        console.log(\"수정완료\");\r\n                        alert(\"수정되었습니다\")\r\n                        this.$router.push(\"/pst/posts\")\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n\r\n            },\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.emp_name = response.data.emp_name;\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            }\r\n\r\n\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.emp_id = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                this.getEmpInfo(this.emp_id);\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        },\r\n\r\n\r\n    };\r\n</script>\r\n<style scoped>\r\n    .sidelist {\r\n        position: fixed;\r\n        left: 0;\r\n    }\r\n    .card {\r\n        position: center;\r\n        text-align: left;\r\n        left: 400px;\r\n        height: 400px;\r\n    }\r\n    .form-control {\r\n        width: 60%;\r\n        margin : auto;\r\n    }\r\n    .root2{\r\n        width: 800px;\r\n        border: silver solid 0px;\r\n        margin-left: 25%;\r\n        padding: 20px 0 50px 0;\r\n        position: static;\r\n        background-color: rgba(239,239,239,0.2);\r\n        left: 24%;\r\n        float: left;\r\n    }\r\n    .card{\r\n        margin: 40px auto;\r\n        left: 0;\r\n        width: 80%;\r\n    }\r\n    .subjectbox{\r\n        margin: 10px auto;\r\n        left: 0;\r\n        width: 80%;\r\n        border: silver solid 0px;\r\n        text-align: left;\r\n    }\r\n\r\n</style>"]}]}