{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\main\\MainCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\main\\MainCalendar.vue","mtime":1581499144778},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MainCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"MainCalendar.vue","sourceRoot":"src/components/main","sourcesContent":["<template>\r\n    <div class=\"calendar\">\r\n        <span class=\"cal_nav\">\r\n            <button class=\"btn btn-link btn-lg changeBtn\" v-on:click=\"onClickPrev(currentMonth)\">◀</button>\r\n            {{currentYear}}년 {{currentMonth}}월\r\n            <button class=\"btn btn-link btn-lg changeBtn\" v-on:click=\"onClickNext(currentMonth)\">▶</button>\r\n        </span>\r\n        <!-- table 시작 -->\r\n        <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <td v-for=\"(weekName, index) in weekNames\" v-bind:key=\"index\" class=\"weekName\">\r\n                    {{weekName}}\r\n                </td>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"(row, index) in currentCalendarMatrix\" :key=\"index\">\r\n                <td class=\"calendarCell\" v-for=\"(day, index2) in row\" :key=\"index2\">\r\n                 <div v-if=\"day!==''\">\r\n                    <span v-if=\"isToday(currentYear, currentMonth, day)\" class=\"day rounded\">\r\n                      {{day}}\r\n                    </span>\r\n\r\n                    <span v-else class=\"day\">\r\n                      {{day}}\r\n                    </span>\r\n                 </div>\r\n                <!--테이블 셀에 스크롤 달기 위한 div 태그 넣기 : 날짜가 있는 칸이면 내용 출력-->\r\n                <div v-if=\"day!==''&& hasScheduleToday(currentYear,currentMonth,day)\" class=\"scrollDiv\">\r\n                    <span v-if=\"sche[0] == getCurrDate(currentYear,currentMonth,day)\" v-for=\"(sche, index) in schedule\" :key=\"index\">\r\n                        <!-- 일정의 캘린더 별 색과 이름 넣기-->\r\n                        <span class=\"colorDot\" :style=\"{color: getCalColor(sche[1].calendar_id)}\">●</span>\r\n                    </span>\r\n                </div>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n\r\n    export default {\r\n        name: 'Calendar',\r\n        data () {\r\n            return {\r\n                weekNames: [\"월\", \"화\", \"수\",\"목\", \"금\", \"토\", \"일\"],\r\n                rootYear: 1904,\r\n                rootDayOfWeekIndex: 4, // 2000년 1월 1일은 토요일\r\n                currentYear: new Date().getFullYear(),\r\n                currentMonth: new Date().getMonth()+1,\r\n                currentDay: new Date().getDate(),\r\n                currentMonthStartWeekIndex: null,\r\n                currentCalendarMatrix: [],\r\n                endOfDay: null,\r\n                memoData: [],\r\n                emp_id: \"\",\r\n                scheduleList: [],    // 모든 schedule 리스트를 담을 배열\r\n                sche_name: \"\",       // 가져온 일정의 이름\r\n                sche_date: [],       // 일정 날짜? -- 안 쓰는 변수 정리하기\r\n                schedule: [],        // 가져온 일정 담을 배열\r\n                calendarList: [],    // 캘린더 목록\r\n                calendar_id : 0,     // 캘린더 id\r\n                cnt: 0\r\n            }\r\n        },\r\n        methods: {\r\n            init(){\r\n                this.currentMonthStartWeekIndex = this.getStartWeek(this.currentYear, this.currentMonth);\r\n                this.endOfDay = this.getEndOfDay(this.currentYear, this.currentMonth);\r\n                this.initCalendar();\r\n            },\r\n            getCalColor(calendar_id) {\r\n                for(let i=0; i<this.calendarList.length; i++) {\r\n                    if(this.calendarList[i].calendar_id == calendar_id) {\r\n                        return this.calendarList[i].calendar_color;\r\n                    }\r\n                }\r\n            },\r\n            getCurrDate(year, month, day) {\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                if(day < 10) day = \"0\" + day;           // 형식을 맞추기 위하여 일자가 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                let sche_date = year + \"-\" + month + \"-\" + day;\r\n\r\n                return sche_date;\r\n            },\r\n            hasScheduleToday(year,month,day) {\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                if(day < 10) day = \"0\" + day;           // 형식을 맞추기 위하여 일자가 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                let sche_date = year + \"-\" + month + \"-\" + day;\r\n\r\n                for(let k=0; k<this.schedule.length; k++) {\r\n                    let a = [];\r\n                    a[k] = this.schedule[k].toString().split(\",\");\r\n                    if(a[k][0] == sche_date) return true;\r\n                }\r\n            },\r\n            getAllSchedules() {\r\n                this.sche_date = [];\r\n                this.sche_name = [];\r\n                this.schedule = [];\r\n\r\n                let year = this.currentYear;\r\n                let month = this.currentMonth;\r\n\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n\r\n                for(let i=1; i<=this.endOfDay; i++) {\r\n                    let date = i;\r\n                    if(date < 10) date = \"0\" + date;\r\n                    let sche_date = year + \"-\" + month + \"-\" + date;\r\n\r\n                    if(this.calendar_id == 0) {\r\n                        http\r\n                            .get(\"/schedule/all/\" + this.emp_id + \"?sche_date=\" + sche_date)\r\n                            .then(response=> {\r\n                                /* eslint-disable no-console */\r\n                                this.scheduleList = response.data;\r\n                                for(let j=0; j<this.scheduleList.length; j++) {\r\n                                    this.schedule.push([ sche_date, this.scheduleList[j] ]);    //  배열에 해당 날짜와 일정 이름 넣기\r\n\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                /* eslint-disable no-console */\r\n                                console.log(e);\r\n                            });\r\n                    }\r\n\r\n                }\r\n            },\r\n            initCalendar(){\r\n                this.currentCalendarMatrix = [];\r\n                let day=1;\r\n                for(let i=0; i<6; i++){\r\n                    let calendarRow = [];\r\n                    for(let j=0; j<7; j++){\r\n                        if(i==0 && j<this.currentMonthStartWeekIndex){\r\n                            calendarRow.push(\"\");\r\n                        }\r\n                        else if(day<=this.endOfDay){\r\n                            calendarRow.push(day);\r\n                            day++;\r\n                        }\r\n                        else{\r\n                            calendarRow.push(\"\");\r\n                        }\r\n                    }\r\n                    this.currentCalendarMatrix.push(calendarRow);\r\n                }\r\n                // currentCalendarMatrix 생성된 후\r\n                this.getAllSchedules();\r\n            },\r\n            getEndOfDay(year, month){\r\n                switch(month){\r\n                    case 1:\r\n                    case 3:\r\n                    case 5:\r\n                    case 7:\r\n                    case 8:\r\n                    case 10:\r\n                    case 12:\r\n                        return 31;\r\n                        break;\r\n                    case 4:\r\n                    case 6:\r\n                    case 9:\r\n                    case 11:\r\n                        return 30;\r\n                        break;\r\n                    case 2:\r\n                        if( (year%4 == 0) && (year%100 != 0) || (year%400 == 0) ){\r\n                            return 29;\r\n                        }\r\n                        else{\r\n                            return 28;\r\n                        } // 윤달 체크 조건\r\n                        break;\r\n                    default:\r\n                        console.log(\"unknown month \" + month);\r\n                        return 0;\r\n                        break;\r\n                }\r\n            },\r\n            getStartWeek(targetYear, targetMonth){\r\n                let year = this.rootYear;\r\n                let month = 1;\r\n                let sumOfDay = this.rootDayOfWeekIndex;\r\n                while(true){\r\n                    if(targetYear > year){\r\n                        for(let i=0; i<12; i++){\r\n                            sumOfDay += this.getEndOfDay(year, month+i);\r\n                        }\r\n                        year++;\r\n                    }\r\n                    else if(targetYear == year){\r\n                        if(targetMonth > month){\r\n                            sumOfDay += this.getEndOfDay(year, month);\r\n                            month++;\r\n                        }\r\n                        else if(targetMonth == month){\r\n                            return (sumOfDay)%7;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            onClickPrev(month){\r\n                month--;\r\n                if(month<=0){\r\n                    this.currentMonth = 12;\r\n                    this.currentYear -= 1;\r\n                }\r\n                else{\r\n                    this.currentMonth -= 1;\r\n                }\r\n                this.init();\r\n            },\r\n            onClickNext(month){\r\n                month++;\r\n                if(month>12){\r\n                    this.currentMonth = 1;\r\n                    this.currentYear += 1;\r\n                }\r\n                else{\r\n                    this.currentMonth += 1;\r\n                }\r\n                this.init();\r\n            },\r\n            isToday(year, month, day){\r\n                let date = new Date();\r\n                return year == date.getFullYear() && month == date.getMonth()+1 && day == date.getDate();\r\n            },\r\n            getCalendarList() {\r\n                http\r\n                    .get(\"/calendar/list/\" + this.emp_id)\r\n                    .then(response=> {\r\n                        /* eslint-disable no-console */\r\n                        this.calendarList = response.data;\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n        },\r\n        mounted() {\r\n            if (sessionStorage.length > 0) {\r\n                this.emp_id = sessionStorage.getItem(\"login_id\");\r\n                this.init();\r\n                this.getCalendarList();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .calendar {\r\n        width: 30%;\r\n        height: 60%;\r\n        top: 70px;\r\n        position: absolute;\r\n        right: 15px;\r\n        border: 1px solid gray;\r\n    }\r\n    .cal_nav {\r\n        font-size: 20px;\r\n        margin: auto;\r\n    }\r\n    .weekName {\r\n        font-size: 12px;\r\n        font-weight: bold;\r\n    }\r\n    .changeBtn {\r\n        font-size: 20px;\r\n    }\r\n    .day {\r\n        font-size: 11px;\r\n        font-weight: bold;\r\n    }\r\n    .rounded {\r\n        -moz-border-radius:20px 20px 20px 20px;\r\n        border-radius:20px 20px 20px 20px;\r\n        border:solid 1px #ffffff;\r\n        background-color:#2b6bd1;\r\n        padding:3px;\r\n        color:#ffffff;\r\n    }\r\n    .calendarCell {\r\n        height: 60px;\r\n        padding: 0;\r\n    }\r\n    .scrollDiv {\r\n        text-align: center;\r\n        overflow: auto; /*말 줄임표 위한 설정 : 스크롤 안 보이게 하려면 hidden*/\r\n        width: 70%;\r\n        height: 60%;\r\n        font-size: 10px;\r\n        word-break: break-all;  /*width 넘어가면 다음 줄로 넘어가게 하기*/\r\n        overflow-x: hidden; /*가로 스크롤바 없애기*/\r\n        -ms-overflow-style: none; /*IE에서 스크롤바 투명하게 하기*/\r\n        margin: 1px auto auto;\r\n    }\r\n    .scrollDiv::-webkit-scrollbar { /*IE 제외한 브라우저에서 스크롤바 투명하게 하기*/\r\n        width: 1px;\r\n        background: transparent;\r\n    }\r\n    .colorDot {\r\n        font-size: 11px;\r\n    }\r\n</style>"]}]}