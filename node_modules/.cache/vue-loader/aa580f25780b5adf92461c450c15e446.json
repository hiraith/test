{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\working\\WorkingStatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\working\\WorkingStatus.vue","mtime":1581501064170},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBodHRwIGZyb20gIi4uLy4uL2h0dHAtY29tbW9uIjsKaW1wb3J0IFdvcmtpbmdTdWJNZW51IGZyb20gIi4vV29ya2luZ1N1Yk1lbnUiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIndvcmtpbmctc3RhdHVzIiwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZW1wSWQ6ICcnLAogICAgICAgICAgICBjdXJyZW50WWVhcjogbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpLAogICAgICAgICAgICBjdXJyZW50TW9udGg6IG5ldyBEYXRlKCkuZ2V0TW9udGgoKSArIDEsCiAgICAgICAgICAgIHdlZWtzOiB7CiAgICAgICAgICAgICAgICB3ZWVrMToge3dvcmtpbmdzOiBbXSwgc2hvdzogZmFsc2V9LAogICAgICAgICAgICAgICAgd2VlazI6IHt3b3JraW5nczogW10sIHNob3c6IGZhbHNlfSwKICAgICAgICAgICAgICAgIHdlZWszOiB7d29ya2luZ3M6IFtdLCBzaG93OiBmYWxzZX0sCiAgICAgICAgICAgICAgICB3ZWVrNDoge3dvcmtpbmdzOiBbXSwgc2hvdzogZmFsc2V9LAogICAgICAgICAgICAgICAgd2VlazU6IHt3b3JraW5nczogW10sIHNob3c6IGZhbHNlfQogICAgICAgICAgICB9LAogICAgICAgICAgICBtb250aFRpbWU6JycsCiAgICAgICAgICAgIHdvcmtpbmdUaW1lOicnLAogICAgICAgICAgICBiYXJXaWR0aDonMCUnLAogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgIH07CiAgICB9LC8vIEVuZCAtIGRhdGEKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBzdWJNZW51OiBXb3JraW5nU3ViTWVudQogICAgfSwvLyBFbmQgLSBjb21wb25lbnRzCiAgICBtZXRob2RzOiB7CiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwogICAgICAgIHJlYWRXb3JraW5ncyhjdXJyZW50WWVhciwgY3VycmVudE1vbnRoKSB7Ly8g6re87YOc6riw66Gd7J2EIOyhsO2ajO2VmOuKlCDrqZTshozrk5wKICAgICAgICAgICAgbGV0IHdvcmtpbmdzID0gW107CiAgICAgICAgICAgIGxldCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTsKICAgICAgICAgICAgbGV0IHN0YXJ0ID0gbW9tZW50KGN1cnJlbnRZZWFyICsgIi0iICsgY3VycmVudE1vbnRoKS5zdGFydE9mKCdtb250aCcpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICAgICAgICBsZXQgZW5kID0gbW9tZW50KGN1cnJlbnRZZWFyICsgIi0iICsgY3VycmVudE1vbnRoKS5lbmRPZignbW9udGgnKS5mb3JtYXQoJ1lZWVktTU0tREQnKTsKCiAgICAgICAgICAgIHRoaXMuY2FsY01vbnRoVGltZShtb21lbnQoY3VycmVudFllYXIgKyAiLSIgKyBjdXJyZW50TW9udGgpKTsKCiAgICAgICAgICAgIGh0dHAKICAgICAgICAgICAgICAgIC5nZXQoIi93b3JraW5nL3dvcmtpbmdzLyIgKyB0aGlzLmVtcElkICsgIj9zdGFydD0iICsgc3RhcnQgKyAiJmVuZD0iICsgZW5kKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgIC8vIHRoaXMud29ya2luZ3MgPSByZXNwb25zZS5kYXRhOyAvLyBKU09OIGFyZSBwYXJzZWQgYXV0b21hdGljYWxseS4KICAgICAgICAgICAgICAgICAgICB3b3JraW5ncyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXZpZGVXZWVrbHkod29ya2luZ3MpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsY1dvcmtpbmdUaW1lKHdvcmtpbmdzKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9LC8vIEVuZCAtIHJlYWRXb3JraW5ncyhjdXJyZW50WWVhcixjdXJyZW50TW9udGgpCiAgICAgICAgY2FsY01vbnRoVGltZShkYXRlKXsvL+yhsO2ajCDspJHsnbgg64us7JeQIOq3vOustO2VtOyVvCDtlaAg7Iuc6rCE7J2EIOqzhOyCsAogICAgICAgICAgICBsZXQgY29udXQ9MDsKICAgICAgICAgICAgbGV0IHN0YXJ0RGF0ZSA9IGRhdGUuY2xvbmUoKS5zdGFydE9mKCdtb250aCcpOwogICAgICAgICAgICBsZXQgZGlmZj1zdGFydERhdGUuZGlmZihkYXRlLmNsb25lKCkuZW5kT2YoJ21vbnRoJyksJ2RheScpOwogICAgICAgICAgICBmb3IoOyBkaWZmIT09MTsgZGlmZisrKXsKICAgICAgICAgICAgICAgICBpZihzdGFydERhdGUuZGF5KCkhPT0wJiZzdGFydERhdGUuZGF5KCkhPT02KSB7CiAgICAgICAgICAgICAgICAgICAgIGNvbnV0Kys7CiAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgc3RhcnREYXRlPXN0YXJ0RGF0ZS5hZGQoMSwnZGF5Jyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICB0aGlzLm1vbnRoVGltZT1jb251dCo4OwogICAgICAgIH0sLy8gRW5kIC0gY2FsY01vbnRoVGltZShkYXRlKQogICAgICAgIGNhbGNXb3JraW5nVGltZSh3b3JraW5ncykgey8v7ZiE7J6sIOyhsO2drCDspJHsnbgg64us7J2YIOq3vOustOyLnOqwhOydmCDstJ0g7ZWp7J2EIOq1rO2VmOuKlCDrqZTshozrk5wKICAgICAgICAgICAgbGV0IG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpOwogICAgICAgICAgICBsZXQgdG90YWxIb3VyID0gMDsKICAgICAgICAgICAgbGV0IHRvdGFsTWluID0gMDsKICAgICAgICAgICAgbGV0IHRvdGFsU2VjID0gMDsKCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgd29ya2luZ3MubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIGxldCB3b3JraW5nID0gd29ya2luZ3NbaV0ud29ya2luZ0RhdGUgKyAiICIgKyB3b3JraW5nc1tpXS53b3JraW5nVGltZTsKICAgICAgICAgICAgICAgIGxldCBob3VyID0gTnVtYmVyLmlzTmFOKE51bWJlcihtb21lbnQod29ya2luZykuZm9ybWF0KCdoJykpKSA/IDAgOiBOdW1iZXIobW9tZW50KHdvcmtpbmcpLmZvcm1hdCgnaCcpKTsKICAgICAgICAgICAgICAgIHRvdGFsSG91ciArPSAoaG91ciA9PT0gMTIpPyAwIDogaG91cjsKICAgICAgICAgICAgICAgIHRvdGFsTWluICs9IE51bWJlci5pc05hTihOdW1iZXIobW9tZW50KHdvcmtpbmcpLmZvcm1hdCgnaCcpKSkgPyAwIDogTnVtYmVyKG1vbWVudCh3b3JraW5nKS5mb3JtYXQoJ20nKSk7CiAgICAgICAgICAgICAgICB0b3RhbFNlYyArPSBOdW1iZXIuaXNOYU4oTnVtYmVyKG1vbWVudCh3b3JraW5nKS5mb3JtYXQoJ2gnKSkpID8gMCA6IE51bWJlcihtb21lbnQod29ya2luZykuZm9ybWF0KCdzJykpOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0b3RhbEhvdXIgKz0gTWF0aC5mbG9vcih0b3RhbE1pbiAvIDYwKTsKICAgICAgICAgICAgdG90YWxNaW4gPSB0b3RhbE1pbiAlIDYwICsgTWF0aC5mbG9vcih0b3RhbFNlYyAvIDYwKTsKICAgICAgICAgICAgdG90YWxTZWMgPSB0b3RhbFNlYyAlIDYwOwoKICAgICAgICAgICAgdGhpcy53b3JraW5nVGltZT10b3RhbEhvdXIrIuyLnOqwhCIrdG90YWxNaW4rIuu2hCI7CiAgICAgICAgICAgIHRoaXMuc2V0QmFyV2lkdGgoKHRvdGFsSG91cio2MCt0b3RhbE1pbiksKHRoaXMubW9udGhUaW1lKjYwKSk7CiAgICAgICAgfSwvLyBFbmQgLSBjYWxjV29ya2luZ1RpbWUod29ya2luZ3MpCiAgICAgICAgc2V0QmFyV2lkdGgod29ya2luZ01pbixtb250aE1pbil7IC8vIOyhsO2ajO2VmOuKlCDri6wg6re866y07Iuc6rCE7JeQIOuUsOudvCDrp4nrjIDrsJTsnZgg6ri47J2066W8IOyhsOygiO2VmOuKlCDrqZTshozrk5wKICAgICAgICAgICAgdGhpcy5iYXJXaWR0aD1NYXRoLmZsb29yKHdvcmtpbmdNaW4vbW9udGhNaW4qMTAwKSsnJSc7CiAgICAgICAgfSwvLyBFbmQgLSBzZXRCYXJXaWR0aCh3b3JraW5nTWluLG1vbnRoTWluKQogICAgICAgIGRpdmlkZVdlZWtseSh3b3JraW5ncykgeyAvLyDqt7ztg5zquLDroZ3snYQg7KO87LCo67OE66GcIOuCmOuIhOuKlCDrqZTshozrk5wKCiAgICAgICAgICAgIC8v6rCBIOyjvOywqOydmCDqt7ztg5zquLDroZ0g7LSI6riw7ZmUCiAgICAgICAgICAgIHRoaXMud2Vla3Mud2VlazEud29ya2luZ3MgPSBbXTsKICAgICAgICAgICAgdGhpcy53ZWVrcy53ZWVrMi53b3JraW5ncyA9IFtdOwogICAgICAgICAgICB0aGlzLndlZWtzLndlZWszLndvcmtpbmdzID0gW107CiAgICAgICAgICAgIHRoaXMud2Vla3Mud2VlazQud29ya2luZ3MgPSBbXTsKCiAgICAgICAgICAgIGxldCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTsKICAgICAgICAgICAgbGV0IGkgPSAwOwogICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaSA8IHdvcmtpbmdzLmxlbmd0aCAmJiB0aGlzLndlZWtPZk1vbnRoKG1vbWVudCh3b3JraW5nc1tpXS53b3JraW5nRGF0ZS50b1N0cmluZygpKSkgPT09IDE7IGorKykgewogICAgICAgICAgICAgICAgdGhpcy53ZWVrcy53ZWVrMS53b3JraW5nc1tqXSA9IHdvcmtpbmdzW2ldOwogICAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBpIDwgd29ya2luZ3MubGVuZ3RoICYmIHRoaXMud2Vla09mTW9udGgobW9tZW50KHdvcmtpbmdzW2ldLndvcmtpbmdEYXRlLnRvU3RyaW5nKCkpKSA9PT0gMjsgaisrKSB7CiAgICAgICAgICAgICAgICB0aGlzLndlZWtzLndlZWsyLndvcmtpbmdzW2pdID0gd29ya2luZ3NbaV07CiAgICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGkgPCB3b3JraW5ncy5sZW5ndGggJiYgdGhpcy53ZWVrT2ZNb250aChtb21lbnQod29ya2luZ3NbaV0ud29ya2luZ0RhdGUudG9TdHJpbmcoKSkpID09PSAzOyBqKyspIHsKICAgICAgICAgICAgICAgIHRoaXMud2Vla3Mud2VlazMud29ya2luZ3Nbal0gPSB3b3JraW5nc1tpXTsKICAgICAgICAgICAgICAgIGkrKzsKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaSA8IHdvcmtpbmdzLmxlbmd0aCAmJiB0aGlzLndlZWtPZk1vbnRoKG1vbWVudCh3b3JraW5nc1tpXS53b3JraW5nRGF0ZS50b1N0cmluZygpKSkgPT09IDQ7IGorKykgewogICAgICAgICAgICAgICAgdGhpcy53ZWVrcy53ZWVrNC53b3JraW5nc1tqXSA9IHdvcmtpbmdzW2ldOwogICAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBpIDwgd29ya2luZ3MubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgIHRoaXMud2Vla3Mud2VlazUud29ya2luZ3Nbal0gPSB3b3JraW5nc1tpXTsKICAgICAgICAgICAgICAgIGkrKzsKICAgICAgICAgICAgfQogICAgICAgIH0sLy8gRW5kIC0gIGRpdmlkZVdlZWtseSh3b3JraW5ncykKICAgICAgICB3ZWVrT2ZNb250aChkYXRlKSB7Ly8g7Yq57KCVIOuCoOynnOqwgCDri6zsnZgg66qHIOuyiOynuCDso7zsl5Ag7ZW064u57ZWY64qUIOyngCDrsJjtmZgg7ZWY64qUIOuplOyGjOuTnAogICAgICAgICAgICBjb25zdCBmaXJzdERheU9mTW9udGggPSBkYXRlLmNsb25lKCkuc3RhcnRPZignbW9udGgnKTsKICAgICAgICAgICAgY29uc3QgZmlyc3REYXlPZldlZWsgPSBmaXJzdERheU9mTW9udGguY2xvbmUoKS5zdGFydE9mKCd3ZWVrJyk7CgogICAgICAgICAgICBjb25zdCBvZmZzZXQgPSBmaXJzdERheU9mTW9udGguZGlmZihmaXJzdERheU9mV2VlaywgJ2RheXMnKTsKCiAgICAgICAgICAgIHJldHVybiBNYXRoLmNlaWwoKGRhdGUuZGF0ZSgpICsgb2Zmc2V0KSAvIDcpOwogICAgICAgIH0sLy8gRW5kIC0gIHdlZWtPZk1vbnRoKGRhdGUpCiAgICAgICAgb25DbGlja1ByZXYobW9udGgpIHsvLyDtmITsnqzsobDtmowg7KSR7J24IOuLrOydmCDsnbTsoIQg64us7J2EIOyhsO2ajAogICAgICAgICAgICBtb250aC0tOwogICAgICAgICAgICBpZiAobW9udGggPD0gMCkgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TW9udGggPSAxMjsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFllYXIgLT0gMTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1vbnRoIC09IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5yZWFkV29ya2luZ3ModGhpcy5jdXJyZW50WWVhciwgdGhpcy5jdXJyZW50TW9udGgpOwogICAgICAgIH0sLy8gRW5kIC0gIG9uQ2xpY2tQcmV2IChtb250aCkKICAgICAgICBvbkNsaWNrTmV4dChtb250aCkgey8v7ZiE7J6s7KGw7ZqMIOykkeyduCDri6zsnZgg64uk7J2MIOuLrOydhCDsobDtmowKICAgICAgICAgICAgbW9udGgrKzsKICAgICAgICAgICAgaWYgKG1vbnRoID4gMTIpIHsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1vbnRoID0gMTsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFllYXIgKz0gMTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1vbnRoICs9IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5yZWFkV29ya2luZ3ModGhpcy5jdXJyZW50WWVhciwgdGhpcy5jdXJyZW50TW9udGgpOwogICAgICAgIH0vLyBFbmQgLSAgb25DbGlja05leHQgKG1vbnRoKQogICAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqLwogICAgfSwvLyBFbmQgLSBtZXRob2RzCiAgICBtb3VudGVkKCkgey8vIG1vdW50ZWQg65Cg65WMIOuhnOq3uOyduOydtCDrkJjslrTsnojripQg7IOB7YOc652866m0CiAgICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmxlbmd0aCA+IDApIHsgLy8g7ZiE7J6sIHNlc3Npb25TdG9yYWdl7JeQIOyalOyGjOqwgCDsobTsnqztlZjripQg7IOB7YOc7J28IOuVjCjroZzqt7jsnbjsnbQg65CY7Ja07IScIHNlc3Npb25TdG9yYWdl7JeQIOyggOyepeuQnCDsg4Htg5zsnbwg65WMKQogICAgICAgICAgICB0aGlzLmVtcElkID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgibG9naW5faWQiKTsKICAgICAgICAgICAgdGhpcy5yZWFkV29ya2luZ3ModGhpcy5jdXJyZW50WWVhciwgdGhpcy5jdXJyZW50TW9udGgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvIik7CiAgICAgICAgfQogICAgfSAvLyBFbmQgLSBtb3VudGVkKCkKfTsvLyBFbmQgLSBleHBvcnQgZGVmYXVsdAo="},{"version":3,"sources":["WorkingStatus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"WorkingStatus.vue","sourceRoot":"src/components/working","sourcesContent":["<template>\r\n    <div class=\"list row\">\r\n        <subMenu></subMenu>\r\n        <div class=\"col-md-12\">\r\n            <h4>근태</h4>\r\n            <h2>\r\n                <button class=\"btn btn-success\" v-on:click=\"onClickPrev(currentMonth)\">◀</button>\r\n                {{currentYear}}.{{currentMonth}}\r\n                <button class=\"btn btn-success\" v-on:click=\"onClickNext(currentMonth)\">▶</button>\r\n            </h2>\r\n\r\n            <div class=\"progress\">\r\n                <div class=\"progress-bar\" role=\"progressbar\" :style=\"{width: barWidth}\" aria-valuenow=\"25\" aria-valuemin=\"0\"\r\n                     aria-valuemax=\"100\"></div>\r\n            </div>\r\n            필요 근무 시간:{{monthTime}}시간<br>\r\n            실제 근무 시간:{{workingTime}}\r\n            <button v-if=\"weeks.week1.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week1.show = !weeks.week1.show\">\r\n                1주차 ▲\r\n            </button>\r\n            <button v-else=\"weeks.week1.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week1.show = !weeks.week1.show\">\r\n                1주차 ▼\r\n            </button>\r\n            <table v-if=\"weeks.week1.show\" class=\"table table-hover\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td>날짜</td>\r\n                    <td>출근시각</td>\r\n                    <td>퇴근시각</td>\r\n                    <td>근무시간</td>\r\n                </tr>\r\n                </thead>\r\n                <tr v-for=\"(working, index) in weeks.week1.workings\" :key=\"index\">\r\n                    <td>{{working.workingDate}}</td>\r\n                    <td>{{working.workingIn}}</td>\r\n                    <td>{{working.workingOut}}</td>\r\n                    <td>{{working.workingTime}}</td>\r\n                </tr>\r\n            </table>\r\n            <button v-if=\"weeks.week2.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week2.show = !weeks.week2.show\">\r\n                2주차 ▲\r\n            </button>\r\n            <button v-else=\"weeks.week2.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week2.show = !weeks.week2.show\">\r\n                2주차 ▼\r\n            </button>\r\n            <table v-if=\"weeks.week2.show\" class=\"table table-hover\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td>날짜</td>\r\n                    <td>출근시각</td>\r\n                    <td>퇴근시각</td>\r\n                    <td>근무시간</td>\r\n                </tr>\r\n                </thead>\r\n                <tr v-for=\"(working, index) in weeks.week2.workings\" :key=\"index\">\r\n                    <td>{{working.workingDate}}</td>\r\n                    <td>{{working.workingIn}}</td>\r\n                    <td>{{working.workingOut}}</td>\r\n                    <td>{{working.workingTime}}</td>\r\n                </tr>\r\n            </table>\r\n            <button v-if=\"weeks.week3.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week3.show = !weeks.week3.show\">\r\n                3주차 ▲\r\n            </button>\r\n            <button v-else=\"weeks.week3.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week3.show = !weeks.week3.show\">\r\n                3주차 ▼\r\n            </button>\r\n            <table v-if=\"weeks.week3.show\" class=\"table table-hover\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td>날짜</td>\r\n                    <td>출근시각</td>\r\n                    <td>퇴근시각</td>\r\n                    <td>근무시간</td>\r\n                </tr>\r\n                </thead>\r\n                <tr v-for=\"(working, index) in weeks.week3.workings\" :key=\"index\">\r\n                    <td>{{working.workingDate}}</td>\r\n                    <td>{{working.workingIn}}</td>\r\n                    <td>{{working.workingOut}}</td>\r\n                    <td>{{working.workingTime}}</td>\r\n                </tr>\r\n            </table>\r\n            <button v-if=\"weeks.week4.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week4.show = !weeks.week4.show\">\r\n                4주차 ▲\r\n            </button>\r\n            <button v-else=\"weeks.week4.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week4.show = !weeks.week4.show\">\r\n                4주차 ▼\r\n            </button>\r\n            <table v-if=\"weeks.week4.show\" class=\"table table-hover\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td>날짜</td>\r\n                    <td>출근시각</td>\r\n                    <td>퇴근시각</td>\r\n                    <td>근무시간</td>\r\n                </tr>\r\n                </thead>\r\n                <tr v-for=\"(working, index) in weeks.week4.workings\" :key=\"index\">\r\n                    <td>{{working.workingDate}}</td>\r\n                    <td>{{working.workingIn}}</td>\r\n                    <td>{{working.workingOut}}</td>\r\n                    <td>{{working.workingTime}}</td>\r\n                </tr>\r\n            </table>\r\n            <button v-if=\"weeks.week5.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week5.show = !weeks.week5.show\">\r\n                5주차 ▲\r\n            </button>\r\n            <button v-else=\"weeks.week5.show\" class=\"btn btn-success btn-lg btn-block\" v-on:click=\"weeks.week5.show = !weeks.week5.show\">\r\n                5주차 ▼\r\n            </button>\r\n            <table v-if=\"weeks.week5.show\" class=\"table table-hover\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td>날짜</td>\r\n                    <td>출근시각</td>\r\n                    <td>퇴근시각</td>\r\n                    <td>근무시간</td>\r\n                </tr>\r\n                </thead>\r\n                <tr v-for=\"(working, index) in weeks.week5.workings\" :key=\"index\">\r\n                    <td>{{working.workingDate}}</td>\r\n                    <td>{{working.workingIn}}</td>\r\n                    <td>{{working.workingOut}}</td>\r\n                    <td>{{working.workingTime}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    import WorkingSubMenu from \"./WorkingSubMenu\";\r\n\r\n    export default {\r\n        name: \"working-status\",\r\n        data() {\r\n            return {\r\n                empId: '',\r\n                currentYear: new Date().getFullYear(),\r\n                currentMonth: new Date().getMonth() + 1,\r\n                weeks: {\r\n                    week1: {workings: [], show: false},\r\n                    week2: {workings: [], show: false},\r\n                    week3: {workings: [], show: false},\r\n                    week4: {workings: [], show: false},\r\n                    week5: {workings: [], show: false}\r\n                },\r\n                monthTime:'',\r\n                workingTime:'',\r\n                barWidth:'0%',\r\n                show: false\r\n            };\r\n        },// End - data\r\n        components: {\r\n            subMenu: WorkingSubMenu\r\n        },// End - components\r\n        methods: {\r\n            /* eslint-disable no-console */\r\n            readWorkings(currentYear, currentMonth) {// 근태기록을 조회하는 메소드\r\n                let workings = [];\r\n                let moment = require('moment');\r\n                let start = moment(currentYear + \"-\" + currentMonth).startOf('month').format('YYYY-MM-DD');\r\n                let end = moment(currentYear + \"-\" + currentMonth).endOf('month').format('YYYY-MM-DD');\r\n\r\n                this.calcMonthTime(moment(currentYear + \"-\" + currentMonth));\r\n\r\n                http\r\n                    .get(\"/working/workings/\" + this.empId + \"?start=\" + start + \"&end=\" + end)\r\n                    .then(response => {\r\n                        // this.workings = response.data; // JSON are parsed automatically.\r\n                        workings = response.data;\r\n                        console.log(response.data);\r\n                        this.divideWeekly(workings);\r\n                        this.calcWorkingTime(workings);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },// End - readWorkings(currentYear,currentMonth)\r\n            calcMonthTime(date){//조회 중인 달에 근무해야 할 시간을 계산\r\n                let conut=0;\r\n                let startDate = date.clone().startOf('month');\r\n                let diff=startDate.diff(date.clone().endOf('month'),'day');\r\n                for(; diff!==1; diff++){\r\n                     if(startDate.day()!==0&&startDate.day()!==6) {\r\n                         conut++;\r\n                     }\r\n                    startDate=startDate.add(1,'day');\r\n                }\r\n               this.monthTime=conut*8;\r\n            },// End - calcMonthTime(date)\r\n            calcWorkingTime(workings) {//현재 조희 중인 달의 근무시간의 총 합을 구하는 메소드\r\n                let moment = require('moment');\r\n                let totalHour = 0;\r\n                let totalMin = 0;\r\n                let totalSec = 0;\r\n\r\n                for (let i = 0; i < workings.length; i++) {\r\n                    let working = workings[i].workingDate + \" \" + workings[i].workingTime;\r\n                    let hour = Number.isNaN(Number(moment(working).format('h'))) ? 0 : Number(moment(working).format('h'));\r\n                    totalHour += (hour === 12)? 0 : hour;\r\n                    totalMin += Number.isNaN(Number(moment(working).format('h'))) ? 0 : Number(moment(working).format('m'));\r\n                    totalSec += Number.isNaN(Number(moment(working).format('h'))) ? 0 : Number(moment(working).format('s'));\r\n                }\r\n\r\n                totalHour += Math.floor(totalMin / 60);\r\n                totalMin = totalMin % 60 + Math.floor(totalSec / 60);\r\n                totalSec = totalSec % 60;\r\n\r\n                this.workingTime=totalHour+\"시간\"+totalMin+\"분\";\r\n                this.setBarWidth((totalHour*60+totalMin),(this.monthTime*60));\r\n            },// End - calcWorkingTime(workings)\r\n            setBarWidth(workingMin,monthMin){ // 조회하는 달 근무시간에 따라 막대바의 길이를 조절하는 메소드\r\n                this.barWidth=Math.floor(workingMin/monthMin*100)+'%';\r\n            },// End - setBarWidth(workingMin,monthMin)\r\n            divideWeekly(workings) { // 근태기록을 주차별로 나누는 메소드\r\n\r\n                //각 주차의 근태기록 초기화\r\n                this.weeks.week1.workings = [];\r\n                this.weeks.week2.workings = [];\r\n                this.weeks.week3.workings = [];\r\n                this.weeks.week4.workings = [];\r\n\r\n                let moment = require('moment');\r\n                let i = 0;\r\n                for (let j = 0; i < workings.length && this.weekOfMonth(moment(workings[i].workingDate.toString())) === 1; j++) {\r\n                    this.weeks.week1.workings[j] = workings[i];\r\n                    i++;\r\n                }\r\n                for (let j = 0; i < workings.length && this.weekOfMonth(moment(workings[i].workingDate.toString())) === 2; j++) {\r\n                    this.weeks.week2.workings[j] = workings[i];\r\n                    i++;\r\n                }\r\n                for (let j = 0; i < workings.length && this.weekOfMonth(moment(workings[i].workingDate.toString())) === 3; j++) {\r\n                    this.weeks.week3.workings[j] = workings[i];\r\n                    i++;\r\n                }\r\n                for (let j = 0; i < workings.length && this.weekOfMonth(moment(workings[i].workingDate.toString())) === 4; j++) {\r\n                    this.weeks.week4.workings[j] = workings[i];\r\n                    i++;\r\n                }\r\n                for (let j = 0; i < workings.length; j++) {\r\n                    this.weeks.week5.workings[j] = workings[i];\r\n                    i++;\r\n                }\r\n            },// End -  divideWeekly(workings)\r\n            weekOfMonth(date) {// 특정 날짜가 달의 몇 번째 주에 해당하는 지 반환 하는 메소드\r\n                const firstDayOfMonth = date.clone().startOf('month');\r\n                const firstDayOfWeek = firstDayOfMonth.clone().startOf('week');\r\n\r\n                const offset = firstDayOfMonth.diff(firstDayOfWeek, 'days');\r\n\r\n                return Math.ceil((date.date() + offset) / 7);\r\n            },// End -  weekOfMonth(date)\r\n            onClickPrev(month) {// 현재조회 중인 달의 이전 달을 조회\r\n                month--;\r\n                if (month <= 0) {\r\n                    this.currentMonth = 12;\r\n                    this.currentYear -= 1;\r\n                } else {\r\n                    this.currentMonth -= 1;\r\n                }\r\n                this.readWorkings(this.currentYear, this.currentMonth);\r\n            },// End -  onClickPrev (month)\r\n            onClickNext(month) {//현재조회 중인 달의 다음 달을 조회\r\n                month++;\r\n                if (month > 12) {\r\n                    this.currentMonth = 1;\r\n                    this.currentYear += 1;\r\n                } else {\r\n                    this.currentMonth += 1;\r\n                }\r\n                this.readWorkings(this.currentYear, this.currentMonth);\r\n            }// End -  onClickNext (month)\r\n            /* eslint-enable no-console */\r\n        },// End - methods\r\n        mounted() {// mounted 될때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empId = sessionStorage.getItem(\"login_id\");\r\n                this.readWorkings(this.currentYear, this.currentMonth);\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        } // End - mounted()\r\n    };// End - export default\r\n</script>\r\n\r\n<style>\r\n    .list {\r\n        text-align: left;\r\n        max-width: 450px;\r\n        margin: auto;\r\n    }\r\n</style>\r\n"]}]}