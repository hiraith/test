{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\approval\\SearchSigner.vue?vue&type=style&index=0&id=87dee496&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\approval\\SearchSigner.vue","mtime":1581408201548},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZWxlY3RlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUNGMEYxOwp9Cgouc2VhcmNoUmVzdWx0IHsKICAgIG1heC1oZWlnaHQ6IDIxNXB4OwogICAgb3ZlcmZsb3c6IHNjcm9sbDsKICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyAvKuunkCDspITsnoTtkZwg7JyE7ZWcIOyEpOyglSovCiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyAvKuunkCDspITsnoTtkZwg7JyE7ZWcIOyEpOyglSovCiAgICBvdmVyZmxvdy14OiBoaWRkZW47IC8q6rCA66GcIOyKpO2BrOuhpOuwlCDsl4bslaDquLAqLwogICAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAvKklF7JeQ7IScIOyKpO2BrOuhpOuwlCDtiKzrqoXtlZjqsowg7ZWY6riwKi8KfQouc2VhcmNoUmVzdWx0Ojotd2Via2l0LXNjcm9sbGJhciB7IC8qSUUg7KCc7Jm47ZWcIOu4jOudvOyasOyggOyXkOyEnCDsiqTtgazroaTrsJQg7Yis66qF7ZWY6rKMIO2VmOq4sCovCiAgICB3aWR0aDogMXB4OwogICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7Cn0K"},{"version":3,"sources":["SearchSigner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchSigner.vue","sourceRoot":"src/components/approval","sourcesContent":["<template>\r\n\r\n    <div class=\"container\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">결재선 지정</h5>\r\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\" style=\"font-size: 40px; color: black;\"\r\n                            @click=\"$emit('close')\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <fieldset>\r\n                        <div>검색</div>\r\n                        <input type=\"text\" v-on:input=\"searchMatching($event.target.value)\"\r\n                               @keyup.enter=\"extractSelected(keyNum)\"\r\n                               @keydown.up=\"selectAbove\"\r\n                               @keydown.left=\"selectAbove\"\r\n                               @keydown.down=\"selectBelow\"\r\n                               @keydown.right=\"selectBelow\"\r\n                               @keydown.tab=\"removeAutoComplete\"\r\n                               class=\"form-control col-md-12 \" placeholder=\"부서나 이름을 입력해주세요\"\r\n                               v-bind:class=\"{'is-valid':isValid()}\"\r\n                               style=\"width: 400px; float: left; border:2px #95a5a6 solid\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"추가\" style=\"float: right\" @click=\"extractSelected(keyNum)\" v-on:click=\"selectBelow\">\r\n                    </fieldset>\r\n\r\n                    <div class=\"searchResult\" v-if=\"showArr.length>0\"\r\n                         style=\"background-color: aliceblue; width: 400px; border: #95a5a6 1.5px solid; border-top: 0px; border-radius: 3px\">\r\n                        <div id=\"empList\" v-for=\"(emp,index) in showArr\" :key=\"index\" style=\"text-align: -webkit-left;\">\r\n                            <div v-bind:class=\"{'selected':isSelected(index)}\"><!--v-if=\"emp.selected=false\"-->\r\n                                <router-link to=\"\" style=\"margin-left: 10px\" @click.native=\"extractSelected(index)\">\r\n                                    <b>{{emp.dep_name}}</b>&nbsp;&nbsp;&nbsp;<b>{{emp.emp_name}}</b>&nbsp;&nbsp;&nbsp;<b>{{emp.emp_email}}</b>\r\n                                </router-link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div style=\"float: left\">\r\n                        <button v-if=\"sign1 != ''\" type=\"button\" class=\"btn btn-outline-success btn-sm\" @click=\"sign1=''\"><b>결재 1 :</b>{{sign1}}</button>\r\n                        <button v-if=\"sign2 != ''\" type=\"button\" class=\"btn btn-outline-success btn-sm\"  @click=\"sign2=''\"><b>결재 2 :</b>{{sign2}}</button>\r\n                        <button v-if=\"sign3 != ''\" type=\"button\" class=\"btn btn-outline-success btn-sm\"  @click=\"sign3=''\"><b>결재 3 :</b>{{sign3}}</button>\r\n                    </div>\r\n                    <input class=\"btn btn-primary\" @click=\"submit_signer\" type=\"button\" value=\"등록\">\r\n                    <input class=\"btn btn-secondary\" @click=\"$emit('close')\" type=\"button\" value=\"취소\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import http from \"../../http-common\"\r\n    import * as Hangul from 'hangul-js';\r\n\r\n    export default {\r\n        name: \"SearchSigner\",\r\n        data: function () {\r\n            return {\r\n                show : true,\r\n                keyNum: 0,\r\n                sign1: \"\",\r\n                sign2: \"\",\r\n                sign3: \"\",\r\n                sign1id:\"\",\r\n                sign2id:\"\",\r\n                sign3id:\"\",\r\n                del_password: '',\r\n                selected: false,\r\n                showArr: [],\r\n                depArr: [],\r\n                empArr: [],\r\n            }\r\n        }, props: [\r\n            /*2.props에서 내려보낸 함수 등록해줌*/\r\n            'valueUpdated'\r\n        ], methods: {\r\n\r\n            submit_signer() {\r\n                /*3.닫기전 submit등에 연결된 메서드에 props등록한 함수로 데이터 넘겨줌*/\r\n                this.valueUpdated(this.sign1,this.sign2,this.sign3,this.sign1id,this.sign2id,this.sign3id);\r\n                this.$emit('close');\r\n            },\r\n            searchMatching: function (lang) {\r\n                if (this.showArr.length > 6) {//결과값 6이상이면 함수종료//유효하지않은듯\r\n                    return\r\n                } else {//결과값 6개 미만\r\n                    /*새변수 = .filter() [새로운 배열로 반환]*/\r\n                    this.showArr = this.empArr.filter(function (emp) {\r\n                        /*return [이름,부서] 문자열검색 || 초성검색*/\r\n\r\n                        return emp.emp_name.includes(lang) || emp.dis_emp_name.includes(Hangul.disassemble(lang).join(\"\"))\r\n                            || emp.dep_name.includes(lang) || emp.dis_dep_name.includes(Hangul.disassemble(lang).join(\"\"));\r\n                    })\r\n                }\r\n            },\r\n            idToName: function () {\r\n                /*emp,dep table dep_id비교해서 emp에 dep_name bind*/\r\n                for (let i = 0; i < this.empArr.length; i++) {\r\n                    for (let j = 0; j < this.depArr.length; j++) {\r\n                        if (this.empArr[i].dep_id === this.depArr[j].dep_id) {\r\n                            this.empArr[i].dep_name = this.depArr[j].dep_name;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            addCho: function () {\r\n                this.empArr.forEach(function (emp) {\r\n                    /*empArr에 초성필드 추가{emp_name:\"김범준\", disassembled:\"ㄱㅂㅈ\"}*/\r\n                    let dis = Hangul.disassemble(emp.emp_name, true)\r\n                    let dis2 = Hangul.disassemble(emp.dep_name, true)\r\n                    let cho = dis.reduce(function (prev, elem) {\r\n                        elem = elem[0] ? elem[0] : elem;\r\n                        return prev + elem;\r\n                    }, \"\");\r\n                    let cho2 = dis2.reduce(function (prev, elem) {\r\n                        elem = elem[0] ? elem[0] : elem;\r\n                        return prev + elem;\r\n                    }, \"\");\r\n                    emp.dis_emp_name = cho;\r\n                    emp.dis_dep_name = cho2;\r\n                    emp.selected = false;//선택 property 추가\r\n                });\r\n            },\r\n            saveInfo: function () {\r\n                /*연관검색 데이터 가져오는 메서드(SELECT ALL)*/\r\n                http\r\n                    .post(\"/app/search/dep\")\r\n                    .then(response => {\r\n                        this.depArr = response.data;\r\n                        this.idToName();\r\n                        this.addCho();\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e)\r\n                        /* eslint-disable no-console */\r\n\r\n                    });\r\n\r\n                http\r\n                    .post(\"/app/search/emp\")\r\n                    .then(response => {\r\n                        this.empArr = response.data;\r\n                        for(let i=0; i<this.empArr.length; i++){\r\n                            if(this.empArr[i].emp_id == sessionStorage.getItem(\"login_id\")){\r\n                                this.empArr.splice(i,1);\r\n                            }\r\n                        }\r\n                        this.idToName();\r\n                        this.addCho();\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                        /* eslint-disable no-console */\r\n                    });\r\n            },\r\n\r\n            selectAbove() {\r\n                /*input 에서 위,왼쪽 눌렀을때 선택된곳 */\r\n\r\n                // if(this.showArr[this.keyNum].selected == null)\r\n                //     return\r\n\r\n                if(this.showArr.length == 0){ //from jy..\r\n                    return\r\n                }\r\n\r\n                if (this.keyNum == 0) {//맨위\r\n                    this.showArr[this.keyNum].selected = true;\r\n                    this.showArr[this.keyNum + 1].selected = false;\r\n\r\n                } else if (this.keyNum == this.showArr.length) {//맨아래\r\n                    this.showArr[this.keyNum - 1].selected = true;\r\n                    this.keyNum--\r\n                } else {\r\n                    this.showArr[this.keyNum - 1].selected = true;\r\n                    this.showArr[this.keyNum].selected = false;\r\n                    this.keyNum--\r\n                }\r\n            },\r\n            selectBelow() {\r\n                /*input 에서 아래,오른쪽 눌렀을때 선택된곳*/\r\n\r\n                // if(this.showArr[this.keyNum].selected == null)\r\n                //     return//수정해야됨***\r\n\r\n                if(this.showArr.length == 0){ //from jy..\r\n                    return\r\n                }\r\n\r\n                if (this.keyNum == 0) {//맨위\r\n                    this.showArr[this.keyNum].selected = true;\r\n                    this.keyNum++\r\n                } else if (this.keyNum + 1 == this.showArr.length) {//맨아래\r\n                    this.showArr[this.keyNum - 1].selected = true;\r\n                } else {\r\n                    this.showArr[this.keyNum].selected = true;\r\n                    this.showArr[this.keyNum - 1].selected = false;\r\n                    this.keyNum++\r\n                }\r\n\r\n            }, isSelected(index) {\r\n                /* 선택된 class 바인딩 위해 return 반환하는 메서드*/\r\n                if (index == this.keyNum) {\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            }, isValid(){\r\n                if(this.showArr.length>0){\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            },\r\n            extractSelected(index){\r\n                /*변수에 선택한 결제재 정보 넘겨주는 메서드*/\r\n                if(index != null){\r\n                    this.keyNum = index\r\n                }\r\n                if(this.sign1 == ''){\r\n                this.sign1 = this.showArr[this.keyNum].emp_name\r\n                this.sign1id = this.showArr[this.keyNum].emp_id\r\n                }else if(this.sign1 != '' && this.sign1 == this.showArr[this.keyNum].emp_name){\r\n                    alert(\"이미 지정한 결제자입니다!\")\r\n                }else if(this.sign1 != '' && this.sign2 == '' && this.sign1 != this.showArr[this.keyNum].emp_name){\r\n                  this.sign2 = this.showArr[this.keyNum].emp_name\r\n                  this.sign2id = this.showArr[this.keyNum].emp_id\r\n                }else if(this.sign1 != '' && this.sign2 != '' && (this.sign1 == this.showArr[this.keyNum].emp_name || this.sign2 == this.showArr[this.keyNum].emp_name)){\r\n                    alert(\"이미 지정한 결제자입니다!\")\r\n                }else if(this.sign1 !='' && this.sign2 !='' && this.sign1 != this.showArr[this.keyNum].emp_name && this.sign2 != this.showArr[this.keyNum].emp_name) {\r\n                    this.sign3 = this.showArr[this.keyNum].emp_name\r\n                    this.sign3id = this.showArr[this.keyNum].emp_id\r\n                }\r\n            },\r\n            removeAutoComplete(){\r\n                this.showArr.length = 0;\r\n            }\r\n\r\n\r\n        },//End of method :{}\r\n        mounted() {\r\n            /*db가져와서 info에 넣어주는 로직*/\r\n            this.saveInfo();\r\n        },//End of mounted(){}\r\n\r\n    }//End of export default\r\n</script>\r\n\r\n<style scoped>\r\n    .selected {\r\n        background-color: #ECF0F1;\r\n    }\r\n\r\n    .searchResult {\r\n        max-height: 215px;\r\n        overflow: scroll;\r\n        text-overflow: ellipsis; /*말 줄임표 위한 설정*/\r\n        white-space: nowrap; /*말 줄임표 위한 설정*/\r\n        overflow-x: hidden; /*가로 스크롤바 없애기*/\r\n        -ms-overflow-style: none; /*IE에서 스크롤바 투명하게 하기*/\r\n    }\r\n    .searchResult::-webkit-scrollbar { /*IE 제외한 브라우저에서 스크롤바 투명하게 하기*/\r\n        width: 1px;\r\n        background: transparent;\r\n    }\r\n</style>"]}]}