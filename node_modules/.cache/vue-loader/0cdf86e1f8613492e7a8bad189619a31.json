{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\PostSubmenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\PostSubmenu.vue","mtime":1580967093430},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBodHRwIGZyb20gIi4uLy4uL2h0dHAtY29tbW9uIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJib2FyZCIsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CgogICAgICAgICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICAgICAgICBlbXBJRDogIiIsCiAgICAgICAgICAgIGRlcF9pZDogIiIsCiAgICAgICAgICAgIGJvYXJkX25hbWU6IiIsCiAgICAgICAgICAgIGJvYXJkczpbXQoKICAgICAgICB9OwogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwogICAgICAgIC8v7KCA7J6l65CcIOqyjOyLnO2MkCDrqoXsnYQg6rCA7KC47Jik64qUIOuplOyEnOuTnAogICAgICAgIGdldEJvYXJkKCl7CiAgICAgICAgICAgIGh0dHAKICAgICAgICAgICAgLmdldCgiL2JvYXJkL2dldEJvYXJkLyIgKyB0aGlzLmRlcF9pZCkKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT57CiAgICAgICAgICAgICAgICB0aGlzLmJvYXJkcz1yZXNwb25zZS5kYXRhOwogICAgICAgICAgICB9KQoKICAgICAgICB9LAoKCiAgICAgICAgYmFja2xpc3QoKXsKICAgICAgICAgICAgaGlzdG9yeS5nbygtMSk7CiAgICAgICAgfSwKCiAgICAgICAgZ2V0RW1wSW5mbyhpZCkgeyAgICAvLyDrp6TqsJzrs4DsiJggaWTripQgdGhpcy5lbXBsb3llZS5lbXBfaWQg7J2064ukLiA6IG1vdW50ZWQoKeuVjCDtmLjstpzrkJjripQg66mU7IaM65OcLgogICAgICAgICAgICBodHRwCiAgICAgICAgICAgICAgICAucG9zdCgiL215cGFnZS8iICsgaWQpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgLy8g7J2R64u1IOuNsOydtO2EsOulvCBlbXBsb3llZSDrjbDsnbTthLDsl5Ag64yA7J6F7ZWY6riwLgogICAgICAgICAgICAgICAgICAgIHRoaXMuZGVwX2lkID0gcmVzcG9uc2UuZGF0YS5kZXBfaWQ7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4gewogICAgICAgICAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgd3JpdGVDaGVjaygpIHsKICAgICAgICAgICAgbGV0IHdyaXRlX2NoayA9IGxvY2F0aW9uLmhyZWYuaW5kZXhPZigiZGVwX3BzdCIpOyAgLy8gZGVwX3BzdCDqsIAg7Y+s7ZWo65CY7Ja0IOyeiOycvOuptCAwKOu2gOyEnOqyjOyLnO2MkCkg7J207IOB7J2YIOyIq+yekCwg7JeG7Jy866m0IC0xKOyghOyCrOqyjOyLnO2MkCkKICAgICAgICAgICAgY29uc29sZS5sb2cod3JpdGVfY2hrKTsKICAgICAgICAgICAgaWYod3JpdGVfY2hrPT0tMSkgewogICAgICAgICAgICAgICAgLy8g7ZiE7J6sIOyghOyCrCDqsozsi5ztjJAg7ISg7YOdIOyDge2DnAogICAgICAgICAgICAgICAgdGhpcy5wb3N0X2RlcF9pZCA9IDA7ICAgLy8gIHBvc3RfZGVwX2lkIOyXkCAw64Sj6riwCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmdldEVtcEluZm8odGhpcy5lbXBJRCk7ICAgIC8vIGVtcElE66GcIOyCrOybkOygleuztCDqsIDsoLjsmKTquLAgOiBkZXBfaWTrp4wg7IKs7Jqp7ZWoCgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmxlbmd0aCA+IDApIHsgLy8g7ZiE7J6sIHNlc3Npb25TdG9yYWdl7JeQIOyalOyGjOqwgCDsobTsnqztlZjripQg7IOB7YOc7J28IOuVjCjroZzqt7jsnbjsnbQg65CY7Ja07IScIHNlc3Npb25TdG9yYWdl7JeQIOyggOyepeuQnCDsg4Htg5zsnbwg65WMKQogICAgICAgICAgICB0aGlzLmVtcElEID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgibG9naW5faWQiKTsgLy8g7J20IOy7tO2PrOuEjO2KuOyXkCDshKDslrjrkJwgZW1wSUQg67OA7IiY7JeQIO2YhOyerCDroZzqt7jsnbjtlZwg7IKs67KIIOuEo+q4sAogICAgICAgICAgICAvLyB0aGlzLmdldE5hbWUodGhpcy5lbXBJRCk7ICAgLy8gZW1wSUTroZwg7IKs7JuQ66qFIOqwgOyguOyYpOuKlCDrqZTshozrk5wg7Zi47LacCiAgICAgICAgICAgIHRoaXMuZ2V0RW1wSW5mbyh0aGlzLmVtcElEKTsKCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iKTsKICAgICAgICB9CgogICAgfSwKICAgIHVwZGF0ZWQoKSB7CgogICAgICAgICAgICB0aGlzLndyaXRlQ2hlY2soKTsKICAgIH0KfTsK"},{"version":3,"sources":["PostSubmenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"PostSubmenu.vue","sourceRoot":"src/components/posts","sourcesContent":["<template>\r\n    <div class=\"subMenu\">\r\n\r\n        <ul class=\"nav nav-pills flex-column\">\r\n\r\n            <router-link to=\"/pst\">\r\n\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center libgclr\">\r\n\r\n                    전사 게시판\r\n\r\n                </li>\r\n            </router-link>\r\n\r\n            <router-link to=\"/dep_pst\">\r\n\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center libgclr\">\r\n\r\n                부서 게시판\r\n\r\n            </li>\r\n        </router-link>\r\n\r\n\r\n\r\n\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg\" @click=\"getBoard\">우리 부서 게시판</button>\r\n\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center libgclr\"\r\n                    v-for=\"(board, index) in boards\" :key=\"index\">\r\n                    <router-link :to=\"{\r\n                       name: 'DepPage',\r\n                       params:{board:board, board_name:board.board_name}\r\n                    }\">\r\n                        <span>{{board.board_name}}</span>\r\n                    </router-link>\r\n                </li>\r\n\r\n        </ul>\r\n        <router-link to=\"/dep_pst/newBoard\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg\">게시판 등록</button>\r\n        </router-link>\r\n        <router-link to=\"/dep_pst/DeleteBoard\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg\">게시판 삭제</button>\r\n        </router-link>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n\r\n    export default {\r\n        name: \"board\",\r\n        data() {\r\n            return {\r\n\r\n                submitted: false,\r\n                empID: \"\",\r\n                dep_id: \"\",\r\n                board_name:\"\",\r\n                boards:[]\r\n\r\n            };\r\n        },\r\n\r\n        methods: {\r\n            /* eslint-disable no-console */\r\n            //저장된 게시판 명을 가져오는 메서드\r\n            getBoard(){\r\n                http\r\n                .get(\"/board/getBoard/\" + this.dep_id)\r\n                .then(response =>{\r\n                    this.boards=response.data;\r\n                })\r\n\r\n            },\r\n\r\n\r\n            backlist(){\r\n                history.go(-1);\r\n            },\r\n\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.dep_id = response.data.dep_id;\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            writeCheck() {\r\n                let write_chk = location.href.indexOf(\"dep_pst\");  // dep_pst 가 포함되어 있으면 0(부서게시판) 이상의 숫자, 없으면 -1(전사게시판)\r\n                console.log(write_chk);\r\n                if(write_chk==-1) {\r\n                    // 현재 전사 게시판 선택 상태\r\n                    this.post_dep_id = 0;   //  post_dep_id 에 0넣기\r\n                } else {\r\n                    this.getEmpInfo(this.empID);    // empID로 사원정보 가져오기 : dep_id만 사용함\r\n\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empID = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                // this.getName(this.empID);   // empID로 사원명 가져오는 메소드 호출\r\n                this.getEmpInfo(this.empID);\r\n\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n\r\n        },\r\n        updated() {\r\n\r\n                this.writeCheck();\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}