{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\posts\\DepBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\posts\\DepBoard.vue","mtime":1581408201659},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUG9zdFN1Ym1lbnUgZnJvbSAiLi9Qb3N0U3VibWVudSI7CmltcG9ydCBodHRwIGZyb20gIi4uLy4uL2h0dHAtY29tbW9uIjsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi9yb3V0ZXIiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImJvYXJkIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdDogewogICAgICAgIHBvc3RfaWQ6ICIiLAogICAgICAgIGJvYXJkX25hbWU6ICIiLAogICAgICAgIHBvc3Rfd3JpdGVyOiAiIiwKICAgICAgICBwb3N0X3N1YmplY3Q6ICIiLAogICAgICAgIHBvc3RfY29udGVudDogIiIsCiAgICAgICAgcG9zdF9jcmVhdGVkOiAiIiwKICAgICAgICBwb3N0X3ZpZXc6ICIiCiAgICAgIH0sCiAgICAgIHN1Ym1pdHRlZDogZmFsc2UsCiAgICAgIGVtcElEOiAiIiwKICAgICAgZGVwX2lkOiAiIiwKICAgICAgYm9hcmRfbmFtZTogIiIKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBzdWJNZW51OiBQb3N0U3VibWVudQogIH0sCiAgbWV0aG9kczogewogICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwogICAgLy/snoXroKXtlZwg642w7J207YSwIOyggOyepe2VmOuKlCDrqZTshJzrk5wKICAgIHRlc3RidXR0b246IGZ1bmN0aW9uIHRlc3RidXR0b24oKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGVwX2lkKTsKICAgIH0sCiAgICAvL+yDiOuhnOyatCDqsozsi5ztjJDsnYQg66eM65Ok7Ja0IOyggOyepe2VmOuKlCDrqZTshJzrk5wKICAgIHNhdmVCb2FyZDogZnVuY3Rpb24gc2F2ZUJvYXJkKCkgewogICAgICB2YXIgQm9hcmQgPSB7CiAgICAgICAgYm9hcmRfbmFtZTogdGhpcy5ib2FyZF9uYW1lLAogICAgICAgIGRlcF9pZDogdGhpcy5kZXBfaWQKICAgICAgfTsKICAgICAgaHR0cC5wb3N0KCIvYm9hcmQvc2F2ZUJvYXJkIiwgQm9hcmQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7fSk7CiAgICAgIGFsZXJ0KCLsg4gg6rKM7Iuc7YyQ7J20IOuTseuhneuQmOyXiOyKteuLiOuLpCEhIik7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvZGVwX3BzdCIpOwogICAgfSwKICAgIC8v7J207KCEIO2OmOydtOyngOuhnCDrj4zslYTqsIDripQg66mU7ISc65OcCiAgICBiYWNrbGlzdDogZnVuY3Rpb24gYmFja2xpc3QoKSB7CiAgICAgIGhpc3RvcnkuZ28oLTEpOwogICAgfSwKICAgIGdldE5hbWU6IGZ1bmN0aW9uIGdldE5hbWUobG9naW5faWQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8qIOyCrOybkOuyiO2YuOyXkCDtlbTri7ntlZjripQg7IKs7JuQ66qFIOqwgOyguOyYpOuKlCDrqZTshozrk5wgKi8KICAgICAgaHR0cC5wb3N0KCIvbG9naW4vbmFtZS8iICsgbG9naW5faWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMucG9zdC5wb3N0X3dyaXRlciA9IHJlc3BvbnNlLmRhdGE7IC8vIHN1cnZleV93cml0ZXIg7JeQIO2YhOyerCDroZzqt7jsnbjtlZwg7IKs7JuQ66qF7J20IOuTpOyWtOqwkC4KICAgICAgfSk7CiAgICB9LAogICAgLy8gRW5kIC0gZ2V0TmFtZSgpCiAgICBnZXRFbXBJbmZvOiBmdW5jdGlvbiBnZXRFbXBJbmZvKGlkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy8g66ek6rCc67OA7IiYIGlk64qUIHRoaXMuZW1wbG95ZWUuZW1wX2lkIOydtOuLpC4gOiBtb3VudGVkKCnrlYwg7Zi47Lac65CY64qUIOuplOyGjOuTnC4KICAgICAgaHR0cC5wb3N0KCIvbXlwYWdlLyIgKyBpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAvLyDsnZHri7Ug642w7J207YSw66W8IGVtcGxveWVlIOuNsOydtO2EsOyXkCDrjIDsnoXtlZjquLAuCiAgICAgICAgX3RoaXMyLmRlcF9pZCA9IHJlc3BvbnNlLmRhdGEuZGVwX2lkOwogICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5kZXBfaWQgKyAiIOuwm+yVhCDsmKggZGVwSUQ/Iik7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICB3cml0ZUNoZWNrOiBmdW5jdGlvbiB3cml0ZUNoZWNrKCkgewogICAgICB2YXIgd3JpdGVfY2hrID0gbG9jYXRpb24uaHJlZi5pbmRleE9mKCJkZXBfcHN0Iik7IC8vIGRlcF9wc3Qg6rCAIO2PrO2VqOuQmOyWtCDsnojsnLzrqbQgMCjrtoDshJzqsozsi5ztjJApIOydtOyDgeydmCDsiKvsnpAsIOyXhuycvOuptCAtMSjsoITsgqzqsozsi5ztjJApCgogICAgICBjb25zb2xlLmxvZyh3cml0ZV9jaGspOwoKICAgICAgaWYgKHdyaXRlX2NoayA9PSAtMSkgewogICAgICAgIC8vIO2YhOyerCDsoITsgqwg6rKM7Iuc7YyQIOyEoO2DnSDsg4Htg5wKICAgICAgICB0aGlzLnBvc3RfZGVwX2lkID0gMDsgLy8gIHBvc3RfZGVwX2lkIOyXkCAw64Sj6riwCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5nZXRFbXBJbmZvKHRoaXMuZW1wSUQpOyAvLyBlbXBJROuhnCDsgqzsm5DsoJXrs7Qg6rCA7KC47Jik6riwIDogZGVwX2lk66eMIOyCrOyaqe2VqAogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gbW91bnRlZCDrkKAg65WMIOuhnOq3uOyduOydtCDrkJjslrTsnojripQg7IOB7YOc652866m0CiAgICBpZiAoc2Vzc2lvblN0b3JhZ2UubGVuZ3RoID4gMCkgewogICAgICAvLyDtmITsnqwgc2Vzc2lvblN0b3JhZ2Xsl5Ag7JqU7IaM6rCAIOyhtOyerO2VmOuKlCDsg4Htg5zsnbwg65WMKOuhnOq3uOyduOydtCDrkJjslrTshJwgc2Vzc2lvblN0b3JhZ2Xsl5Ag7KCA7J6l65CcIOyDge2DnOydvCDrlYwpCiAgICAgIHRoaXMuZW1wSUQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJsb2dpbl9pZCIpOyAvLyDsnbQg7Lu07Y+s64SM7Yq47JeQIOyEoOyWuOuQnCBlbXBJRCDrs4DsiJjsl5Ag7ZiE7J6sIOuhnOq3uOyduO2VnCDsgqzrsogg64Sj6riwCgogICAgICB0aGlzLmdldE5hbWUodGhpcy5lbXBJRCk7IC8vIGVtcElE66GcIOyCrOybkOuqhSDqsIDsoLjsmKTripQg66mU7IaM65OcIO2YuOy2nAogICAgfSBlbHNlIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iKTsKICAgIH0KICB9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7CiAgICB0aGlzLndyaXRlQ2hlY2soKTsKICB9Cn07"},{"version":3,"sources":["DepBoard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"newBoard\"><h4 style=\"font-weight: bold\">새 게시판 만들기</h4><br>\r\n        <div>\r\n            <div>\r\n                <subMenu></subMenu>\r\n            </div>\r\n\r\n            <div v-if=\"!submitted\">\r\n                <!--        사용자 정보 입력란-->\r\n                <div class=\"newcontent\">\r\n                    <div class=\"form-group \" >\r\n                        <label style=\"font-weight: bold; margin-left: 30%;\">작성자</label>\r\n                        <input type=\"text\" class=\"form-control \" style=\"width: 150%;\" id=\"writer\" required v-model=\"post.post_writer\" name=\"writer\" placeholder=\"작성자\" readonly>\r\n\r\n\r\n                    </div>  <br>\r\n                    <div class=\"form-group \">\r\n                        <label style=\"font-weight: bold; margin-left: 30%;\">게시판 명</label>\r\n                        <input type=\"text\" class=\"form-control\" style=\"width: 150%;\" id=\"subject\" required v-model=\"board_name\" name=\"subject\" placeholder=\"게시판 명\">\r\n                    </div>\r\n\r\n                    <br>\r\n                </div>\r\n                <div class=\"boardbutton\">\r\n                <button v-on:click=\"saveBoard\" class=\"btn btn-success\">등록하기</button>\r\n                <button class=\"btn btn-danger\" @click=\"backlist\">취소하기</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-else>\r\n                <h4>게시물이 등록 되었습니다 !!</h4>\r\n                <button class=\"btn btn-success\" @click=\"backlist\">돌아가기</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import PostSubmenu from \"./PostSubmenu\";\r\n    import http from \"../../http-common\";\r\n    import router from \"../../router\";\r\n\r\n    export default {\r\n        name: \"board\",\r\n        data() {\r\n            return {\r\n                post: {\r\n                    post_id: \"\",\r\n                    board_name: \"\",\r\n                    post_writer: \"\",\r\n                    post_subject: \"\",\r\n                    post_content: \"\",\r\n                    post_created: \"\",\r\n                    post_view: \"\"\r\n                },\r\n                submitted: false,\r\n                empID: \"\",\r\n                dep_id: \"\",\r\n                board_name:\"\"\r\n\r\n\r\n\r\n            };\r\n        },\r\n        components: {\r\n            subMenu: PostSubmenu\r\n        },\r\n        methods: {\r\n\r\n            /* eslint-disable no-console */\r\n            //입력한 데이터 저장하는 메서드\r\n            testbutton() {\r\n                console.log(this.dep_id)\r\n            },\r\n            //새로운 게시판을 만들어 저장하는 메서드\r\n            saveBoard(){\r\n                var Board ={\r\n                    board_name:this.board_name,\r\n                    dep_id:this.dep_id\r\n                };\r\n                http\r\n                    .post(\"/board/saveBoard\",Board)\r\n                    .then(response =>{\r\n                    })\r\n                alert(\"새 게시판이 등록되었습니다!!\");\r\n                this.$router.push(\"/dep_pst\");\r\n            },\r\n            //이전 페이지로 돌아가는 메서드\r\n            backlist(){\r\n                history.go(-1);\r\n            },\r\n            getName(login_id) {\r\n                /* 사원번호에 해당하는 사원명 가져오는 메소드 */\r\n                http\r\n                    .post(\"/login/name/\" + login_id)\r\n                    .then(response => {\r\n                        this.post.post_writer = response.data; // survey_writer 에 현재 로그인한 사원명이 들어감.\r\n                    })\r\n            }, // End - getName()\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.dep_id = response.data.dep_id;\r\n                        console.log(this.dep_id+\" 받아 온 depID?\")\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            writeCheck() {\r\n                let write_chk = location.href.indexOf(\"dep_pst\");  // dep_pst 가 포함되어 있으면 0(부서게시판) 이상의 숫자, 없으면 -1(전사게시판)\r\n                console.log(write_chk);\r\n                if(write_chk==-1) {\r\n                    // 현재 전사 게시판 선택 상태\r\n                    this.post_dep_id = 0;   //  post_dep_id 에 0넣기\r\n                } else {\r\n                    this.getEmpInfo(this.empID);    // empID로 사원정보 가져오기 : dep_id만 사용함\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empID = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                this.getName(this.empID);   // empID로 사원명 가져오는 메소드 호출\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        },\r\n        updated() {\r\n            this.writeCheck();\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .newBoard_cont{\r\n        border: 1px solid #dddddd;\r\n        border-radius: 10px;\r\n        width: 40%;\r\n        margin: 10px auto;\r\n    }\r\n    .newBoard_cont_form {\r\n        width: 100%;\r\n\r\n    }\r\n\r\n\r\n    .btn btn-success{\r\n        display: none;\r\n    }\r\n    .newBoard{\r\n\r\n    }\r\n    .newcontent{\r\n        position: absolute;\r\n        left: 42%;\r\n    }\r\n    .boardbutton{\r\n        position: absolute;\r\n        left: 45%;\r\n        top: 50%;\r\n    }\r\n</style>"],"sourceRoot":"src/components/posts"}]}