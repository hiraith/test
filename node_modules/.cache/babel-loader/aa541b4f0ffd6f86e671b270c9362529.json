{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\Addposts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\Addposts.vue","mtime":1580967093414},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgaHR0cCBmcm9tICIuLi8uLi9odHRwLWNvbW1vbiI7CmltcG9ydCBQb3N0U3VibWVudSBmcm9tICIuL1Bvc3RTdWJtZW51IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJhZGQtcG9zdCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3Q6IHsKICAgICAgICBwb3N0X2lkOiAiIiwKICAgICAgICBib2FyZF9uYW1lOiAiIiwKICAgICAgICBwb3N0X3dyaXRlcjogIiIsCiAgICAgICAgcG9zdF9zdWJqZWN0OiAiIiwKICAgICAgICBwb3N0X2NvbnRlbnQ6ICIiLAogICAgICAgIHBvc3RfY3JlYXRlZDogIiIsCiAgICAgICAgcG9zdF92aWV3OiAiIgogICAgICB9LAogICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICBlbXBJRDogIiIsCiAgICAgIHBvc3RfZGVwX2lkOiAiIiwKICAgICAgYm9hcmRzOiBbXQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHN1Yk1lbnU6IFBvc3RTdWJtZW51CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovCiAgICAvL+yeheugpe2VnCDrjbDsnbTthLAg7KCA7J6l7ZWY64qUIOuplOyEnOuTnAogICAgc2F2ZVBvc3Q6IGZ1bmN0aW9uIHNhdmVQb3N0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgcG9zdF9pZDogdGhpcy5wb3N0LnBvc3RfaWQsCiAgICAgICAgYm9hcmRfbmFtZTogdGhpcy5wb3N0LmJvYXJkX25hbWUsCiAgICAgICAgcG9zdF9kZXBfaWQ6IHRoaXMucG9zdF9kZXBfaWQsCiAgICAgICAgcG9zdF93cml0ZXI6IHRoaXMucG9zdC5wb3N0X3dyaXRlciwKICAgICAgICBwb3N0X3N1YmplY3Q6IHRoaXMucG9zdC5wb3N0X3N1YmplY3QsCiAgICAgICAgcG9zdF9jb250ZW50OiB0aGlzLnBvc3QucG9zdF9jb250ZW50LAogICAgICAgIHBvc3RfY3JlYXRlZDogdGhpcy5wb3N0LnBvc3RfY3JlYXRlZCwKICAgICAgICBwb3N0X3ZpZXc6IHRoaXMucG9zdC5wb3N0X3ZpZXcsCiAgICAgICAgZW1wX2lkOiB0aGlzLmVtcF9pZAogICAgICB9OyAvL+yeheugpe2VnCDrjbDsnbTthLDrk6TsnYQg7Luo7Yq466Gk65+s7JeQIOuztOuCtOyjvOuKlCDrqZTshJzrk5wKCiAgICAgIGh0dHAucG9zdCgiL3BzdC9wb3N0IiwgZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5wb3N0LnBvc3RfaWQgPSByZXNwb25zZS5kYXRhLnBvc3RfaWQ7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgICB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7CiAgICAgIGFsZXJ0KCLqsozsi5zquIDsnYQg7ISx6rO17KCB7Jy866GcIOuTseuhne2VmOyYgOyKteuLiOuLpCAhIik7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAnL2RlcF9wc3QnCiAgICAgIH0pOwogICAgfSwKICAgIC8v7Y6Y7J207KeAIOuQmOuPjOumrOq4sAogICAgYmFja2xpc3Q6IGZ1bmN0aW9uIGJhY2tsaXN0KCkgewogICAgICBoaXN0b3J5LmdvKC0xKTsKICAgIH0sCiAgICBnZXROYW1lOiBmdW5jdGlvbiBnZXROYW1lKGxvZ2luX2lkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLyog7IKs7JuQ67KI7Zi47JeQIO2VtOuLue2VmOuKlCDsgqzsm5DrqoUg6rCA7KC47Jik64qUIOuplOyGjOuTnCAqLwogICAgICBodHRwLnBvc3QoIi9sb2dpbi9uYW1lLyIgKyBsb2dpbl9pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIucG9zdC5wb3N0X3dyaXRlciA9IHJlc3BvbnNlLmRhdGE7IC8vIHN1cnZleV93cml0ZXIg7JeQIO2YhOyerCDroZzqt7jsnbjtlZwg7IKs7JuQ66qF7J20IOuTpOyWtOqwkC4KICAgICAgfSk7CiAgICB9LAogICAgLy8gRW5kIC0gZ2V0TmFtZSgpCiAgICBnZXRFbXBJbmZvOiBmdW5jdGlvbiBnZXRFbXBJbmZvKGlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgLy8g66ek6rCc67OA7IiYIGlk64qUIHRoaXMuZW1wbG95ZWUuZW1wX2lkIOydtOuLpC4gOiBtb3VudGVkKCnrlYwg7Zi47Lac65CY64qUIOuplOyGjOuTnC4KICAgICAgaHR0cC5wb3N0KCIvbXlwYWdlLyIgKyBpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAvLyDsnZHri7Ug642w7J207YSw66W8IGVtcGxveWVlIOuNsOydtO2EsOyXkCDrjIDsnoXtlZjquLAuCiAgICAgICAgX3RoaXMzLnBvc3RfZGVwX2lkID0gcmVzcG9uc2UuZGF0YS5kZXBfaWQ7CgogICAgICAgIF90aGlzMy5nZXRCb2FyZCgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgfSk7CiAgICB9LAogICAgd3JpdGVDaGVjazogZnVuY3Rpb24gd3JpdGVDaGVjaygpIHsKICAgICAgdmFyIHdyaXRlX2NoayA9IGxvY2F0aW9uLmhyZWYuaW5kZXhPZigiZGVwX3BzdCIpOyAvLyBkZXBfcHN0IOqwgCDtj6ztlajrkJjslrQg7J6I7Jy866m0IDAo67aA7ISc6rKM7Iuc7YyQKSDsnbTsg4HsnZgg7Iir7J6QLCDsl4bsnLzrqbQgLTEo7KCE7IKs6rKM7Iuc7YyQKQoKICAgICAgY29uc29sZS5sb2cod3JpdGVfY2hrKTsKCiAgICAgIGlmICh3cml0ZV9jaGsgPT0gLTEpIHsKICAgICAgICAvLyDtmITsnqwg7KCE7IKsIOqyjOyLnO2MkCDshKDtg50g7IOB7YOcCiAgICAgICAgdGhpcy5wb3N0X2RlcF9pZCA9IDA7IC8vICBwb3N0X2RlcF9pZCDsl5AgMOuEo+q4sAogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZ2V0RW1wSW5mbyh0aGlzLmVtcElEKTsgLy8gZW1wSUTroZwg7IKs7JuQ7KCV67O0IOqwgOyguOyYpOq4sCA6IGRlcF9pZOunjCDsgqzsmqntlagKICAgICAgfQogICAgfSwKICAgIC8v7KCA7J6l65CcIOu2gOyEnCBib2FyZF9uYW1lIOydhCDrtojrn6zsmKTripQg66mU7ISc65OcCiAgICBnZXRCb2FyZDogZnVuY3Rpb24gZ2V0Qm9hcmQoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgaHR0cC5nZXQoIi9ib2FyZC9nZXRCb2FyZC8iICsgdGhpcy5wb3N0X2RlcF9pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczQuYm9hcmRzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgLy/snoXroKXsnYQg7Leo7IaM7ZWY6rOgIOumrOyKpO2KuOuhnCDrj4zslYTqsIDripQg66mU7ISc65OcCiAgICBjbmx0aDogZnVuY3Rpb24gY25sdGgoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAnL2RlcF9wc3QvJwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyBtb3VudGVkIOuQoCDrlYwg66Gc6re47J247J20IOuQmOyWtOyeiOuKlCDsg4Htg5zrnbzrqbQKICAgIGlmIChzZXNzaW9uU3RvcmFnZS5sZW5ndGggPiAwKSB7CiAgICAgIC8vIO2YhOyerCBzZXNzaW9uU3RvcmFnZeyXkCDsmpTshozqsIAg7KG07J6s7ZWY64qUIOyDge2DnOydvCDrlYwo66Gc6re47J247J20IOuQmOyWtOyEnCBzZXNzaW9uU3RvcmFnZeyXkCDsoIDsnqXrkJwg7IOB7YOc7J28IOuVjCkKICAgICAgdGhpcy5lbXBJRCA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImxvZ2luX2lkIik7IC8vIOydtCDsu7Ttj6zrhIztirjsl5Ag7ISg7Ja465CcIGVtcElEIOuzgOyImOyXkCDtmITsnqwg66Gc6re47J247ZWcIOyCrOuyiCDrhKPquLAKCiAgICAgIHRoaXMuZ2V0TmFtZSh0aGlzLmVtcElEKTsgLy8gZW1wSUTroZwg7IKs7JuQ66qFIOqwgOyguOyYpOuKlCDrqZTshozrk5wg7Zi47LacCgogICAgICB0aGlzLndyaXRlQ2hlY2soKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvIik7CiAgICB9CiAgfSAvLyB1cGRhdGVkKCkgewogIC8vICAgICB0aGlzLndyaXRlQ2hlY2soKTsKICAvLyB9Cgp9Ow=="},{"version":3,"sources":["Addposts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,OAAA,IAAA,MAAA,mBAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA,EAHA;AAIA,QAAA,YAAA,EAAA,EAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,YAAA,EAAA,EANA;AAOA,QAAA,SAAA,EAAA;AAPA,OADA;AAUA,MAAA,SAAA,EAAA,KAVA;AAWA,MAAA,KAAA,EAAA,EAXA;AAYA,MAAA,WAAA,EAAA,EAZA;AAaA,MAAA,MAAA,EAAA;AAbA,KAAA;AAeA,GAlBA;AAmBA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAnBA;AAsBA,EAAA,OAAA,EAAA;AAEA;AACA;AACA,IAAA,QAJA,sBAIA;AAAA;;AACA,UAAA,IAAA,GAAA;AACA,QAAA,OAAA,EAAA,KAAA,IAAA,CAAA,OADA;AAEA,QAAA,UAAA,EAAA,KAAA,IAAA,CAAA,UAFA;AAGA,QAAA,WAAA,EAAA,KAAA,WAHA;AAIA,QAAA,WAAA,EAAA,KAAA,IAAA,CAAA,WAJA;AAKA,QAAA,YAAA,EAAA,KAAA,IAAA,CAAA,YALA;AAMA,QAAA,YAAA,EAAA,KAAA,IAAA,CAAA,YANA;AAOA,QAAA,YAAA,EAAA,KAAA,IAAA,CAAA,YAPA;AAQA,QAAA,SAAA,EAAA,KAAA,IAAA,CAAA,SARA;AASA,QAAA,MAAA,EAAA,KAAA;AATA,OAAA,CADA,CAYA;;AACA,MAAA,IAAA,CACA,IADA,CACA,WADA,EACA,IADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OARA;AASA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,KAAA,CAAA,sBAAA,CAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA;AAGA,KA/BA;AAgCA;AACA,IAAA,QAjCA,sBAiCA;AACA,MAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,KAnCA;AAoCA,IAAA,OApCA,mBAoCA,QApCA,EAoCA;AAAA;;AACA;AACA,MAAA,IAAA,CACA,IADA,CACA,iBAAA,QADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CADA,CACA;AACA,OAJA;AAKA,KA3CA;AA2CA;AACA,IAAA,UA5CA,sBA4CA,EA5CA,EA4CA;AAAA;;AAAA;AACA,MAAA,IAAA,CACA,IADA,CACA,aAAA,EADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;;AACA,QAAA,MAAA,CAAA,QAAA;AACA,OANA,EAOA,KAPA,CAOA,UAAA,CAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAVA;AAWA,KAxDA;AAyDA,IAAA,UAzDA,wBAyDA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CADA,CACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA;;AACA,UAAA,SAAA,IAAA,CAAA,CAAA,EAAA;AACA;AACA,aAAA,WAAA,GAAA,CAAA,CAFA,CAEA;AACA,OAHA,MAGA;AACA,aAAA,UAAA,CAAA,KAAA,KAAA,EADA,CACA;AACA;AACA,KAlEA;AAmEA;AACA,IAAA,QApEA,sBAoEA;AAAA;;AACA,MAAA,IAAA,CACA,GADA,CACA,qBAAA,KAAA,WADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAJA;AAMA,KA3EA;AA4EA;AACA,IAAA,KA7EA,mBA6EA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA;AAGA;AAjFA,GAtBA;AAyGA,EAAA,OAzGA,qBAyGA;AACA;AACA,QAAA,cAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AAAA;AACA,WAAA,KAAA,GAAA,cAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CADA,CACA;;AACA,WAAA,OAAA,CAAA,KAAA,KAAA,EAFA,CAEA;;AACA,WAAA,UAAA;AACA,KAJA,MAIA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,GAlHA,CAmHA;AACA;AACA;;AArHA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <h3 style=\"margin: 20px; font-weight: bold\">게시판 등록</h3>\r\n    <div class=\"root\">\r\n    <div>\r\n        <div>\r\n            <subMenu></subMenu>\r\n        </div>\r\n\r\n        <div v-if=\"!submitted\"  class=\"ppo\">\r\n<!--        사용자 정보 입력란-->\r\n            <div class=\"selectbox\" style=\"margin-bottom:10px;\">\r\n            <label class=\"labelfont\">게시판 선택 &nbsp;&nbsp;&nbsp;&nbsp; </label>\r\n            <select v-model=\"post.board_name\">\r\n                <option disabled value=\"\">게시판명을 선택하세요</option>\r\n                <option v-for=\"(board, index) in boards\" :key=\"index\">{{board.board_name}}</option>\r\n            </select>\r\n            </div>\r\n            <hr>\r\n            <br>\r\n            <div class=\"form-group form-inline\" >\r\n                <label for=\"writer\" class=\"labelfont\">작성자</label>\r\n                <input type=\"email\" class=\"form-control col-sm-9\" id=\"writer\"required v-model=\"post.post_writer\" name=\"writer\" readonly>\r\n            </div>\r\n            <div class=\"form-group form-inline\">\r\n                <label for=\"writer\" class=\"labelfont\">제 &nbsp;&nbsp;&nbsp;&nbsp;목</label>\r\n                <input type=\"email\" class=\"form-control col-sm-9\" id=\"subject\"required v-model=\"post.post_subject\" name=\"subject\" aria-describedby=\"emailHelp\" placeholder=\"게시글 제목\">\r\n            </div>\r\n            <div class=\"form-group form-inline\">\r\n                <label for=\"writer\" class=\"labelfont\">작 성 란</label>\r\n                <textarea class=\"form-control col-sm-9\" id=\"exampleTextarea\" rows=\"10\" required v-model=\"post.post_content\" name=\"content\" placeholder=\"1000자 내로 입력하세요\"></textarea>\r\n            </div>\r\n            <br>\r\n            <div class=\"form-group form-inline\">\r\n                <label for=\"exampleInputFile\" class=\"labelfont\">사진 업로드</label>\r\n                <input class=\"form-control-file\" id=\"exampleInputFile\" aria-describedby=\"fileHelp\" type=\"file\">\r\n                <small class=\"form-text text-muted\" id=\"fileHelp\">안녕하세요 저는 정준희에요 멋쟁이 정준희입니다 ㅎㅎ 짱짱맨 정준희</small>\r\n            </div>\r\n\r\n        <button v-on:click=\"savePost\" class=\"btn btn-success\">게시물 등록</button> &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button v-on:click=\"cnlth\" class=\"btn btn-success\">취소하기</button>\r\n    </div>\r\n\r\n    </div>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    import PostSubmenu from \"./PostSubmenu\";\r\n    export default {\r\n        name: \"add-post\",\r\n        data() {\r\n            return {\r\n                post: {\r\n                    post_id: \"\",\r\n                    board_name: \"\",\r\n                    post_writer: \"\",\r\n                    post_subject: \"\",\r\n                    post_content: \"\",\r\n                    post_created: \"\",\r\n                    post_view: \"\"\r\n                },\r\n                submitted: false,\r\n                empID: \"\",\r\n                post_dep_id: \"\",\r\n                boards:[]\r\n            };\r\n        },\r\n        components: {\r\n            subMenu: PostSubmenu\r\n        },\r\n        methods: {\r\n\r\n            /* eslint-disable no-console */\r\n            //입력한 데이터 저장하는 메서드\r\n            savePost() {\r\n                var data = {\r\n                    post_id: this.post.post_id,\r\n                    board_name: this.post.board_name,\r\n                    post_dep_id: this.post_dep_id,\r\n                    post_writer: this.post.post_writer,\r\n                    post_subject: this.post.post_subject,\r\n                    post_content: this.post.post_content,\r\n                    post_created: this.post.post_created,\r\n                    post_view: this.post.post_view,\r\n                    emp_id:this.emp_id\r\n                };\r\n                //입력한 데이터들을 컨트롤러에 보내주는 메서드\r\n                http\r\n                    .post(\"/pst/post\", data)\r\n                    .then(response => {\r\n                        this.post.post_id = response.data.post_id;\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n                this.submitted = true;\r\n                alert(\"게시글을 성공적으로 등록하였습니다 !\");\r\n                this.$router.push({\r\n                    path:'/dep_pst'\r\n                })\r\n            },\r\n            //페이지 되돌리기\r\n            backlist(){\r\n                history.go(-1);\r\n            },\r\n            getName(login_id) {\r\n                /* 사원번호에 해당하는 사원명 가져오는 메소드 */\r\n                http\r\n                    .post(\"/login/name/\" + login_id)\r\n                    .then(response => {\r\n                        this.post.post_writer = response.data; // survey_writer 에 현재 로그인한 사원명이 들어감.\r\n                    })\r\n            }, // End - getName()\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.post_dep_id = response.data.dep_id;\r\n                        this.getBoard();\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            writeCheck() {\r\n                let write_chk = location.href.indexOf(\"dep_pst\");  // dep_pst 가 포함되어 있으면 0(부서게시판) 이상의 숫자, 없으면 -1(전사게시판)\r\n                console.log(write_chk);\r\n                if(write_chk==-1) {\r\n                    // 현재 전사 게시판 선택 상태\r\n                    this.post_dep_id = 0;   //  post_dep_id 에 0넣기\r\n                } else {\r\n                    this.getEmpInfo(this.empID);    // empID로 사원정보 가져오기 : dep_id만 사용함\r\n                }\r\n            },\r\n            //저장된 부서 board_name 을 불러오는 메서드\r\n            getBoard(){\r\n                http\r\n                    .get(\"/board/getBoard/\" + this.post_dep_id)\r\n                    .then(response =>{\r\n                        this.boards=response.data;\r\n                    })\r\n\r\n            },\r\n            //입력을 취소하고 리스트로 돌아가는 메서드\r\n            cnlth(){\r\n                this.$router.push({\r\n                    path:'/dep_pst/'\r\n                })\r\n            },\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empID = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                this.getName(this.empID);   // empID로 사원명 가져오는 메소드 호출\r\n                this.writeCheck();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        },\r\n        // updated() {\r\n        //     this.writeCheck();\r\n        // }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .ppo{\r\n        text-align: center;\r\n        max-width: 650px;\r\n        width: 100%;\r\n        margin: 0 auto;\r\n\r\n    }\r\n    .form-group{\r\n        width: 700px !important;\r\n    }\r\n    .root{\r\n        width: 800px;\r\n        border: silver solid 1px;\r\n        margin: 10px;\r\n        padding: 20px 0 50px 0;\r\n        position: absolute;\r\n        left: 24%;\r\n\r\n    }\r\n    .btn btn-success{\r\n        display: none;\r\n    }\r\n    .selectbox{\r\n        padding: 10px 0 0px 0;\r\n\r\n    }\r\n    .labelfont{\r\n        font-weight: bold;\r\n    }\r\n</style>"],"sourceRoot":"src/components/posts"}]}