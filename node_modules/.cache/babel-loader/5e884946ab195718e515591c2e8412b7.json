{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\address\\outaddress\\OutAddressMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\address\\outaddress\\OutAddressMain.vue","mtime":1580980182319},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["OutAddressMain.vue"],"names":[],"mappings":"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","sourcesContent":["<template>                                                                  <!--외부주소록 메인-->\r\n    <div class=\"list row\">\r\n        <AddressSubMenu></AddressSubMenu>\r\n        <div >\r\n            <h4>외부 주소록</h4>\r\n            <hr>\r\n            <div class=\"form-inline my-2 my-lg-0\" style=\"margin-bottom: 2px; float: right\">\r\n                <!--성명,회사명으로 검색-->\r\n                <fieldset>\r\n                    <input type=\"text\" class=\"form-control mr-sm-2\" v-on:keypress=\"searchOutAddress\"\r\n                           placeholder=\"성명, 회사명 입력\" id=\"nameAndCompany\"\r\n                           required v-model=\"nameAndCompany\" name=\"nameAndCompany\"/>\r\n\r\n                    <button class=\"btn btn-secondary my-2 my-sm-0\" v-on:click=\"searchOutAddress\">검색</button>\r\n                    <button class=\"btn btn-secondary my-2 my-sm-0\" v-on:click=\"refreshList\">취소</button>\r\n                </fieldset>\r\n            </div>\r\n\r\n\r\n            <table boder=\"2\" class=\"table table-hover\" style=\"margin-top: 70px\">\r\n                <!--출력-->\r\n                <thead class=\"table-primary\">\r\n                <td>이름</td>\r\n                <td>휴대폰</td>\r\n                <td>이메일</td>\r\n                <td>회사</td>\r\n                <td>부서 전화번호</td>\r\n\r\n                </thead>\r\n                <tr v-for=\"(outAddress,index) in currentPosts\" :key=\"index\">\r\n                    <td>\r\n\r\n                        {{outAddress.outName}}\r\n\r\n                    </td>\r\n                    <td>{{outAddress.out_mobile}}</td>\r\n                    <td>{{outAddress.out_email}}</td>\r\n                    <td>{{outAddress.outCompany}}</td>\r\n                    <td>{{outAddress.out_dep_phone}}</td>\r\n                </tr>\r\n            </table>\r\n\r\n            <div>\r\n                <ul class=\"pagination\">\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoStart()\">&laquo;</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"prev()\"><</button>\r\n                    </li>\r\n                    <li v-for=\"(pageNum, index) in currentPages\" :key=\"index\" class=\"page-item\"\r\n                        :class=\"{'active':isSelected(index)}\">\r\n                        <button class=\"page-link\" @click=\"changePage(pageNum)\">{{pageNum}}</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"next()\">></button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoEnd()\">&raquo;</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import http from \"../../../http-common\";\r\n    import AddressSubMenu from \"../AddressSubMenu\";\r\n\r\n    export default {\r\n        name: \"outAddressMain\",\r\n        data() {\r\n            return {\r\n                nameAndCompany: \"\",\r\n                outaddress: [],\r\n                currentPosts: [],\r\n                count: 0,   //총 길이\r\n                countList: 5, // 한 페이지에 나올 게시글 개수\r\n                totalPage: 1, // 페이지 번호 묶음 (5 개씩 묶음)\r\n                page: 1,\r\n                countPage: 5,\r\n                startPage: 1,\r\n                endPage: 0,\r\n                totalPages: [],\r\n                currentPages: [], // 현재 페이지 번호들 배열 5개 짜리\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            setPagination() {\r\n                this.count = this.outaddress.length;\r\n                console.log(this.outaddress.length + \"길이 찍어보기\")\r\n                this.totalPage = this.count / this.countList; // 총 페이지 개수\r\n                if (this.count % this.countList > 0) {\r\n                    this.totalPage = Math.ceil(this.totalPage);\r\n                }\r\n                if (this.totalPage < this.page) {\r\n                    this.page = this.totalPage;\r\n                }\r\n\r\n                for (let i = 0; i < this.totalPage; i++) {\r\n                    this.totalPages[i] = i + 1;\r\n                }\r\n\r\n                this.startPage = ((this.page - 1) / this.countPage) * this.countPage + 1; // 시작 페이지\r\n\r\n                if (this.totalPage < 5) {\r\n                    this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                } else {\r\n                    this.endPage = this.startPage + this.countPage - 1; // 마지막 페이지\r\n                }\r\n\r\n                this.currentPages = [];\r\n                let j = this.startPage - 1;\r\n                for (let i = 0; i <= (this.endPage - this.startPage) && j <\r\n                this.totalPage; i++) {\r\n                    this.currentPages[i] = this.totalPages[j];\r\n                    j++;\r\n                    console.log(\"curr \" + i + \"번째 \" + this.currentPages[i]);\r\n                    console.log(\"startPage : \" + this.startPage)\r\n                    console.log(\"endPage : \" + this.endPage)\r\n                    console.log(\"totalPage : \" + this.totalPage)\r\n                    console.log(\"totalPages : \" + this.totalPages)\r\n\r\n                }\r\n\r\n\r\n            },\r\n            retrieveOutAddress() {\r\n                http\r\n                    .get(\"/outaddress/outaddress\")\r\n                    .then(response => {\r\n                        this.outaddress = response.data; // JSON are parsed automatically.\r\n                        console.log(response.data);\r\n                        this.setPagination();\r\n                        this.setCurrentPosts();\r\n\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            setCurrentPosts() {\r\n                this.currentPosts = [];\r\n                let j = (this.page - 1) * this.countList;\r\n                for (let i = 0; i < this.countList && j < this.outaddress.length; i++) {\r\n                    this.currentPosts[i] = this.outaddress[j];\r\n                    j++;\r\n                }\r\n\r\n            },\r\n\r\n            refreshList() {\r\n                this.retrieveOutAddress();\r\n                this.nameAndCompany = \"\";\r\n            },\r\n\r\n            searchOutAddress() {                                                         /*회사명, 성명으로 출력*/\r\n                if (this.nameAndCompany == \"\") return;\r\n                http\r\n                    .get(\"/outaddress/outaddress/nameAndCompany/\" + this.nameAndCompany)\r\n                    .then(response => {\r\n                        this.currentPosts = response.data, // JSON are parsed automatically.\r\n                            console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            changePage(pageNum) {\r\n                this.page = pageNum;\r\n                this.setCurrentPosts();\r\n                console.log(this.page)\r\n            },\r\n            isSelected(index) { //<< >>버튼 메서드, 눌렀을때 색깔 바뀌는거\r\n                /* 선택된 class 바인딩 위해 return 반환하는 메서드*/\r\n                if (index == (this.page - 1) % this.countPage) {\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            },\r\n            prev() {\r\n                if (this.startPage != 1) {\r\n                    this.startPage = this.startPage - 5;\r\n                    this.page = this.startPage;\r\n                    if (this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage - 1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage - 1;\r\n                    for (let i = 0; i <= (this.endPage - this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                        console.log(\"curr \" + i + \"번째 \" + this.currentPages[i]);\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n            },\r\n            next() {\r\n                if (this.endPage < this.totalPage) {\r\n                    this.startPage = this.endPage + 1;\r\n                    this.page = this.startPage;\r\n                    if (this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage - 1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage - 1;\r\n                    for (let i = 0; i <= (this.endPage - this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                        console.log(\"curr \" + i + \"번째 \" + this.currentPages[i]);\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n            },\r\n            gotoStart() {\r\n                // location.reload();\r\n                this.changePage(1);\r\n                this.setPagination()\r\n            },\r\n            gotoEnd() {\r\n                let pack = Math.ceil(this.totalPage / this.countPage)//몇덩이인지(페이지묶음수)\r\n                for (let i = 0; i < pack; i++)\r\n                    this.next()\r\n                this.changePage(this.totalPage);\r\n            }\r\n\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.retrieveOutAddress();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n\r\n        },\r\n        components: {\r\n            AddressSubMenu\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .list {\r\n        text-align: center;\r\n        max-width: 90%;\r\n        /*  margin: auto;*/\r\n        margin-left: 15%;\r\n    }\r\n\r\n\r\n    .table {\r\n        width: 80%;\r\n        margin: auto;\r\n        text-align: center;\r\n    }\r\n\r\n</style>"],"sourceRoot":"src/components/address/outaddress"}]}