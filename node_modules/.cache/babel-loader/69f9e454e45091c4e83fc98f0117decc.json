{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\survey\\SurveyList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\survey\\SurveyList.vue","mtime":1580967093461},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SurveyList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"sidelist\">\r\n          <subMenu></subMenu>\r\n        </div>\r\n        <div class=\"col-md-20\">\r\n            <br>\r\n            <h4>Survey List</h4>\r\n            <br>\r\n            <table class=\"table table-hover Allsurvey\">\r\n                <thead>\r\n                <tr class=\"table-primary\">\r\n                    <td width=\"10%\">번호</td>\r\n                    <td width=\"15%\">작성자</td>\r\n                    <td>제목</td>\r\n                    <td width=\"15%\" >시작일</td>\r\n                    <td width=\"15%\">종료일</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr id=\"text-over\" v-for=\"(survey, index) in currentPosts\" :key=\"index\">\r\n                    <td>{{survey.survey_id}}</td>\r\n                    <td>{{survey.survey_writer}}</td>\r\n                    <td class=\"maljul\"><router-link :to=\"{\r\n                            name: 'survey-details',\r\n                            params: { survey: survey, survey_id: survey.survey_id}\r\n                        }\">\r\n\r\n                        {{survey.survey_subject}}\r\n                    </router-link></td>\r\n                    <td>{{time(survey.start_date)}}</td>\r\n                    <td>{{time(survey.end_date) }}</td>\r\n\r\n                </tr>\r\n\r\n                </tbody>\r\n\r\n            </table>\r\n            <div class=\"pagebox_ser\">\r\n                <ul class=\"pagination\">\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoStart()\">&laquo;</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"prev()\"><</button>\r\n                    </li>\r\n                    <li v-for=\"(pageNum, index) in currentPages\" :key=\"index\" class=\"page-item\" :class=\"{'active':isSelected(index)}\" >\r\n                        <button class=\"page-link\"  @click=\"changePage(pageNum)\">{{pageNum}}</button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"next()\">></button>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <button class=\"page-link\" @click=\"gotoEnd()\">&raquo;</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    import SurveySubmenu from \"./SurveySubmenu\";\r\n    export default {\r\n        name: \"SurveyList\",\r\n        data(){\r\n            return{\r\n                surveylist:[],\r\n                keyword: \"\",\r\n                currentPosts: [],//[ ] 현재 게시물을 보여주는 페이지\r\n                empID: \"\",\r\n                count: 0, //게시물 총 개수\r\n                countList:5, // 한 페이지에 나올 게시글 개수\r\n                totalPage:1, // 페이지 번호 묶음 (5 개씩 묶음)\r\n                page:1, // 현재 페이지 번호\r\n                countPage:5,//한 화면에 보여줄 페이지 번호\r\n                startPage:1,\r\n                endPage:0,\r\n                totalPages: [],// total Page의 for결과값을 넣어줌\r\n                currentPages: [], // 현재 페이지 번호들 배열 5개 짜리\r\n            };\r\n        },\r\n        components: {\r\n            subMenu: SurveySubmenu\r\n        },\r\n\r\n        methods:{\r\n            //저장된 설문들을 모두 요청하여 가져오는 메서드\r\n            requestSurvey(){\r\n                http\r\n                .get(\"/survey/allsurvey\")\r\n                .then(response =>{\r\n                    this.surveylist =response.data;\r\n                    this.setPagination();\r\n                    this.setCurrentPosts();\r\n                })\r\n                .catch(e =>{\r\n                    console.log(e);\r\n                })\r\n            },\r\n            setCurrentPosts() {\r\n                this.currentPosts = [];\r\n                let j = (this.page-1) * this.countList;\r\n                for(let i=0; i<this.countList && j < this.surveylist.length; i++) {\r\n                    this.currentPosts[i] = this.surveylist[j];\r\n                    j++;\r\n                }\r\n\r\n            },\r\n            setPagination() {\r\n                //컨트롤러에서 요청받은 게시물들의 길이(int)를 넣어준다\r\n                this.count = this.surveylist.length;\r\n\r\n                //게시물 총 개수와 한 페이지에 나올 게시글 개수를 나눠\r\n                //페이지 번호가 몇개로 나눠져야 하는지 계산\r\n                this.totalPage = this.count / this.countList; // 총 페이지 개수\r\n\r\n                //만약 나머지가 있으면 totalpage를 하나 더 추가한다\r\n                if(this.count % this.countList > 0){\r\n                    this.totalPage= Math.floor(this.totalPage);\r\n                    this.totalPage++; // 나머지가 있으면 totalPage 하나 더 추가\r\n                }\r\n                //현재 페이지가 총 페이지보다 클 경우\r\n                //총 페이지 번호 수를 현재 페이지에 대입한다.\r\n                if(this.totalPage < this.page){\r\n                    this.page=this.totalPage;\r\n                }\r\n                //totalPages 총 페이지수를 totalPage까지 넣는작업\r\n                //0부터 넣어주기 때문에 i +1 을 통해 1부터 넣어준다.\r\n                for(let i=0; i<this.totalPage; i++) {\r\n                    this.totalPages[i] = i+1;\r\n                }\r\n                //시작 페이지를 구하는 작업\r\n                this.startPage = ((this.page -1)/this.countPage) * this.countPage +1; // 시작 페이지\r\n                //마지막 페이지를 구하는 작업\r\n                if(this.totalPage < 5) {\r\n                    this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                } else {\r\n                    this.endPage = this.startPage + this.countPage -1; // 마지막 페이지\r\n                }\r\n                //현재 페이지 번호를 구하는 작업\r\n                this.currentPages = [];\r\n                let j = this.startPage-1;\r\n                for(let i=0; i<=(this.endPage-this.startPage) && j <\r\n                this.totalPage; i++) {\r\n                    this.currentPages[i] = this.totalPages[j];\r\n                    j++;\r\n                }\r\n\r\n\r\n            },\r\n            changePage(pageNum) {\r\n                this.page = pageNum;\r\n                this.setCurrentPosts();\r\n            },\r\n            prev() {\r\n                if(this.startPage != 1) {\r\n                    this.startPage = this.startPage -5;\r\n                    this.page = this.startPage;\r\n                    if(this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage -1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage-1;\r\n                    for(let i=0; i<=(this.endPage-this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n            },\r\n            next() {\r\n                if(this.endPage < this.totalPage) {\r\n                    this.startPage = this.endPage +1;\r\n                    this.page = this.startPage;\r\n                    if(this.totalPage < 5) {\r\n                        this.endPage = this.totalPage;  // endPage 가 totalPage 와 같다\r\n                    } else {\r\n                        this.endPage = this.startPage + this.countPage -1; // 마지막 페이지\r\n                    }\r\n\r\n                    this.currentPages = [];\r\n                    let j = this.startPage-1;\r\n                    for(let i=0; i<=(this.endPage-this.startPage) && j < this.totalPage; i++) {\r\n                        this.currentPages[i] = this.totalPages[j];\r\n                        j++;\r\n                    }\r\n                    this.setCurrentPosts();\r\n                }\r\n\r\n            },\r\n            gotoStart() {\r\n                this.changePage(1);\r\n                this.setPagination()\r\n            },\r\n            gotoEnd() {\r\n                let pack = Math.ceil(this.totalPage/this.countPage) // 몇덩이인지(페이지묶음수)\r\n                for(let i=0; i<pack && pack>0; i++){\r\n                    this.next()\r\n                    this.changePage(this.totalPage);\r\n                }\r\n            },\r\n            isSelected(index) {\r\n                /* 선택된 class 바인딩 위해 return 반환하는 메서드*/\r\n                if (index == (this.page-1)%this.countPage) {\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            },\r\n\r\n\r\n            time(date){\r\n                var moment=require(\"moment\");\r\n\r\n                return moment(date).format(\"YYYY년 MM월 DD일\");\r\n            }\r\n\r\n        },\r\n        mounted() {\r\n            // mounted 될 때 로그인이 되어있는 상태라면\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.requestSurvey();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        }\r\n\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .list {\r\n\r\n        text-align: left;\r\n        max-width: 800px;\r\n        margin: auto;\r\n    }\r\n    .pagebox_ser{\r\n        position: relative;\r\n        margin-top: 5%;\r\n        margin-left: 50%;\r\n    }\r\n    .sidelist{\r\n        position: fixed;\r\n        left: 0;\r\n    }\r\n    .maljul{\r\n        text-overflow: ellipsis; overflow: hidden;\r\n        width: 500px;\r\n        white-space: nowrap;\r\n\r\n    }\r\n    table{\r\n        /*width: 80%;*/\r\n        /*margin-left: 300px;*/\r\n        table-layout: fixed;\r\n    }\r\n    .Allsurvey{\r\n        width: 70%;\r\n        margin-left: 23%;\r\n\r\n    }\r\n</style>"],"sourceRoot":"src/components/survey"}]}