{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\DeleteBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\posts\\DeleteBoard.vue","mtime":1581408201650},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgaHR0cCBmcm9tICIuLi8uLi9odHRwLWNvbW1vbiI7CmltcG9ydCBQb3N0U3VibWVudSBmcm9tICIuL1Bvc3RTdWJtZW51IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEZWxldGUtQm9hcmQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBib2FyZHM6IFtdLAogICAgICAvL+qwgOyguOyYqCDqsozsi5ztjJDsnYQg67Cw7Je066GcIOyggOyepS4KICAgICAgZGVwX2lkOiAiIiwKICAgICAgLy/rtoDshJzrsojtmLjsl5Ag7ZW064u57ZWY64qUIOqyjOyLnO2MkOunjCDqsIDsoLjsmKTquLAg7JyE7ZW07IScCiAgICAgIHNlbGVjdEJvYXJkOiAiIiwKICAgICAgYm9hcmRfbmFtZTogIiIKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBzdWJNZW51OiBQb3N0U3VibWVudQogIH0sCiAgbWV0aG9kczogewogICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwogICAgLy/soIDsnqXrkJwg6rKM7Iuc7YyQIOuqheydhCDqsIDsoLjsmKTripQg66mU7ISc65OcCiAgICBkZWxldGVCb2FyZDogZnVuY3Rpb24gZGVsZXRlQm9hcmQoKSB7CiAgICAgIHZhciByZXN1bHQgPSBjb25maXJtKCLqsozsi5ztjJDsnYQg7IKt7KCc7ZWY66m0IO2VtOuLue2VmOuKlCDqsozsi5zquIDsnYAg66qo65GQIOyCreygnOuQqeuLiOuLpC5cbuygleunkOuhnCDqsozsi5ztjJDsnYQg7IKt7KCc7ZWY7Iuc6rKg7Iq164uI6rmMPyIpOwoKICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgIGh0dHAuZGVsZXRlKCIvYm9hcmQvZGVsZXRlQm9hcmQvIiArIHRoaXMuc2VsZWN0Qm9hcmQpOwogICAgICAgIGFsZXJ0KCLqsozsi5ztjJDsnYQg7IKt7KCc7ZWY7JiA7JSB64uI64ukLiIpOwogICAgICAgIGhpc3RvcnkuZ28oMCk7CiAgICAgIH0gZWxzZSB7Ly8gaGlzdG9yeS5nbygwKTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2codGhpcy5zZWxlY3RCb2FyZCArICI8PDw8PDw87IKt7KCc7ZWgIOqyjOyLnOusvCIpOwogICAgfSwKICAgIGdldEJvYXJkOiBmdW5jdGlvbiBnZXRCb2FyZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGh0dHAuZ2V0KCIvYm9hcmQvZ2V0Qm9hcmQvIiArIHRoaXMuZGVwX2lkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLmJvYXJkcyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgYWxlcnQoIuqyjOyLnO2MkOydhCDqsIDsoLjsmZTsirXri4jri6QhXG7sgq3soJztlaAg6rKM7Iuc7YyQ7J2EIOyEoO2Dne2VmOyEuOyalCAhIik7CiAgICAgIH0pOwogICAgfSwKICAgIGJhY2tsaXN0OiBmdW5jdGlvbiBiYWNrbGlzdCgpIHsKICAgICAgaGlzdG9yeS5nbygtMSk7CiAgICB9LAogICAgZ2V0RW1wSW5mbzogZnVuY3Rpb24gZ2V0RW1wSW5mbyhpZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vIOunpOqwnOuzgOyImCBpZOuKlCB0aGlzLmVtcGxveWVlLmVtcF9pZCDsnbTri6QuIDogbW91bnRlZCgp65WMIO2YuOy2nOuQmOuKlCDrqZTshozrk5wuCiAgICAgIGh0dHAucG9zdCgiL215cGFnZS8iICsgaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy8g7J2R64u1IOuNsOydtO2EsOulvCBlbXBsb3llZSDrjbDsnbTthLDsl5Ag64yA7J6F7ZWY6riwLgogICAgICAgIF90aGlzMi5kZXBfaWQgPSByZXNwb25zZS5kYXRhLmRlcF9pZDsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovCiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIHdyaXRlQ2hlY2s6IGZ1bmN0aW9uIHdyaXRlQ2hlY2soKSB7CiAgICAgIHZhciB3cml0ZV9jaGsgPSBsb2NhdGlvbi5ocmVmLmluZGV4T2YoImRlcF9wc3QiKTsgLy8gZGVwX3BzdCDqsIAg7Y+s7ZWo65CY7Ja0IOyeiOycvOuptCAwKOu2gOyEnOqyjOyLnO2MkCkg7J207IOB7J2YIOyIq+yekCwg7JeG7Jy866m0IC0xKOyghOyCrOqyjOyLnO2MkCkKCiAgICAgIGNvbnNvbGUubG9nKHdyaXRlX2Noayk7CgogICAgICBpZiAod3JpdGVfY2hrID09IC0xKSB7CiAgICAgICAgLy8g7ZiE7J6sIOyghOyCrCDqsozsi5ztjJAg7ISg7YOdIOyDge2DnAogICAgICAgIHRoaXMucG9zdF9kZXBfaWQgPSAwOyAvLyAgcG9zdF9kZXBfaWQg7JeQIDDrhKPquLAKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmdldEVtcEluZm8odGhpcy5lbXBJRCk7IC8vIGVtcElE66GcIOyCrOybkOygleuztCDqsIDsoLjsmKTquLAgOiBkZXBfaWTrp4wg7IKs7Jqp7ZWoCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAoc2Vzc2lvblN0b3JhZ2UubGVuZ3RoID4gMCkgewogICAgICAvLyDtmITsnqwgc2Vzc2lvblN0b3JhZ2Xsl5Ag7JqU7IaM6rCAIOyhtOyerO2VmOuKlCDsg4Htg5zsnbwg65WMKOuhnOq3uOyduOydtCDrkJjslrTshJwgc2Vzc2lvblN0b3JhZ2Xsl5Ag7KCA7J6l65CcIOyDge2DnOydvCDrlYwpCiAgICAgIHRoaXMuZW1wSUQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJsb2dpbl9pZCIpOyAvLyDsnbQg7Lu07Y+s64SM7Yq47JeQIOyEoOyWuOuQnCBlbXBJRCDrs4DsiJjsl5Ag7ZiE7J6sIOuhnOq3uOyduO2VnCDsgqzrsogg64Sj6riwCiAgICAgIC8vIHRoaXMuZ2V0TmFtZSh0aGlzLmVtcElEKTsgICAvLyBlbXBJROuhnCDsgqzsm5DrqoUg6rCA7KC47Jik64qUIOuplOyGjOuTnCDtmLjstpwKCiAgICAgIHRoaXMuZ2V0RW1wSW5mbyh0aGlzLmVtcElEKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvIik7CiAgICB9CiAgfSwKICB1cGRhdGVkOiBmdW5jdGlvbiB1cGRhdGVkKCkgewogICAgdGhpcy53cml0ZUNoZWNrKCk7CiAgfQp9Ow=="},{"version":3,"sources":["DeleteBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,IAAA,MAAA,mBAAA;AACA,OAAA,WAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AACA;AACA,MAAA,MAAA,EAAA,EAFA;AAEA;AACA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAVA;AAaA,EAAA,OAAA,EAAA;AACA;AACA;AACA,IAAA,WAHA,yBAGA;AACA,UAAA,MAAA,GAAA,OAAA,CAAA,mDAAA,CAAA;;AACA,UAAA,MAAA,EAAA;AACA,QAAA,IAAA,CACA,MADA,CACA,wBAAA,KAAA,WADA;AAEA,QAAA,KAAA,CAAA,eAAA,CAAA;AACA,QAAA,OAAA,CAAA,EAAA,CAAA,CAAA;AACA,OALA,MAKA,CACA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,WAAA,GAAA,gBAAA;AAEA,KAfA;AAgBA,IAAA,QAhBA,sBAgBA;AAAA;;AACA,MAAA,IAAA,CACA,GADA,CACA,qBAAA,KAAA,MADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,gCAAA,CAAA;AACA,OALA;AAOA,KAxBA;AA2BA,IAAA,QA3BA,sBA2BA;AACA,MAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,KA7BA;AA+BA,IAAA,UA/BA,sBA+BA,EA/BA,EA+BA;AAAA;;AAAA;AACA,MAAA,IAAA,CACA,IADA,CACA,aAAA,EADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,CAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OATA;AAUA,KA1CA;AA2CA,IAAA,UA3CA,wBA2CA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CADA,CACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA;;AACA,UAAA,SAAA,IAAA,CAAA,CAAA,EAAA;AACA;AACA,aAAA,WAAA,GAAA,CAAA,CAFA,CAEA;AACA,OAHA,MAGA;AACA,aAAA,UAAA,CAAA,KAAA,KAAA,EADA,CACA;AAEA;AACA;AArDA,GAbA;AAoEA,EAAA,OApEA,qBAoEA;AACA,QAAA,cAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AAAA;AACA,WAAA,KAAA,GAAA,cAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CADA,CACA;AACA;;AACA,WAAA,UAAA,CAAA,KAAA,KAAA;AAEA,KALA,MAKA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,GA7EA;AA8EA,EAAA,OA9EA,qBA8EA;AACA,SAAA,UAAA;AACA;AAhFA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <h4>부서 게시판 삭제</h4>\r\n            <subMenu></subMenu>\r\n        </div>\r\n        <div>\r\n        <ul>\r\n        <div>\r\n        <button type=\"button\" class=\"btn btn-primary btn-lg\" @click=\"getBoard\">부서 게시판 가져오기</button>\r\n        </div>\r\n\r\n            <p class=\"smalltext\" style=\"color: red; font-size: smaller\" >*클릭하여 게시판명을 가져오세요.</p>\r\n            <br><br>\r\n            <div>\r\n            <select class=\"custom-select\" v-model=\"selectBoard\">\r\n                <option disabled value=\"\">삭제할 게시판을 선택하세요</option>\r\n                <option v-for=\"(board,index) in boards\" :key=\"index\">\r\n                    {{board.board_name}}\r\n                </option>\r\n            </select>\r\n            </div>\r\n            <br>\r\n            <span>{{selectBoard}}</span>\r\n                <br>\r\n             <br>\r\n            <div>\r\n            <button class=\"btn btn-success\" type=\"button\" @click=\"deleteBoard\">삭제하기</button>\r\n            <button class=\"btn btn-success\" type=\"button\" @click=\"backlist\">돌아가기</button>\r\n            </div>\r\n        </ul>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    import PostSubmenu from \"./PostSubmenu\";\r\n\r\n    export default {\r\n        name: \"Delete-Board\",\r\n        data () {\r\n            return{\r\n                boards:[], //가져온 게시판을 배열로 저장.\r\n                dep_id: \"\", //부서번호에 해당하는 게시판만 가져오기 위해서\r\n                selectBoard:\"\",\r\n                board_name:\"\"\r\n            };\r\n        },\r\n        components: {\r\n            subMenu: PostSubmenu\r\n        },\r\n        methods:{\r\n            /* eslint-disable no-console */\r\n            //저장된 게시판 명을 가져오는 메서드\r\n            deleteBoard(){\r\n                    let result= confirm(\"게시판을 삭제하면 해당하는 게시글은 모두 삭제됩니다.\\n정말로 게시판을 삭제하시겠습니까?\")\r\n                    if(result){\r\n                     http\r\n                        .delete(\"/board/deleteBoard/\" + this.selectBoard)\r\n                        alert(\"게시판을 삭제하였씁니다.\")\r\n                        history.go(0);\r\n                    }else{\r\n                        // history.go(0);\r\n                    }\r\n                    console.log(this.selectBoard+\"<<<<<<<삭제할 게시물\")\r\n\r\n            },\r\n            getBoard(){\r\n                http\r\n                    .get(\"/board/getBoard/\" + this.dep_id)\r\n                    .then(response =>{\r\n                        this.boards=response.data;\r\n                        alert(\"게시판을 가져왔습니다!\\n삭제할 게시판을 선택하세요 !\")\r\n                    })\r\n\r\n            },\r\n\r\n\r\n            backlist(){\r\n                history.go(-1);\r\n            },\r\n\r\n            getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n                http\r\n                    .post(\"/mypage/\" + id)\r\n                    .then(response => {\r\n                        // 응답 데이터를 employee 데이터에 대입하기.\r\n                        this.dep_id = response.data.dep_id;\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            writeCheck() {\r\n                let write_chk = location.href.indexOf(\"dep_pst\");  // dep_pst 가 포함되어 있으면 0(부서게시판) 이상의 숫자, 없으면 -1(전사게시판)\r\n                console.log(write_chk);\r\n                if(write_chk==-1) {\r\n                    // 현재 전사 게시판 선택 상태\r\n                    this.post_dep_id = 0;   //  post_dep_id 에 0넣기\r\n                } else {\r\n                    this.getEmpInfo(this.empID);    // empID로 사원정보 가져오기 : dep_id만 사용함\r\n\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n                this.empID = sessionStorage.getItem(\"login_id\"); // 이 컴포넌트에 선언된 empID 변수에 현재 로그인한 사번 넣기\r\n                // this.getName(this.empID);   // empID로 사원명 가져오는 메소드 호출\r\n                this.getEmpInfo(this.empID);\r\n\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        },\r\n        updated() {\r\n            this.writeCheck();\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .custom-select{\r\n        width: 30%;\r\n    }\r\n\r\n</style>"],"sourceRoot":"src/components/posts"}]}