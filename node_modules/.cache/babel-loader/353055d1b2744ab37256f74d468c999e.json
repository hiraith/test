{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\main\\MainCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\src\\components\\main\\MainCalendar.vue","mtime":1581499144778},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\UpfficeFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MainCalendar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"calendar\">\r\n        <span class=\"cal_nav\">\r\n            <button class=\"btn btn-link btn-lg changeBtn\" v-on:click=\"onClickPrev(currentMonth)\">◀</button>\r\n            {{currentYear}}년 {{currentMonth}}월\r\n            <button class=\"btn btn-link btn-lg changeBtn\" v-on:click=\"onClickNext(currentMonth)\">▶</button>\r\n        </span>\r\n        <!-- table 시작 -->\r\n        <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <td v-for=\"(weekName, index) in weekNames\" v-bind:key=\"index\" class=\"weekName\">\r\n                    {{weekName}}\r\n                </td>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"(row, index) in currentCalendarMatrix\" :key=\"index\">\r\n                <td class=\"calendarCell\" v-for=\"(day, index2) in row\" :key=\"index2\">\r\n                 <div v-if=\"day!==''\">\r\n                    <span v-if=\"isToday(currentYear, currentMonth, day)\" class=\"day rounded\">\r\n                      {{day}}\r\n                    </span>\r\n\r\n                    <span v-else class=\"day\">\r\n                      {{day}}\r\n                    </span>\r\n                 </div>\r\n                <!--테이블 셀에 스크롤 달기 위한 div 태그 넣기 : 날짜가 있는 칸이면 내용 출력-->\r\n                <div v-if=\"day!==''&& hasScheduleToday(currentYear,currentMonth,day)\" class=\"scrollDiv\">\r\n                    <span v-if=\"sche[0] == getCurrDate(currentYear,currentMonth,day)\" v-for=\"(sche, index) in schedule\" :key=\"index\">\r\n                        <!-- 일정의 캘린더 별 색과 이름 넣기-->\r\n                        <span class=\"colorDot\" :style=\"{color: getCalColor(sche[1].calendar_id)}\">●</span>\r\n                    </span>\r\n                </div>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n\r\n    export default {\r\n        name: 'Calendar',\r\n        data () {\r\n            return {\r\n                weekNames: [\"월\", \"화\", \"수\",\"목\", \"금\", \"토\", \"일\"],\r\n                rootYear: 1904,\r\n                rootDayOfWeekIndex: 4, // 2000년 1월 1일은 토요일\r\n                currentYear: new Date().getFullYear(),\r\n                currentMonth: new Date().getMonth()+1,\r\n                currentDay: new Date().getDate(),\r\n                currentMonthStartWeekIndex: null,\r\n                currentCalendarMatrix: [],\r\n                endOfDay: null,\r\n                memoData: [],\r\n                emp_id: \"\",\r\n                scheduleList: [],    // 모든 schedule 리스트를 담을 배열\r\n                sche_name: \"\",       // 가져온 일정의 이름\r\n                sche_date: [],       // 일정 날짜? -- 안 쓰는 변수 정리하기\r\n                schedule: [],        // 가져온 일정 담을 배열\r\n                calendarList: [],    // 캘린더 목록\r\n                calendar_id : 0,     // 캘린더 id\r\n                cnt: 0\r\n            }\r\n        },\r\n        methods: {\r\n            init(){\r\n                this.currentMonthStartWeekIndex = this.getStartWeek(this.currentYear, this.currentMonth);\r\n                this.endOfDay = this.getEndOfDay(this.currentYear, this.currentMonth);\r\n                this.initCalendar();\r\n            },\r\n            getCalColor(calendar_id) {\r\n                for(let i=0; i<this.calendarList.length; i++) {\r\n                    if(this.calendarList[i].calendar_id == calendar_id) {\r\n                        return this.calendarList[i].calendar_color;\r\n                    }\r\n                }\r\n            },\r\n            getCurrDate(year, month, day) {\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                if(day < 10) day = \"0\" + day;           // 형식을 맞추기 위하여 일자가 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                let sche_date = year + \"-\" + month + \"-\" + day;\r\n\r\n                return sche_date;\r\n            },\r\n            hasScheduleToday(year,month,day) {\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                if(day < 10) day = \"0\" + day;           // 형식을 맞추기 위하여 일자가 한 자리 수일 때 앞에 0을 추가 해준다.\r\n                let sche_date = year + \"-\" + month + \"-\" + day;\r\n\r\n                for(let k=0; k<this.schedule.length; k++) {\r\n                    let a = [];\r\n                    a[k] = this.schedule[k].toString().split(\",\");\r\n                    if(a[k][0] == sche_date) return true;\r\n                }\r\n            },\r\n            getAllSchedules() {\r\n                this.sche_date = [];\r\n                this.sche_name = [];\r\n                this.schedule = [];\r\n\r\n                let year = this.currentYear;\r\n                let month = this.currentMonth;\r\n\r\n                if(month < 10)  month = \"0\" + month;    // 형식을 맞추기 위하여 달이 한 자리 수일 때 앞에 0을 추가 해준다.\r\n\r\n                for(let i=1; i<=this.endOfDay; i++) {\r\n                    let date = i;\r\n                    if(date < 10) date = \"0\" + date;\r\n                    let sche_date = year + \"-\" + month + \"-\" + date;\r\n\r\n                    if(this.calendar_id == 0) {\r\n                        http\r\n                            .get(\"/schedule/all/\" + this.emp_id + \"?sche_date=\" + sche_date)\r\n                            .then(response=> {\r\n                                /* eslint-disable no-console */\r\n                                this.scheduleList = response.data;\r\n                                for(let j=0; j<this.scheduleList.length; j++) {\r\n                                    this.schedule.push([ sche_date, this.scheduleList[j] ]);    //  배열에 해당 날짜와 일정 이름 넣기\r\n\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                /* eslint-disable no-console */\r\n                                console.log(e);\r\n                            });\r\n                    }\r\n\r\n                }\r\n            },\r\n            initCalendar(){\r\n                this.currentCalendarMatrix = [];\r\n                let day=1;\r\n                for(let i=0; i<6; i++){\r\n                    let calendarRow = [];\r\n                    for(let j=0; j<7; j++){\r\n                        if(i==0 && j<this.currentMonthStartWeekIndex){\r\n                            calendarRow.push(\"\");\r\n                        }\r\n                        else if(day<=this.endOfDay){\r\n                            calendarRow.push(day);\r\n                            day++;\r\n                        }\r\n                        else{\r\n                            calendarRow.push(\"\");\r\n                        }\r\n                    }\r\n                    this.currentCalendarMatrix.push(calendarRow);\r\n                }\r\n                // currentCalendarMatrix 생성된 후\r\n                this.getAllSchedules();\r\n            },\r\n            getEndOfDay(year, month){\r\n                switch(month){\r\n                    case 1:\r\n                    case 3:\r\n                    case 5:\r\n                    case 7:\r\n                    case 8:\r\n                    case 10:\r\n                    case 12:\r\n                        return 31;\r\n                        break;\r\n                    case 4:\r\n                    case 6:\r\n                    case 9:\r\n                    case 11:\r\n                        return 30;\r\n                        break;\r\n                    case 2:\r\n                        if( (year%4 == 0) && (year%100 != 0) || (year%400 == 0) ){\r\n                            return 29;\r\n                        }\r\n                        else{\r\n                            return 28;\r\n                        } // 윤달 체크 조건\r\n                        break;\r\n                    default:\r\n                        console.log(\"unknown month \" + month);\r\n                        return 0;\r\n                        break;\r\n                }\r\n            },\r\n            getStartWeek(targetYear, targetMonth){\r\n                let year = this.rootYear;\r\n                let month = 1;\r\n                let sumOfDay = this.rootDayOfWeekIndex;\r\n                while(true){\r\n                    if(targetYear > year){\r\n                        for(let i=0; i<12; i++){\r\n                            sumOfDay += this.getEndOfDay(year, month+i);\r\n                        }\r\n                        year++;\r\n                    }\r\n                    else if(targetYear == year){\r\n                        if(targetMonth > month){\r\n                            sumOfDay += this.getEndOfDay(year, month);\r\n                            month++;\r\n                        }\r\n                        else if(targetMonth == month){\r\n                            return (sumOfDay)%7;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            onClickPrev(month){\r\n                month--;\r\n                if(month<=0){\r\n                    this.currentMonth = 12;\r\n                    this.currentYear -= 1;\r\n                }\r\n                else{\r\n                    this.currentMonth -= 1;\r\n                }\r\n                this.init();\r\n            },\r\n            onClickNext(month){\r\n                month++;\r\n                if(month>12){\r\n                    this.currentMonth = 1;\r\n                    this.currentYear += 1;\r\n                }\r\n                else{\r\n                    this.currentMonth += 1;\r\n                }\r\n                this.init();\r\n            },\r\n            isToday(year, month, day){\r\n                let date = new Date();\r\n                return year == date.getFullYear() && month == date.getMonth()+1 && day == date.getDate();\r\n            },\r\n            getCalendarList() {\r\n                http\r\n                    .get(\"/calendar/list/\" + this.emp_id)\r\n                    .then(response=> {\r\n                        /* eslint-disable no-console */\r\n                        this.calendarList = response.data;\r\n                    })\r\n                    .catch(e => {\r\n                        /* eslint-disable no-console */\r\n                        console.log(e);\r\n                    });\r\n            },\r\n        },\r\n        mounted() {\r\n            if (sessionStorage.length > 0) {\r\n                this.emp_id = sessionStorage.getItem(\"login_id\");\r\n                this.init();\r\n                this.getCalendarList();\r\n            } else {\r\n                this.$router.push(\"/\");\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .calendar {\r\n        width: 30%;\r\n        height: 60%;\r\n        top: 70px;\r\n        position: absolute;\r\n        right: 15px;\r\n        border: 1px solid gray;\r\n    }\r\n    .cal_nav {\r\n        font-size: 20px;\r\n        margin: auto;\r\n    }\r\n    .weekName {\r\n        font-size: 12px;\r\n        font-weight: bold;\r\n    }\r\n    .changeBtn {\r\n        font-size: 20px;\r\n    }\r\n    .day {\r\n        font-size: 11px;\r\n        font-weight: bold;\r\n    }\r\n    .rounded {\r\n        -moz-border-radius:20px 20px 20px 20px;\r\n        border-radius:20px 20px 20px 20px;\r\n        border:solid 1px #ffffff;\r\n        background-color:#2b6bd1;\r\n        padding:3px;\r\n        color:#ffffff;\r\n    }\r\n    .calendarCell {\r\n        height: 60px;\r\n        padding: 0;\r\n    }\r\n    .scrollDiv {\r\n        text-align: center;\r\n        overflow: auto; /*말 줄임표 위한 설정 : 스크롤 안 보이게 하려면 hidden*/\r\n        width: 70%;\r\n        height: 60%;\r\n        font-size: 10px;\r\n        word-break: break-all;  /*width 넘어가면 다음 줄로 넘어가게 하기*/\r\n        overflow-x: hidden; /*가로 스크롤바 없애기*/\r\n        -ms-overflow-style: none; /*IE에서 스크롤바 투명하게 하기*/\r\n        margin: 1px auto auto;\r\n    }\r\n    .scrollDiv::-webkit-scrollbar { /*IE 제외한 브라우저에서 스크롤바 투명하게 하기*/\r\n        width: 1px;\r\n        background: transparent;\r\n    }\r\n    .colorDot {\r\n        font-size: 11px;\r\n    }\r\n</style>"],"sourceRoot":"src/components/main"}]}