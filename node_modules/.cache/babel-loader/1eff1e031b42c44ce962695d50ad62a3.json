{"remainingRequest":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\main\\MyInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\src\\components\\main\\MyInfo.vue","mtime":1581499144782},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ciz\\IdeaProjects\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGh0dHAgZnJvbSAiLi4vLi4vaHR0cC1jb21tb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImVtcGxveWVlLWluZm8iLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlbXBsb3llZTogewogICAgICAgIGVtcF9pZDogIiIsCiAgICAgICAgZW1wX25hbWU6ICIiLAogICAgICAgIHBvc2l0aW9uOiAiIiwKICAgICAgICBkZXBfaWQ6ICIiCiAgICAgIH0sCiAgICAgIGRlcF9uYW1lOiAiIiwKICAgICAgLy8g67aA7ISc7J2066aEIOuLtOydhCDrs4DsiJgKICAgICAgZW1wX2ltZ191cmw6ICIiIC8vIOyCrOybkCDsgqzsp4Qg6rK966GcCgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEVtcEluZm86IGZ1bmN0aW9uIGdldEVtcEluZm8oaWQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8vIOunpOqwnOuzgOyImCBpZOuKlCB0aGlzLmVtcGxveWVlLmVtcF9pZCDsnbTri6QuIDogbW91bnRlZCgp65WMIO2YuOy2nOuQmOuKlCDrqZTshozrk5wuCiAgICAgIGh0dHAucG9zdCgiL215cGFnZS8iICsgaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy8g7J2R64u1IOuNsOydtO2EsOulvCBlbXBsb3llZSDrjbDsnbTthLDsl5Ag64yA7J6F7ZWY6riwLgogICAgICAgIF90aGlzLmVtcGxveWVlLmVtcF9wdyA9IHJlc3BvbnNlLmRhdGEuZW1wX3B3OwogICAgICAgIF90aGlzLmVtcGxveWVlLmVtcF9uYW1lID0gcmVzcG9uc2UuZGF0YS5lbXBfbmFtZTsKICAgICAgICBfdGhpcy5lbXBsb3llZS5lbXBfZW1haWwgPSByZXNwb25zZS5kYXRhLmVtcF9lbWFpbDsKICAgICAgICBfdGhpcy5lbXBsb3llZS5wb3NpdGlvbiA9IHJlc3BvbnNlLmRhdGEucG9zaXRpb247CiAgICAgICAgX3RoaXMuZW1wbG95ZWUuaGlyZV9kYXRlID0gcmVzcG9uc2UuZGF0YS5oaXJlX2RhdGU7CiAgICAgICAgX3RoaXMuZW1wbG95ZWUuZXh0ZW5zaW9uX251bWJlciA9IHJlc3BvbnNlLmRhdGEuZXh0ZW5zaW9uX251bWJlcjsKICAgICAgICBfdGhpcy5lbXBsb3llZS5waG9uZV9udW1iZXIgPSByZXNwb25zZS5kYXRhLnBob25lX251bWJlcjsKICAgICAgICBfdGhpcy5lbXBsb3llZS5kZXBfaWQgPSByZXNwb25zZS5kYXRhLmRlcF9pZDsKCiAgICAgICAgX3RoaXMuZ2V0RGVwX05hbWUoX3RoaXMuZW1wbG95ZWUuZGVwX2lkKTsgLy8g7IKs7JuQIOygleuztCDspJEg67aA7IScIOydtOumhCDqsIDsoLjsmKTquLAKCgogICAgICAgIF90aGlzLmVtcF9pbWdfdXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9lbXBfaW1nLycgKyBfdGhpcy5lbXBsb3llZS5lbXBfaWQgKyAnLmpwZyc7IC8vIOyCrOybkCDsnbTrr7jsp4Ag6rK966GcIOyEpOyglQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gRW5kIC0gZ2V0RW1wSW5mbyA6IOyCrOybkCDsoJXrs7Qg6rCA7KC47Jik6riwLCBtb3VudGVkKCnsnbwg65WMIOyLpO2WiSDrkKguCiAgICBnZXREZXBfTmFtZTogZnVuY3Rpb24gZ2V0RGVwX05hbWUoZGVwX2lkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaHR0cC5wb3N0KCIvZGVwLyIgKyBkZXBfaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyLmRlcF9uYW1lID0gcmVzcG9uc2UuZGF0YTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovCiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSAvLyDrtoDshJwg7KCV67O0IOqwgOyguOyYpOq4sAoKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyBtb3VudGVkIOuQoCDrlYwg66Gc6re47J247J20IOuQmOyWtOyeiOuKlCDsg4Htg5zrnbzrqbQKICAgIGlmIChzZXNzaW9uU3RvcmFnZS5sZW5ndGggPiAwKSB7CiAgICAgIC8vIO2YhOyerCBzZXNzaW9uU3RvcmFnZeyXkCDsmpTshozqsIAg7KG07J6s7ZWY64qUIOyDge2DnOydvCDrlYwo66Gc6re47J247J20IOuQmOyWtOyEnCBzZXNzaW9uU3RvcmFnZeyXkCDsoIDsnqXrkJwg7IOB7YOc7J28IOuVjCkKICAgICAgdGhpcy5lbXBsb3llZS5lbXBfaWQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJsb2dpbl9pZCIpOwogICAgICB0aGlzLmdldEVtcEluZm8odGhpcy5lbXBsb3llZS5lbXBfaWQpOyAvLyDsgqzsm5Ag7KCV67O0IOqwgOyguOyYpOq4sAogICAgfSBlbHNlIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iKTsKICAgIH0KICB9IC8vIEVuZCAtIG1vdW50ZWQoKQoKfTs="},{"version":3,"sources":["MyInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,OAAA,IAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA,EAHA;AAIA,QAAA,MAAA,EAAA;AAJA,OADA;AAOA,MAAA,QAAA,EAAA,EAPA;AAOA;AACA,MAAA,WAAA,EAAA,EARA,CAQA;;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,EADA,EACA;AAAA;;AAAA;AACA,MAAA,IAAA,CACA,IADA,CACA,aAAA,EADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,SAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,SAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,IAAA,CAAA,gBAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;;AAEA,QAAA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,EAXA,CAWA;;;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,mCAAA,KAAA,CAAA,QAAA,CAAA,MAAA,GAAA,MAAA,CAZA,CAYA;AACA,OAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAnBA;AAoBA,KAtBA;AAsBA;AACA,IAAA,WAvBA,uBAuBA,MAvBA,EAuBA;AAAA;;AACA,MAAA,IAAA,CACA,IADA,CACA,UAAA,MADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OARA;AASA,KAjCA,CAiCA;;AAjCA,GAdA;AAkDA,EAAA,OAlDA,qBAkDA;AACA;AACA,QAAA,cAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AAAA;AACA,WAAA,QAAA,CAAA,MAAA,GAAA,cAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AACA,WAAA,UAAA,CAAA,KAAA,QAAA,CAAA,MAAA,EAFA,CAEA;AACA,KAHA,MAGA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,GA1DA,CA0DA;;AA1DA,CAAA","sourcesContent":["<template>\r\n    <div class=\"myInfo\">\r\n        <div class=\"img_div\">\r\n            <img v-bind:src=\"emp_img_url\"><br>\r\n        </div>\r\n        <div class=\"infoDiv\">\r\n            <div class=\"empName\"><strong>{{employee.emp_name}} {{employee.position}}</strong></div>\r\n            <div class=\"depName\">{{dep_name}}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n\r\nexport default {\r\n    name: \"employee-info\",\r\n    data() {\r\n        return {\r\n          employee: {\r\n            emp_id: \"\",\r\n            emp_name: \"\",\r\n            position: \"\",\r\n            dep_id: \"\"\r\n          },\r\n          dep_name : \"\", // 부서이름 담을 변수\r\n          emp_img_url : \"\" // 사원 사진 경로\r\n        };\r\n    },\r\n    methods: {\r\n        getEmpInfo(id) {    // 매개변수 id는 this.employee.emp_id 이다. : mounted()때 호출되는 메소드.\r\n            http\r\n            .post(\"/mypage/\" + id)\r\n            .then(response => {\r\n                // 응답 데이터를 employee 데이터에 대입하기.\r\n                this.employee.emp_pw = response.data.emp_pw;\r\n                this.employee.emp_name = response.data.emp_name;\r\n                this.employee.emp_email = response.data.emp_email;\r\n                this.employee.position = response.data.position;\r\n                this.employee.hire_date = response.data.hire_date;\r\n                this.employee.extension_number = response.data.extension_number;\r\n                this.employee.phone_number = response.data.phone_number;\r\n                this.employee.dep_id = response.data.dep_id;\r\n\r\n                this.getDep_Name(this.employee.dep_id);     // 사원 정보 중 부서 이름 가져오기\r\n                this.emp_img_url = 'http://localhost:8080/emp_img/'+ this.employee.emp_id + '.jpg';  // 사원 이미지 경로 설정\r\n            })\r\n            .catch(e => {\r\n                /* eslint-disable no-console */\r\n                console.log(e);\r\n            });\r\n        }, // End - getEmpInfo : 사원 정보 가져오기, mounted()일 때 실행 됨.\r\n        getDep_Name(dep_id) {\r\n            http\r\n            .post(\"/dep/\" + dep_id)\r\n            .then(response => {\r\n                this.dep_name = response.data;\r\n            })\r\n            .catch(e => {\r\n                /* eslint-disable no-console */\r\n                console.log(e);\r\n            });\r\n        }, // 부서 정보 가져오기\r\n\r\n    },\r\n    mounted() {\r\n        // mounted 될 때 로그인이 되어있는 상태라면\r\n        if (sessionStorage.length > 0) { // 현재 sessionStorage에 요소가 존재하는 상태일 때(로그인이 되어서 sessionStorage에 저장된 상태일 때)\r\n            this.employee.emp_id = sessionStorage.getItem(\"login_id\");\r\n            this.getEmpInfo(this.employee.emp_id); // 사원 정보 가져오기\r\n        }else {\r\n            this.$router.push(\"/\");\r\n        }\r\n    } // End - mounted()\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .myInfo {\r\n        width: 15%;\r\n        height: 40%;\r\n        left: 15px;\r\n        top: 70px;\r\n        position: absolute;\r\n        border: 1px solid gray;\r\n    }\r\n    img {\r\n        width: 100%;\r\n        object-fit: cover;\r\n    }\r\n    .img_div {\r\n        width: 100px;\r\n        height: 100px;\r\n        border-radius: 70%;\r\n        overflow: hidden;\r\n        margin: 15% auto auto;\r\n    }\r\n    .infoDiv {\r\n        margin-top: 20px;\r\n    }\r\n    .empName {\r\n        font-size: 18px;\r\n    }\r\n    .depName {\r\n        color: gray;\r\n    }\r\n</style>"],"sourceRoot":"src/components/main"}]}